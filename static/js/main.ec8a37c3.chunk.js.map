{"version":3,"sources":["imgs/logo.png","imgs/gan.png","imgs/me.jpeg","screens/neuralspace/demo/imgs/city.jpg","screens/neuralspace/demo/imgs/elephants.jpg","screens/neuralspace/demo/imgs/zebras.jpg","data/tasks/computervision/image_generation/imgs/jojo.png","icons/generate.svg","imgs/logocircle.png","imgs/best.mp4","imgs/gd.mp4","screens/neuralspace/demo/imgs/satelite.jpg","screens/neuralspace/demo/imgs/mountain.jpeg","screens/neuralspace/demo/imgs/monc.jpeg","data/tasks/computervision/depth_estimation/cameramotion/imgs/cameramotion.png","data/tasks/computervision/few-shot_learning/imgs/fewshotsegmentation.png","data/tasks/computervision/few-shot_learning/few-shot semantic segmentation/imgs/fewshotsegmentation.png","data/tasks/computervision/image_classification/imgs/image classification.jpeg","data/tasks/computervision/object_detection/imgs/objectdetection.jpg","data/tasks/computervision/object_detection/real-time/imgs/yolov3.png","data/tasks/computervision/semanticsegmentation/imgs/segmentation.jpg","data/tasks/computervision/style_transfer/imgs/style transfer.jpg","data/tasks/computervision/self-supervised_learning/imgs/selfsupervb.png","data/tasks/computervision/super_resolution/imgs/super resolution.jpg","data/tasks/computervision/domain_adaptation/generalization/imgs/generalization.png","data/tasks/computervision/domain_adaptation/unsupervised/imgs/unsupervised.png","data/tasks/computervision/domain_adaptation/partial/imgs/partial.png","imgs/background.jpeg","data/users/avatars/me.jpeg","data/users/avatars/kaiminghe.jpg","data/users/avatars/rohit.png","data/users/avatars/thomas.jpg","data/teams/avatars/logocircle.png","imgs/cvlab.png","screens/neuralspace/demo/imgs/streetview.jpg","data/tasks/imgs/computer vision.jpg","contexts/GlobalContext.js","components/common/base.js","icons/headericons.js","icons/utilities.js","icons/darkmode.js","components/buttons/themeButton.js","components/designHeader.js","components/opsHeader.js","styles.js","components/header.js","screens/subs/nfts/index.js","screens/subs/login/index.js","screens/subs/profile/index.js","components/buttons/myButton.js","hooks/getWindow.js","components/sidebar/components.js","components/sidebar/index.js","components/buttons/folllowButton.js","components/read_engine/index.js","components/visualizer/index.js","components/footer.js","screens/landing/landing1.js","screens/landing/landing2.js","screens/landing/landing3.js","screens/landing/landing4.js","screens/landing/landing5.js","screens/landing/landing6.js","screens/landing/landing7.js","screens/landing/landing8.js","screens/landing/index.js","screens/neuralspace/modelview/components.js","screens/neuralspace/modelview/index.js","components/common/loading.js","screens/neuralspace/inference/index.js","screens/neuralspace/demo/classifier/components.js","screens/neuralspace/demo/utilities.js","screens/neuralspace/demo/classifier/index.js","screens/neuralspace/demo/generator/imagetoimage/components.js","screens/neuralspace/demo/generator/imagetoimage/index.js","hooks/useInput.js","screens/neuralspace/demo/generator/texttoimage/components.js","screens/neuralspace/demo/generator/texttoimage/index.js","screens/neuralspace/demo/generator/index.js","screens/neuralspace/demo/detector/components.js","screens/neuralspace/demo/detector/index.js","screens/neuralspace/demo/transferer/components.js","screens/neuralspace/demo/transferer/index.js","screens/neuralspace/demo/index.js","screens/neuralspace/modelmain/example.js","screens/neuralspace/modelmain/articles/index.js","screens/neuralspace/modelmain/index.js","screens/neuralspace/main/index.js","data/tasks/computervision/denoising/image/index.js","data/tasks/computervision/denoising/saltandpepper/index.js","data/tasks/computervision/denoising/models.js","data/tasks/computervision/denoising/index.js","data/tasks/computervision/depth_estimation/3d/index.js","data/tasks/computervision/depth_estimation/cameramotion/index.js","data/tasks/computervision/depth_estimation/monocular/index.js","data/tasks/computervision/depth_estimation/stereo/index.js","data/tasks/computervision/depth_estimation/stereolidar/index.js","data/tasks/computervision/depth_estimation/models.js","data/tasks/computervision/depth_estimation/index.js","data/tasks/computervision/few-shot_learning/few-shot image classification/index.js","data/tasks/computervision/few-shot_learning/few-shot semantic segmentation/index.js","data/tasks/computervision/few-shot_learning/one-shot learning/index.js","data/tasks/computervision/few-shot_learning/models.js","data/tasks/computervision/few-shot_learning/index.js","data/tasks/computervision/image_classification/knowledge_distillation/index.js","data/tasks/computervision/image_classification/self-supervised/index.js","data/tasks/computervision/image_classification/sequential/index.js","data/tasks/computervision/image_classification/semi-supervised/index.js","data/tasks/computervision/image_classification/finegrained/index.js","data/tasks/computervision/image_classification/smallData/index.js","data/tasks/computervision/image_classification/few-shot/index.js","data/tasks/computervision/image_classification/models.js","data/tasks/computervision/image_classification/index.js","data/tasks/computervision/image_generation/conditional/index.js","data/tasks/computervision/image_generation/face/index.js","data/tasks/computervision/image_generation/imagetoimagetranslation/index.js","data/tasks/computervision/image_generation/texttoimage/index.js","data/tasks/computervision/image_generation/texttoimage/models.js","data/tasks/computervision/image_generation/texttoimage/articles.js","data/tasks/computervision/image_generation/image_inpainting/index.js","data/tasks/computervision/image_generation/models.js","data/tasks/computervision/image_generation/index.js","data/tasks/computervision/object_detection/real-time/index.js","data/tasks/computervision/object_detection/real-time/models.js","data/tasks/computervision/object_detection/fewshot/index.js","data/tasks/computervision/object_detection/rgb-salient/index.js","data/tasks/computervision/object_detection/rgb-d_sailent/index.js","data/tasks/computervision/object_detection/video/index.js","data/tasks/computervision/object_detection/3d/index.js","data/tasks/computervision/object_detection/3d/models.js","data/tasks/computervision/object_detection/models.js","data/tasks/computervision/object_detection/index.js","data/tasks/computervision/semanticsegmentation/3d/index.js","data/tasks/computervision/semanticsegmentation/panoptic/index.js","data/tasks/computervision/semanticsegmentation/scene/index.js","data/tasks/computervision/semanticsegmentation/medical/index.js","data/tasks/computervision/semanticsegmentation/weakly-supervised/index.js","data/tasks/computervision/semanticsegmentation/background_remover/index.js","data/tasks/computervision/semanticsegmentation/background_remover/models.js","data/tasks/computervision/semanticsegmentation/models.js","data/tasks/computervision/semanticsegmentation/index.js","data/tasks/computervision/style_transfer/models.js","data/tasks/computervision/style_transfer/index.js","data/tasks/computervision/self-supervised_learning/models.js","data/tasks/computervision/self-supervised_learning/index.js","data/tasks/computervision/super_resolution/image/index.js","data/tasks/computervision/super_resolution/video/index.js","data/tasks/computervision/super_resolution/3dobject/index.js","data/tasks/computervision/super_resolution/models.js","data/tasks/computervision/super_resolution/index.js","data/tasks/computervision/domain_adaptation/generalization/index.js","data/tasks/computervision/domain_adaptation/unsupervised/index.js","data/tasks/computervision/domain_adaptation/partial/index.js","data/tasks/computervision/domain_adaptation/index.js","data/tasks/computervision/domain_adaptation/models.js","data/tasks/index.js","screens/neuralspace/categorybar.js","screens/neuralspace/index.js","icons/createpost.js","screens/neuralverse/main/common.js","screens/neuralverse/main/modelFeed.js","components/common/friend.js","data/users/index.js","screens/neuralverse/lefts/index.js","screens/neuralverse/rights/index.js","data/teams/index.js","data/feeds/index.js","screens/neuralverse/main/index.js","screens/neuralverse/index.js","screens/neuralstudio/components.js","screens/neuralstudio/designbar.js","screens/neuralstudio/space.js","screens/neuralstudio/index.js","screens/neuralops/index.js","globalStyles.js","App.js","index.js"],"names":["module","exports","__webpack_require__","p","GlobalContext","createContext","ThemeEvent","_useContext","useContext","darkMode","setDarkMode","SideBarEvent","_useContext2","sideBar","setSideBar","VisualizerEvent","_useContext3","visualizer","setVisualizer","GlobalProvider","_ref","children","_useState","useState","_useState2","Object","slicedToArray","_useState3","_useState4","_useState5","_useState6","react_default","a","createElement","Provider","value","Text","styled","span","_templateObject","taggedTemplateLiteral","props","weight","size","lh","color","margin","padding","flex","ff","zIndex","to","us","Flex","div","_templateObject2","align","justify","width","height","bg","circle","br","cursorOpaFalse","opacity","position","shadow","scrollbarFalse","bw","bc","concat","Row","_templateObject3","Col","_templateObject4","Box","_templateObject5","Image","img","_templateObject6","of","ImageWrapper","_templateObject7","CirclePic","image","style","_ref$scale","scale","transform","src","Input","input","_templateObject8","placeholderTextColor","TextArea","textarea","_templateObject9","SpaceIcon","_ref$width","_ref$height","viewBox","fill","xmlns","d","stroke","strokeWidth","ModelIcon","_ref3","_ref3$width","_ref3$height","_ref3$stroke","stroke1","_ref3$stroke2","stroke2","x1","y1","x2","y2","cx","cy","r","VerseIcon","_ref4","_ref4$width","_ref4$height","_ref4$stroke","_ref4$stroke2","x","y","DesignIcon","_ref7","_ref7$width","_ref7$height","_ref7$stroke","_ref7$stroke2","_ref7$stroke3","stroke3","StudioLight","_ref8","_ref8$width","_ref8$height","_ref8$stroke","_ref8$stroke2","CloseIcon","UpDown","SearchIcon","_ref5","_ref5$width","_ref5$height","_ref5$stroke","LikeIcon","_ref6","_ref6$width","_ref6$height","_ref6$stroke","CommentIcon","ShareIcon","RePostIcon","_ref9","_ref9$width","_ref9$height","_ref9$stroke","PaperIcon","_ref10","_ref10$width","_ref10$height","_ref10$stroke","PdfIcon","_ref11","_ref11$width","_ref11$height","CodeIcon","_ref12","_ref12$width","_ref12$height","_ref12$stroke","BenchMarkIcon","_ref13","_ref13$width","_ref13$height","_ref13$stroke","DemoIcon","_ref14","_ref14$width","_ref14$height","_ref14$stroke","PaperswithCodeIcon","_ref15","_ref15$width","_ref15$height","_ref15$stroke","BackIcon","_ref16","_ref16$width","_ref16$height","GithubIcon","_ref17","_ref17$width","_ref17$height","_ref17$stroke","fillRule","clipRule","ColabIcon","_ref18","_ref18$width","_ref18$height","_ref18$stroke","role","id","SendIcon","_ref20","_ref20$width","_ref20$height","_ref20$stroke","MoonIcon","SunIcon","_ref2","_ref2$width","_ref2$height","ThemeToggle","useEffect","isDarkEnabled","styles","getComputedStyle","document","body","black","getPropertyValue","white","docEl","documentElement","setProperty","querySelector","classList","add","remove","updateTheme","className","htmlFor","darkmode_SunIcon","darkmode_MoonIcon","name","type","checked","onClick","DesignHeader","route","headerShown","transition","overflow","minWidth","headericons_VerseIcon","OpsHeader","hueBlue","hueStyler","bgStyler","opa","darkBgopa","bgopa","GlobalBgStyler","HeaderBox","header_templateObject","Header","_ref$loggedIn","loggedIn","setRoute","hoverDataset","setHoverDataset","hoverTrend","setHoverTrend","_useState7","_useState8","hoverNft","setHoverNft","_ThemeEvent","_useState9","_useState10","setHeaderShown","top","backdropFilter","href","logo","left","designHeader","opsHeader","hover","onMouseOver","onMouseLeave","headericons_SpaceIcon","headericons_DesignIcon","utilities_CodeIcon","themeButton","base_CirclePic","me","Fragment","Nfts","display","Login","Profile","MyButton","label","setHover","right","bottom","Button","window","outerHeight","Height","outerWidth","components_templateObject","Model","components_Box","flexDirection","maxHeight","maxWidth","gan","sideBarHeight","SideBar","_React$createElement","objectDestructuringEmpty","model","setModel","_SideBarEvent","marginTop","overflowY","utilities_CloseIcon","defineProperty","sidebar_components_Model","T","folllowButton_templateObject","FollowButton","follow","setFollow","borderColor","borderStyle","borderWidth","ToolBox","title","rx","ry","strokeLinecap","ReadEngine","tabIndex","preserveAspectRatio","read_engine_SideBar","read_engine_ToolBox","VisualizerModal","alignSelf","justifySelf","logocircle","visualizer_CustomizeModelBtn","read_engine","CustomizeModelBtn","ato","Visualizer","_VisualizerEvent","visualizer_VisualizerModal","textstyle","footer_templateObject","fontSize","fontWeight","Footer","Index","textShadow","lib_default","mute","playing","loop","url","earth","muted","objectFit","gd","Landing","backgroundColor","landing1","landing8","landing2","landing3","landing4","landing5","landing6","landing7","footer","DatasetLink","modelview_components_templateObject","Dataset","arg","ModelBox","components_templateObject2","ModelConfig","utilities_PaperIcon","headericons_StudioLight","demo","utilities_DemoIcon","content","subtitle","components_ModelConfig","ModelViewTop","task","subTask","setOptions","options","optionBtn","setOptionbtn","toUpperCase","utilities_UpDown","utilities_BenchMarkIcon","components_Dataset","datasets","map","item","key","ModelView","setOpacity","_useState11","_useState12","_task","set_Task","_useState13","_useState14","_subTask","set_subTask","setTimeout","modelview_ModelViewTop","undefined","models","modelview_components","index","Loading","InputAnyImage","text","Timer","defaultSec","time","setTime","setInterval","_time","postRequest","api_url","setResult","data","Array","isArray","console","log","fetch","method","JSON","stringify","headers","Content-Type","then","response","status","json","json_response","DragAndDrop","setImg","accept","border","textAlign","ImgWrap","classifier_components_templateObject","imgs","city","elephant","zebra","Examples","run","displayImage","InputBar","open","setOpen","components_DragAndDrop","components_Examples","toDataURL","blob","Promise","resolve","reject","reader","FileReader","onloadend","result","onerror","readAsDataURL","Classifier","setDisplayImage","isLoading","setIsLoading","animate","setAnimate","setLabel","changer","components_InputBar","dataUrl","api","loading_Loading","loading_InputAnyImage","loading_Timer","confidences","confidence","toFixed","imagetoimage_components_templateObject","components_ImgWrap","imagetoimage_components_DragAndDrop","imagetoimage_components_Examples","SelectBtn","imagetoimage_templateObject","ImagetoImage","modelSelect","setModelSelect","_model","set_Model","imagetoimage_components_InputBar","length","useInput","initialValue","setValue","onChange","e","target","_useInput","setHeight","useRef","ref","current","scrollHeight","placeholder","utilities_SendIcon","texttoimage_templateObject","TextToImage","texttoimage_components_InputBar","textPostRequest","texttoimage_SelectBtn","Generator","subtype","imagetoimage","texttoimage","detector_components_templateObject","satelite","detector_components_ImgWrap","detector_components_DragAndDrop","detector_components_Examples","Detector","displayImage2","setDisplayImage2","detector_components_InputBar","colorer","transferer_components_templateObject","mountain","monc","TransferExamples","transferer_components_ImgWrap","transferer_components_DragAndDrop","components_TransferExamples","Transferer","inputs","setInputs","transferer_components_InputBar","raw","copy","Demo","split","classifier","detector","transferer","generator","example","rowspan","data-name","stroke-linecap","stroke-linejoin","stroke-width","ArticleBoxWrap","articles_templateObject","ArticleBox","Articles","articles","articles_ArticleBox","ModelSpecs","LeaderBoards","Task","tasks","ModelMain","neuralspace_demo","modelmain_Task","modelmain_LeaderBoards","modelmain_ModelSpecs","Title","utilities_BackIcon","minHeight","marginLeft","paper","Directory","conference","published_date","authors","featured","Buttons","replace","utilities_PdfIcon","abstract","code","utilities_GithubIcon","colab","utilities_ColabIcon","utilities_PaperswithCodeIcon","TitleDescription","setTask","setSubTask","main_Title","main_Directory","description","main_Buttons","Main","categoryBar","main_TitleDescription","modelmain","modelview","imgcredit","SaltandPepper","Denoising","subtasks","saltandpepper","_3d","DomainGeneralization","cameramotion","Moncular","Stereo","descriptioncredit","StereoLidar","DepthEstimation","stereo","monocular","stereolidar","FewShotImageClassification","FewShotSegmentation","fewshotsegmentation","OneShotLearning","FewShotLearning","fewshotimageclassification","fewshotsemanticsegmentation","oneshotlearning","KnowledgeDistillation","SelfSupervised","Sequential","SemiSupervised","FineGrained","SmallData","FewShot","writer_id","benchmark","studio","lib","official","paperswithcode","ImageClassification","imageclassificationimg","knowledgeDistillation","selfsupervised","sequentail","semisupervised","finegrained","smalldata","fewshot","Conditional","Face","ImageToImageTranslation","ImageImpainting","jojo","ImageGeneration","imagetoimagetranslation","imageinpaiting","conditional","face","RealTime","yolov3img","Fewshot","RGBSalient","RGBDSalient","Video","ObjectDetection","objectdetectionimg","real_time","rgbsailent","rgbdsalient","video","_3dSegmentation","PanopticSegmentation","SceneSegmentation","MedicalSegmentation","WeaklySupervised","backgroundRemover","SemanticSegmentation","segmentationimg","panopticsegmentation","scenesegmentation","medicalsegmentation","weaklysegmentation","StyleTransfer","styletransferimg","SelfSupervisedLearning","selfsupervbimg","_3dObject","SuperResolution","superresolutionimg","generalization","Unsupervised","unsupervised","Partial","partial","DomainAdaptation","demoNum","benchmarkNum","paperswithcodeNum","imageClassification","superResolution","objectDetection","styleTransfer","imageGeneration","semanticsegmentation","selfSupervisedLearning","depthEstimation","fewShotLearning","domainAdaptation","denoising","CategoryWrap","categorybar_templateObject","TaskWrap","categorybar_templateObject2","setAbove","CategoryBar","setCategoryBar","above","utilities_SearchIcon","borderBottomWidth","borderBottomColor","letterSpacing","borderBottomStyle","categorybar_Task","NeuralSpace","paddingTop","main","categorybar","ImageIcon","_ref$stroke","VideoIcon","_ref2$stroke","DocumentIcon","EventIcon","FeedTop","user","Components","userId","avatar","briefIntroduction","Bottom","borderTopWidth","borderTopColor","borderTopStyle","utilities_LikeIcon","utilities_CommentIcon","utilities_RePostIcon","utilities_ShareIcon","common_FeedTop","modelFeed_ModelConfig","thumbnail","common_Bottom","Friend","marginBottom","folllowButton","lineHeight","users","fullIntroduction","workingPlace","location","contact","email","phone","homepage","github","twitter","activities","googleScholar","awards","researchInterests","rohit","kaiming","thomas","ProfileBox","RecommendFriends","slice","friend","Lefts","lefts_ProfileBox","lefts_RecommendFriends","Search","Hashtag","rights_templateObject","Trendings","rights_Search","Rights","rights_Trendings","teams","fullIntroudction","members","manager","vice_manager","papers","feeds","date","feautred","WriteFeed","Date","day","String","borderTop","borderLeft","borderRight","borderBottom","createpost_ImageIcon","createpost_VideoIcon","headericons_ModelIcon","createpost_DocumentIcon","createpost_EventIcon","lefts","main_WriteFeed","modelFeed","rights","Trends","neuralverse_main","TopConfig","bar","setBar","DesignBar","Space","components_TopConfig","Design","space","designbar","NeuralOps","GlobalStyle","createGlobalStyle","globalStyles_templateObject","App","overflowX","globalStyles","header","landing","nfts","login","profile","neuralspace","neuralverse","neuralstudio","neuralops","sidebar","myButton","components_visualizer","ReactDOM","render","StrictMode","contexts_GlobalContext","src_App","getElementById"],"mappings":"kFAAAA,EAAAC,QAAiBC,EAAAC,EAAuB,mDCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,iDCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,iDCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,kDCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,uDCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,yDCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,2DCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,sDCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,wDCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,kDCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,gDCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,sDCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,uDCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,mDCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,0DCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,iECAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,iECAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,mECAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,6DCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,oDCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,0DCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,4DCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,yDCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,8DCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,4DCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,0DCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,qDCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,yDCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,iDCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,uDCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,mDCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,oDCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,wICAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,0FCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,wDCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,+MCElCC,EAAgB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","file":"static/js/main.ec8a37c3.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.77022b1f.png\";","module.exports = __webpack_public_path__ + \"static/media/gan.217ad21e.png\";","module.exports = __webpack_public_path__ + \"static/media/me.6177414b.jpeg\";","module.exports = __webpack_public_path__ + \"static/media/city.1ac50d22.jpg\";","module.exports = __webpack_public_path__ + \"static/media/elephants.dc5d8d90.jpg\";","module.exports = __webpack_public_path__ + \"static/media/zebras.36bf930a.jpg\";","module.exports = __webpack_public_path__ + \"static/media/jojo.ffc5e361.png\";","module.exports = __webpack_public_path__ + \"static/media/generate.e3f97e13.svg\";","module.exports = __webpack_public_path__ + \"static/media/logocircle.db2e1285.png\";","module.exports = __webpack_public_path__ + \"static/media/best.db06e2f4.mp4\";","module.exports = __webpack_public_path__ + \"static/media/gd.d1e7aee6.mp4\";","module.exports = __webpack_public_path__ + \"static/media/satelite.bedf6a1b.jpg\";","module.exports = __webpack_public_path__ + \"static/media/mountain.ec15cce5.jpeg\";","module.exports = __webpack_public_path__ + \"static/media/monc.23ab5362.jpeg\";","module.exports = __webpack_public_path__ + \"static/media/cameramotion.b286947f.png\";","module.exports = __webpack_public_path__ + \"static/media/fewshotsegmentation.9ed7ba63.png\";","module.exports = __webpack_public_path__ + \"static/media/fewshotsegmentation.9ed7ba63.png\";","module.exports = __webpack_public_path__ + \"static/media/image classification.c8491766.jpeg\";","module.exports = __webpack_public_path__ + \"static/media/objectdetection.90f7d919.jpg\";","module.exports = __webpack_public_path__ + \"static/media/yolov3.9b235650.png\";","module.exports = __webpack_public_path__ + \"static/media/segmentation.d53478c8.jpg\";","module.exports = __webpack_public_path__ + \"static/media/style transfer.4659ed8c.jpg\";","module.exports = __webpack_public_path__ + \"static/media/selfsupervb.61921a3c.png\";","module.exports = __webpack_public_path__ + \"static/media/super resolution.5d60f59b.jpg\";","module.exports = __webpack_public_path__ + \"static/media/generalization.54021714.png\";","module.exports = __webpack_public_path__ + \"static/media/unsupervised.fcf583ad.png\";","module.exports = __webpack_public_path__ + \"static/media/partial.05498c50.png\";","module.exports = __webpack_public_path__ + \"static/media/background.b67ca5e8.jpeg\";","module.exports = __webpack_public_path__ + \"static/media/me.6177414b.jpeg\";","module.exports = __webpack_public_path__ + \"static/media/kaiminghe.689fa05d.jpg\";","module.exports = __webpack_public_path__ + \"static/media/rohit.50d86237.png\";","module.exports = __webpack_public_path__ + \"static/media/thomas.dcae42a0.jpg\";","module.exports = __webpack_public_path__ + \"static/media/logocircle.db2e1285.png\";","module.exports = __webpack_public_path__ + \"static/media/cvlab.76b6db16.png\";","module.exports = __webpack_public_path__ + \"static/media/streetview.dc6c314a.jpg\";","module.exports = __webpack_public_path__ + \"static/media/computer vision.44f88a0d.jpg\";","import React, {useState, useContext, createContext} from 'react';\r\n\r\nconst GlobalContext = createContext();\r\n\r\nexport const GlobalProvider = ({children}) => {\r\n    const [darkMode, setDarkMode] = useState(true);\r\n    const [sideBar, setSideBar] = useState(false);\r\n    const [visualizer, setVisualizer] = useState(false);\r\n    return (\r\n        <GlobalContext.Provider\r\n            value={{\r\n                darkMode: darkMode, \r\n                setDarkMode: setDarkMode,\r\n                sideBar: sideBar, \r\n                setSideBar: setSideBar,\r\n                visualizer: visualizer,\r\n                setVisualizer: setVisualizer,\r\n            }}>\r\n            {children}\r\n        </GlobalContext.Provider>\r\n    )\r\n}\r\n\r\nexport const ThemeEvent = () => {\r\n    const {darkMode, setDarkMode} = useContext(GlobalContext);\r\n    return {darkMode, setDarkMode};\r\n}\r\n\r\nexport const SideBarEvent = () => {\r\n    const {sideBar, setSideBar} = useContext(GlobalContext);\r\n    return {sideBar, setSideBar};\r\n}\r\n\r\nexport const VisualizerEvent = () => {\r\n    const {visualizer, setVisualizer} = useContext(GlobalContext);\r\n    return {visualizer, setVisualizer};\r\n}\r\n\r\nexport default GlobalProvider;","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport {ThemeEvent} from '../../contexts/GlobalContext';\r\n\r\nexport const Text = styled.span`\r\n    font-weight: ${props => props.weight};\r\n    font-size: ${props => props.size ? props.size : 15}px;\r\n    line-height: ${props => props.lh}px;\r\n    color: ${props => props.color ? props.color : ThemeEvent().darkMode ? \"white\" : \"black\"};\r\n    ${props => props.margin};\r\n    ${props => props.padding};\r\n    flex: ${props => props.flex};\r\n    font-family: ${props => props.ff};\r\n    z-index: ${(props) => props.zIndex};\r\n    ${props => props.to ? \"cursor: pointer;\" : null};\r\n    ${props => props.to ? \":hover { opacity: 0.85 }\" : null};\r\n    ${props => props.us === \"none\" ? \"user-select: none\" : null};\r\n    transition: all 500ms ease;\r\n`;\r\n\r\nexport const Flex = styled.div`\r\n    display: flex;\r\n    align-items: ${props => props.align};\r\n    justify-content: ${props => props.justify};\r\n    ${props => props.margin};\r\n    width: ${props => props.size ? props.size : props.width};\r\n    height: ${props => props.size ? props.size : props.height};\r\n    background-color: ${props => props.bg};\r\n    ${props => props.padding};\r\n    border-radius: ${props => props.circle ? '50%' : props.br};\r\n    box-sizing: border-box;\r\n    flex: ${props => props.flex};\r\n    z-index: ${props => props.zIndex};\r\n    transition: all 500ms ease;\r\n    ${props => props.to ? \"cursor: pointer;\" : null};\r\n    ${props => props.to && !props.cursorOpaFalse ? \":hover { opacity: 0.85 }\" : null};\r\n    ${props => props.us === \"none\" ? \"user-select: none\" : null};\r\n    opacity: ${props => props.opacity};\r\n    position: ${props => props.position};\r\n    :hover {\r\n        img {\r\n            opacity: ${(props) => props.to && !props.cursorOpaFalse ? 0.85 : 1}\r\n        }\r\n        span {\r\n            opacity: ${(props) => props.to && !props.cursorOpaFalse ? 0.85 : 1}\r\n        }\r\n    };\r\n    ${(props) => props.shadow && `transition: background-color .3s,color .3s,box-shadow .3s;`}\r\n    ${(props) => props.shadow && `box-shadow: 0 0 0.1rem rgb(0 0 0 / 10%), 0 0.15rem 0.9rem rgb(0 0 0 / 10%);`};\r\n    ${(props) => props.scrollbarFalse && `\r\n    ::-webkit-scrollbar {\r\n        display: none;\r\n        -ms-overflow-style: none;  /* IE and Edge */\r\n        scrollbar-width: none;\r\n      }`};\r\n    ${(props) => (props.bw || props.bc) && `border: ${props.bw ? props.bw : 1}px solid ${props.bc ? props.bc : \"white\"} `}\r\n`;\r\n\r\nexport const Row = styled(Flex)`\r\n    flex-direction: row;\r\n`;\r\n\r\nexport const Col = styled(Flex)`\r\n    flex-direction: column;\r\n`;\r\n\r\nexport const Box = styled(Col)`\r\n    transition: background-color .3s,color .3s,box-shadow .3s;\r\n    box-shadow: 0 0 0.1rem rgb(0 0 0 / 10%), 0 0.15rem 0.9rem rgb(0 0 0 / 10%);\r\n    border: 0;\r\n    ::-webkit-scrollbar {\r\n        display: none;\r\n        -ms-overflow-style: none;  /* IE and Edge */\r\n        scrollbar-width: none;\r\n      }\r\n`;\r\n\r\nexport const Image = styled.img`\r\n    position: ${props => props.position};\r\n    object-fit: ${props => props.of};\r\n    ${props => props.margin};\r\n    width: ${props => props.width};\r\n    height: ${props => props.height};\r\n    opacity: ${props => props.opacity};\r\n    z-index: ${(props) => props.zIndex};\r\n`;\r\n\r\nexport const ImageWrapper = styled(Flex)`\r\n    align-items: center;\r\n    justify-content: center;\r\n    border-radius: 50%;\r\n    overflow: hidden;\r\n    width: ${(props) => props.width}px;\r\n    height: ${(props) => props.height}px;\r\n    background-color: ${(props) => props.bg};\r\n    margin: ${(props) => props.margin ? props.margin : 0}px;\r\n`;\r\n\r\nexport const CirclePic = ({image, size, flex, margin, bg, of, style, scale = 1}) => {\r\n    return (\r\n        <ImageWrapper style={style} bg={bg} margin={margin} width={size} height={size} flex={flex}>\r\n            <Image of={of} width={size+'px'} height={size+'px'} style={{transform: `scale(${scale})`}} src={image}/>\r\n        </ImageWrapper>\r\n    )\r\n}\r\n\r\nexport const Input = styled.input`\r\n    ${props => props.margin};\r\n    width: ${props => props.width};\r\n    height: ${props => props.height};\r\n    background-color: ${props => props.bg};\r\n    ${props => props.padding};\r\n    border-radius: ${props => props.circle ? '50%' : props.br};\r\n    box-sizing: border-box;\r\n    flex: ${props => props.flex};\r\n    z-index: ${props => props.zIndex};\r\n    font-weight: ${props => props.weight};\r\n    font-size: ${props => props.size ? props.size : 15}px;\r\n    line-height: ${props => props.lh}px;\r\n    color: ${props => props.color};\r\n    border: 0;\r\n    color: ${(props) => props.color ? props.color : (ThemeEvent().darkMode ? \"white\" : \"black\")};\r\n    transition: all 300ms ease;\r\n    ::placeholder {\r\n        color: ${(props) => props.placeholderTextColor};\r\n    };\r\n`;\r\n\r\nexport const TextArea = styled.textarea`\r\n    ${props => props.margin};\r\n    width: ${props => props.width};\r\n    height: ${props => props.height};\r\n    background-color: ${props => props.bg};\r\n    ${props => props.padding};\r\n    border-radius: ${props => props.circle ? '50%' : props.br};\r\n    box-sizing: border-box;\r\n    flex: ${props => props.flex};\r\n    z-index: ${props => props.zIndex};\r\n    font-weight: ${props => props.weight};\r\n    font-size: ${props => props.size ? props.size : 15}px;\r\n    line-height: ${props => props.lh}px;\r\n    color: ${props => props.color};\r\n    border: 0;\r\n    color: ${(props) => props.color ? props.color : (ThemeEvent().darkMode ? \"white\" : \"black\")};\r\n    transition: all 300ms ease;\r\n    ::placeholder {\r\n        color: ${(props) => props.placeholderTextColor};\r\n    };\r\n    resize: none;\r\n    ::-webkit-scrollbar {\r\n        display: none;\r\n    }\r\n`;","import React from 'react';\r\n\r\nexport const SpaceIcon = ({width = 99, height = 134}) => (\r\n    <svg width={width} height={height} viewBox=\"0 0 99 134\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n        <path d=\"M6.04034 84.8608L49.5 67.9367L92.9597 84.8608L49.5 103.121L6.04034 84.8608Z\" stroke=\"#9E35AD\" strokeWidth=\"5\"/>\r\n        <path d=\"M6.04034 65.8608L49.5 48.9367L92.9597 65.8608L49.5 84.121L6.04034 65.8608Z\" stroke=\"#25A2F9\" strokeWidth=\"5\"/>\r\n        <path d=\"M6.04034 49.5704L49.5 32.6463L92.9597 49.5704L49.5 67.8306L6.04034 49.5704Z\" stroke=\"#ED2166\" strokeWidth=\"5\"/>   \r\n    </svg>\r\n)\r\n\r\nexport const CubeIcon = ({width = 92, height = 91, stroke=\"#25A2F9\"}) => (\r\n    <svg width={width} height={height} viewBox=\"0 0 92 91\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n        <path d=\"M44.5 1C45.2452 0.701813 46.2548 0.701816 47 1.00001L87.5448 17.4788C88.7317 17.9535 89.5092 19.1027 89.5092 20.3805C89.5092 20.4918 89.5036 20.6023 89.4917 20.7113C89.493 20.7508 89.4942 20.7905 89.4942 20.8303V68.9441C89.4942 70.2166 88.7223 71.3622 87.543 71.8403L46.9619 88.2928C46.5537 88.4578 46.131 88.531 45.717 88.5216C45.3165 88.5228 44.914 88.4472 44.532 88.2928L3.95095 71.8403C2.77164 71.3622 2.00002 70.2166 2.00002 68.9441V20.8303C2.00002 20.7327 2.00452 20.636 2.01327 20.5406C2.01058 20.4875 2.0092 20.4341 2.0092 20.3805C2.00908 19.1027 2.78689 17.9535 3.97327 17.4788L44.5 1ZM48 83.2236L85.5 68.5V22L48 36.8545V83.2236ZM6.00002 21.7927V68.9441L43.5 83.2236V36.5753L6.00002 21.7927ZM45.5 4.5L9.5 19L46 33.5L83 19.5L45.5 4.5Z\" fill=\"#ED2166\"/>\r\n        <path d=\"M4.00002 58V69.3286C4.00002 69.7347 4.24556 70.1004 4.62138 70.2542L15 74.5\" stroke=\"#25A2F9\" strokeWidth=\"4\"/>\r\n        <path d=\"M17 14L4.83393 19.2396C4.46712 19.3976 4.22948 19.7587 4.22948 20.1581L4.22948 30.4986\" stroke=\"#25A2F9\" strokeWidth=\"4\"/>\r\n        <path d=\"M87.5 29.5L87.4229 20.3007C87.4196 19.9048 87.183 19.5481 86.8196 19.3911L75.5 14.5\" stroke=\"#25A2F9\" strokeWidth=\"4\"/>\r\n        <path d=\"M76 74.5L86.8987 69.7614C87.2639 69.6027 87.5 69.2425 87.5 68.8444L87.5 59\" stroke=\"#25A2F9\" strokeWidth=\"4\"/>\r\n        <path d=\"M34.0621 81.6507L45.6188 86.3452C45.863 86.4444 46.1365 86.4431 46.3798 86.3418L58 81.5\" stroke=\"#25A2F9\" strokeWidth=\"4\"/>\r\n        <path d=\"M34 30.5L45.6279 35.345C45.8667 35.4444 46.1346 35.4476 46.3756 35.3537L58 30.8247\" stroke=\"#25A2F9\" strokeWidth=\"4\"/>\r\n        <path d=\"M57 7L46.0641 2.73382C45.8294 2.64226 45.5687 2.64266 45.3343 2.73494L34.5 7.00002\" stroke=\"#25A2F9\" strokeWidth=\"4\"/>\r\n        <path d=\"M4.5 19L16.5 24\" stroke=\"#25A2F9\" strokeWidth=\"4\"/>\r\n        <path d=\"M86.0208 19.5355L74 24.4853\" stroke=\"#25A2F9\" strokeWidth=\"4\"/>\r\n    </svg>\r\n    // <svg width={width} height={height} viewBox=\"0 0 89 88\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n    //     <path d=\"M43.1109 0.50001C43.8561 0.201823 44.6874 0.201816 45.4327 0.50001L86.0581 16.7551C87.2449 17.2298 88.0224 18.379 88.0224 19.6568C88.0224 19.7682 88.0168 19.8786 88.0049 19.9877C88.0062 20.0272 88.0074 20.0668 88.0074 20.1067V68.2204C88.0074 69.4929 87.2356 70.6386 86.0562 71.1167L45.4751 87.5692C45.0669 87.7342 44.6442 87.8073 44.2302 87.798C43.8297 87.7992 43.4272 87.7236 43.0452 87.5692L2.46418 71.1167C1.28487 70.6386 0.513245 69.4929 0.513245 68.2204V20.1067C0.513245 20.009 0.517745 19.9123 0.526495 19.8169C0.523807 19.7638 0.522432 19.7104 0.522432 19.6568C0.522307 18.379 1.30012 17.2298 2.48649 16.7551L43.1109 0.50001ZM46.5132 82.5L84.0132 67.7764V21.2764L46.5132 36.2764V82.5ZM4.51324 20.1067V68.2204L42.0132 82.5V36.2764L4.51324 20.1067ZM44.2717 3.5L7.5 18L44.2717 32.5358L82.5 18L44.2717 3.5Z\" fill={stroke} />\r\n    // </svg>\r\n);\r\n\r\n\r\nexport const ModelIcon = ({width = 92, height = 126, stroke1=\"#25A2F9\", stroke2 = \"#9C15B0\"}) => (\r\n    <svg width={width} height={height} viewBox=\"0 0 92 126\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n        <line x1=\"14.4061\" y1=\"13.0862\" x2=\"77.4061\" y2=\"41.0862\" stroke={stroke1} strokeWidth=\"3\"/>\r\n        <line x1=\"13.6838\" y1=\"62.0513\" x2=\"76.6838\" y2=\"41.0513\" stroke={stroke1} strokeWidth=\"3\"/>\r\n        <line x1=\"14.7385\" y1=\"13.3257\" x2=\"77.7385\" y2=\"82.3257\" stroke={stroke1} strokeWidth=\"3\"/>\r\n        <line x1=\"13.5939\" y1=\"110.086\" x2=\"76.5939\" y2=\"82.0862\" stroke={stroke1} strokeWidth=\"3\"/>\r\n        <line x1=\"14.3026\" y1=\"62.0469\" x2=\"77.3026\" y2=\"82.0469\" stroke={stroke1} strokeWidth=\"3\"/>\r\n        <line x1=\"13.2615\" y1=\"110.326\" x2=\"76.2615\" y2=\"41.3257\" stroke={stroke1} strokeWidth=\"3\"/>\r\n        <circle cx=\"14.0059\" cy=\"14.0059\" r=\"8.1\" transform=\"rotate(-52.9579 14.0059 14.0059)\" fill={stroke2} stroke={stroke2} strokeWidth=\"3.8\"/>\r\n        <circle cx=\"14.0059\" cy=\"111.006\" r=\"8.1\" transform=\"rotate(-52.9579 14.0059 111.006)\" fill={stroke2} stroke={stroke2} strokeWidth=\"3.8\"/>\r\n        <circle cx=\"77.006\" cy=\"42.0059\" r=\"8.1\" transform=\"rotate(-52.9579 77.006 42.0059)\" fill={stroke2} stroke={stroke2} strokeWidth=\"3.8\"/>\r\n        <circle cx=\"77.006\" cy=\"83.006\" r=\"8.1\" transform=\"rotate(-52.9579 77.006 83.006)\" fill={stroke2} stroke={stroke2} strokeWidth=\"3.8\"/>\r\n        <circle cx=\"14.0059\" cy=\"63.0059\" r=\"8.1\" transform=\"rotate(-52.9579 14.0059 63.0059)\" fill={stroke2} stroke={stroke2} strokeWidth=\"3.8\"/>\r\n    </svg>\r\n);\r\n\r\n    \r\nexport const VerseIcon = ({width = 104, height = 91, stroke1=\"#25A2F9\", stroke2 = \"#ED2166\"}) => (\r\n    <svg width={width} height={height} viewBox=\"0 0 104 91\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n        <rect x=\"2.5\" y=\"2.5\" width=\"74\" height=\"55.7931\" stroke={stroke1} strokeWidth=\"5\"/>\r\n        <rect x=\"27.5\" y=\"32.5\" width=\"74\" height=\"55.7931\" stroke={stroke2} strokeWidth=\"5\"/>\r\n    </svg>\r\n);\r\n\r\n    \r\nexport const NftIcon = ({width = 157, height = 157, stroke1=\"#ED2166\", stroke2 = \"#25A2F9\", stroke3 = \"#9D15B0\"}) => (\r\n    <svg width={width} height={height} viewBox=\"0 0 157 157\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n        <line x1=\"57.0483\" y1=\"48.5642\" x2=\"109.048\" y2=\"79.5642\" stroke={stroke1} strokeWidth=\"10\"/>\r\n        <line x1=\"54.8094\" y1=\"110.653\" x2=\"109.809\" y2=\"74.6532\" stroke={stroke1} strokeWidth=\"10\"/>\r\n        <circle cx=\"57.0089\" cy=\"49.0089\" r=\"12.5\" transform=\"rotate(-52.9579 57.0089 49.0089)\" fill={stroke2} stroke={stroke2} strokeWidth=\"4\"/>\r\n        <circle cx=\"57.0089\" cy=\"110.009\" r=\"12.5\" transform=\"rotate(-52.9579 57.0089 110.009)\" fill={stroke2} stroke={stroke2} strokeWidth=\"4\"/>\r\n        <circle cx=\"112.009\" cy=\"78.0089\" r=\"12.5\" transform=\"rotate(-52.9579 112.009 78.0089)\" fill={stroke2} stroke={stroke2} strokeWidth=\"4\"/>\r\n        <circle cx=\"78.5\" cy=\"78.5\" r=\"73.5\" stroke={stroke3} strokeWidth=\"10\"/>\r\n    </svg>\r\n);\r\n\r\nexport const NotiIcon = ({width = 55, height = 56, stroke=\"black\"}) => (\r\n    <svg width={width} height={height} viewBox=\"0 0 55 56\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n        <path d=\"M47 20.9636V49C47 51.7614 44.7614 54 42 54H7C4.23858 54 2 51.7614 2 49V13C2 10.2386 4.23858 8 7 8H33.0909\" stroke={stroke} strokeWidth=\"3.8\"/>\r\n        <circle cx=\"46\" cy=\"9\" r=\"7.5\" stroke={stroke} strokeWidth=\"3.8\"/>\r\n    </svg>\r\n)\r\n\r\nexport const DesignIcon = ({width = 477, height = 241, stroke1 = \"#25A2F9\", stroke2 = \"#ED2166\", stroke3= \"#9C15B0\"}) => (\r\n    <svg width={width} height={height} viewBox=\"0 0 477 241\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n        <line x1=\"297.144\" y1=\"38.4917\" x2=\"223.003\" y2=\"205.308\" stroke={stroke1} strokeWidth=\"8\"/>\r\n        <line x1=\"167.52\" y1=\"35.9634\" x2=\"223.126\" y2=\"202.78\" stroke={stroke1} strokeWidth=\"8\"/>\r\n        <line x1=\"296.306\" y1=\"39.6549\" x2=\"113.602\" y2=\"206.471\" stroke={stroke1} strokeWidth=\"8\"/>\r\n        <line x1=\"40.3\" y1=\"35.6487\" x2=\"114.441\" y2=\"202.465\" stroke={stroke1} strokeWidth=\"8\"/>\r\n        <line x1=\"167.536\" y1=\"38.1292\" x2=\"114.578\" y2=\"204.945\" stroke={stroke1} strokeWidth=\"8\"/>\r\n        <line x1=\"39.4616\" y1=\"34.4855\" x2=\"222.165\" y2=\"201.302\" stroke={stroke1} strokeWidth=\"8\"/>\r\n        <line x1=\"455.019\" y1=\"100.8\" x2=\"358.204\" y2=\"214.857\" stroke={stroke2} strokeWidth=\"8\"/>\r\n        <line x1=\"358.265\" y1=\"96.3451\" x2=\"449.776\" y2=\"210.401\" stroke={stroke2} strokeWidth=\"8\"/>\r\n        <circle cx=\"355.592\" cy=\"98.5924\" r=\"15.0585\" transform=\"rotate(37.0421 355.592 98.5924)\" fill={stroke3} stroke={stroke3} strokeWidth=\"6\"/>\r\n        <circle cx=\"355.592\" cy=\"212.649\" r=\"15.0585\" transform=\"rotate(37.0421 355.592 212.649)\" fill={stroke3} stroke={stroke3} strokeWidth=\"6\"/>\r\n        <circle cx=\"452.408\" cy=\"212.649\" r=\"15.0585\" transform=\"rotate(37.0421 452.408 212.649)\" fill={stroke3} stroke={stroke3} strokeWidth=\"6\"/>\r\n        <circle cx=\"452.408\" cy=\"98.5924\" r=\"15.0585\" transform=\"rotate(37.0421 452.408 98.5924)\" fill={stroke3} stroke={stroke3} strokeWidth=\"6\"/>\r\n        <circle cx=\"293.93\" cy=\"37.086\" r=\"23.9788\" transform=\"rotate(37.0421 293.93 37.086)\" fill={stroke3} stroke={stroke3} strokeWidth=\"6\"/>\r\n        <circle cx=\"37.0859\" cy=\"37.086\" r=\"23.9788\" transform=\"rotate(37.0421 37.0859 37.086)\" fill={stroke3} stroke={stroke3} strokeWidth=\"6\"/>\r\n        <circle cx=\"219.789\" cy=\"203.902\" r=\"23.9788\" transform=\"rotate(37.0421 219.789 203.902)\" fill={stroke3} stroke={stroke3} strokeWidth=\"6\"/>\r\n        <circle cx=\"111.227\" cy=\"203.902\" r=\"23.9788\" transform=\"rotate(37.0421 111.227 203.902)\" fill={stroke3} stroke={stroke3} strokeWidth=\"6\"/>\r\n        <circle cx=\"164.184\" cy=\"37.086\" r=\"23.9788\" transform=\"rotate(37.0421 164.184 37.086)\" fill={stroke3} stroke={stroke3} strokeWidth=\"6\"/>\r\n    </svg>\r\n)\r\n\r\nexport const StudioLight = ({width = 332, height = 241, stroke1 = \"#25A2F9\", stroke2 = \"#9C15B0\"}) => (\r\n    <svg width={width} height={height} viewBox=\"0 0 332 241\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n        <line x1=\"297.144\" y1=\"38.4917\" x2=\"223.003\" y2=\"205.308\" stroke={stroke1} strokeWidth=\"7\"/>\r\n        <line x1=\"167.52\" y1=\"35.9634\" x2=\"223.125\" y2=\"202.78\" stroke={stroke1} strokeWidth=\"7\"/>\r\n        <line x1=\"296.305\" y1=\"39.6549\" x2=\"113.602\" y2=\"206.471\" stroke={stroke1} strokeWidth=\"7\"/>\r\n        <line x1=\"40.3001\" y1=\"35.6487\" x2=\"114.441\" y2=\"202.465\" stroke={stroke1} strokeWidth=\"7\"/>\r\n        <line x1=\"167.536\" y1=\"38.1292\" x2=\"114.578\" y2=\"204.945\" stroke={stroke1} strokeWidth=\"7\"/>\r\n        <line x1=\"39.4617\" y1=\"34.4855\" x2=\"222.165\" y2=\"201.302\" stroke={stroke1} strokeWidth=\"7\"/>\r\n        <circle cx=\"293.93\" cy=\"37.086\" r=\"23.9788\" transform=\"rotate(37.0421 293.93 37.086)\" fill={stroke2} stroke={stroke2} strokeWidth=\"5\"/>\r\n        <circle cx=\"37.0859\" cy=\"37.086\" r=\"23.9788\" transform=\"rotate(37.0421 37.0859 37.086)\" fill={stroke2} stroke={stroke2} strokeWidth=\"5\"/>\r\n        <circle cx=\"219.789\" cy=\"203.902\" r=\"23.9788\" transform=\"rotate(37.0421 219.789 203.902)\" fill={stroke2} stroke={stroke2} strokeWidth=\"5\"/>\r\n        <circle cx=\"111.227\" cy=\"203.902\" r=\"23.9788\" transform=\"rotate(37.0421 111.227 203.902)\" fill={stroke2} stroke={stroke2} strokeWidth=\"5\"/>\r\n        <circle cx=\"164.184\" cy=\"37.086\" r=\"23.9788\" transform=\"rotate(37.0421 164.184 37.086)\" fill={stroke2} stroke={stroke2} strokeWidth=\"5\"/>\r\n    </svg>\r\n)\r\n\r\nexport const DocIcon = ({width = 139, height = 139, stroke1, stroke2, stroke3}) => (\r\n    <svg width={width} height={height} viewBox=\"0 0 139 139\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n        <rect x=\"4\" y=\"4\" width=\"131\" height=\"131\" rx=\"26\" stroke={stroke1} strokeWidth=\"8\"/>\r\n        <line x1=\"40\" y1=\"36\" x2=\"114\" y2=\"36\" stroke={stroke2} strokeWidth=\"8\"/>\r\n        <line x1=\"40\" y1=\"82\" x2=\"114\" y2=\"82\" stroke={stroke2} strokeWidth=\"8\"/>\r\n        <line x1=\"29\" y1=\"59\" x2=\"103\" y2=\"59\" stroke={stroke3} strokeWidth=\"8\"/>\r\n        <line x1=\"29\" y1=\"105\" x2=\"103\" y2=\"105\" stroke={stroke3} strokeWidth=\"8\"/>\r\n    </svg>\r\n)","import React from 'react';\r\n\r\nexport const RightIcon = ({width = 209, height = 385, stroke = \"black\"}) => (\r\n    <svg width={width} height={height} viewBox=\"0 0 209 385\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n        <path d=\"M14.5 14.5L185.429 185.429C189.334 189.334 189.334 195.666 185.429 199.571L14.5 370.5\" stroke={stroke} strokeWidth=\"50\"/>\r\n    </svg>\r\n)\r\n\r\nexport const BenchmarkIcon = ({width = 503, height = 428, stroke = \"black\"}) => (\r\n    <svg width={width} height={height} viewBox=\"0 0 503 428\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n        <line x1=\"13\" y1=\"4.37114e-07\" x2=\"13\" y2=\"408\" stroke={stroke} strokeWidth=\"20\"/>\r\n        <line x1=\"503\" y1=\"418\" x2=\"3\" y2=\"418\" stroke={stroke} strokeWidth=\"20\"/>\r\n        <path d=\"M13.5 323L67.0617 368.42C71.7526 372.398 78.8886 371.239 82.0789 365.98L142.827 265.851C145.875 260.827 152.576 259.501 157.307 262.985L204.313 297.603C209.001 301.055 215.634 299.789 218.721 294.854L281.598 194.333C285.231 188.526 293.494 188.007 297.824 193.314L330.855 233.793C335.275 239.21 343.748 238.534 347.254 232.486L465.5 28.5\" stroke={stroke} strokeWidth=\"40\"/>\r\n    </svg>\r\n)\r\n\r\nexport const CloseIcon = ({width = 539, height = 539, bg, stroke}) => (\r\n    <svg width={width} height={height} viewBox=\"0 0 539 539\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n        <circle cx=\"269.5\" cy=\"269.5\" r=\"269.5\" fill={bg}/>\r\n        <path d=\"M132.5 150L393 410.5\" stroke={stroke} strokeWidth=\"40\"/>\r\n        <path d=\"M393 150L132.5 410.5\" stroke={stroke} strokeWidth=\"40\"/>\r\n    </svg>\r\n)\r\n\r\nexport const UpDown = ({width = 108, height = 46, stroke = \"white\"}) => (\r\n    <svg width={width} height={height} viewBox=\"0 0 108 46\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n        <path d=\"M3 4L54 41L105 4\" stroke={stroke} strokeWidth=\"8\"/>\r\n    </svg>\r\n)\r\n\r\nexport const SearchIcon = ({width = 490, height = 506, stroke = \"black\"}) => (\r\n    <svg width={width} height={height} viewBox=\"0 0 490 506\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n        <circle cx=\"188\" cy=\"188\" r=\"173\" stroke={stroke} strokeWidth=\"40\"/>\r\n        <path d=\"M303.5 320L475 491.5\" stroke={stroke} strokeWidth=\"40\"/>\r\n    </svg>\r\n)\r\n\r\nexport const LikeIcon = ({width = 512, height = 480, stroke = \"black\"}) => (\r\n    <svg width={width} height={height} viewBox=\"0 0 512 480\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n        <path d=\"M512 243.2C512 209.6 484.8 192 448 192H340.8C348.8 163.2 352 136 352 112C352 19.2 326.4 0 304 0C289.6 0 278.4 1.6 264 9.6C259.2 12.8 257.6 16 256 20.8L240 107.2C222.4 152 179.2 192 144 219.2V448C156.8 448 169.6 454.4 185.6 462.4C203.2 470.4 220.8 480 240 480H392C424 480 448 454.4 448 432C448 427.2 448 424 446.4 420.8C465.6 412.8 480 396.8 480 376C480 366.4 478.4 358.4 475.2 350.4C488 342.4 499.2 328 499.2 312C499.2 302.4 494.4 292.8 489.6 284.8C502.4 275.2 512 259.2 512 243.2ZM478.4 243.2C478.4 264 457.6 265.6 454.4 275.2C451.2 286.4 467.2 289.6 467.2 308.8C467.2 328 443.2 328 440 339.2C436.8 352 448 355.2 448 374.4V377.6C444.8 393.6 420.8 395.2 416 401.6C411.2 409.6 416 412.8 416 430.4C416 440 404.8 446.4 392 446.4H240C227.2 446.4 214.4 440 198.4 432C185.6 425.6 172.8 419.2 160 416V248C200 217.6 251.2 172.8 270.4 116.8V113.6L284.8 33.6C291.2 32 296 32 304 32C307.2 32 320 51.2 320 112C320 136 315.2 161.6 307.2 192H304C294.4 192 288 198.4 288 208C288 217.6 294.4 224 304 224H448C464 224 478.4 232 478.4 243.2Z\" fill={stroke} />\r\n        <path d=\"M128 480H32C14.4 480 0 465.6 0 448V224C0 206.4 14.4 192 32 192H128C145.6 192 160 206.4 160 224V448C160 465.6 145.6 480 128 480ZM32 224V448H128V224H32Z\" fill={stroke} />\r\n    </svg>\r\n)\r\n\r\nexport const CommentIcon = ({width = 980, height = 940, stroke = \"black\"}) => (\r\n    <svg width={width} height={height} viewBox=\"0 0 980 940\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n        <path d=\"M710.5 445.3H269.5C254.8 445.3 245 455.2 245 470C245 484.8 254.8 494.7 269.5 494.7H710.5C725.2 494.7 735 484.8 735 470C735 455.2 725.2 445.3 710.5 445.3ZM882 0.899994H98C44.1 0.899994 0 45.3 0 99.7V692.3C0 746.6 44.1 791.1 98 791.1H588L725.2 929.4C732.6 936.8 739.9 939.3 749.7 939.3C766.9 939.3 784 924.5 784 904.7V791H882C935.9 791 980 746.6 980 692.2V99.6C980 45.3 935.9 0.899994 882 0.899994ZM931 692.2C931 719.4 908.9 741.6 882 741.6H784H735V791V870L622.3 756.4L607.6 741.6H588H98C71 741.6 49 719.4 49 692.2V99.6C49 72.4 71 50.2 98 50.2H882C908.9 50.2 931 72.4 931 99.6V692.2ZM710.5 297.2H269.5C254.8 297.2 245 307.1 245 321.9C245 336.7 254.8 346.6 269.5 346.6H710.5C725.2 346.6 735 336.7 735 321.9C735 307 725.2 297.2 710.5 297.2Z\" fill={stroke}/>\r\n    </svg>\r\n)\r\n\r\nexport const ShareIcon = ({width = 876, height = 840, stroke = \"black\"}) => (\r\n    <svg width={width} height={height} viewBox=\"0 0 876 840\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n        <path d=\"M844.6 300.791C829.017 300.791 815.66 314.148 815.66 329.731V781.626H58.7921V329.73C58.7921 314.148 45.4361 300.791 29.8531 300.791C14.2701 300.791 0.914062 314.148 0.914062 329.731V810.565C0.914062 826.148 14.2711 839.505 29.8541 839.505H846.827C862.41 839.505 875.767 826.148 875.767 810.565V329.73C873.54 314.148 860.184 300.791 844.601 300.791H844.6Z\" fill={stroke} />\r\n        <path d=\"M261.365 227.33C268.043 227.33 276.948 225.104 281.4 218.426L408.287 95.991V407.643C408.287 423.226 421.643 436.583 437.227 436.583C452.809 436.583 466.165 423.226 466.165 407.643V95.991L593.052 218.426C599.73 222.878 606.409 227.33 613.087 227.33C619.765 227.33 628.67 225.104 633.122 218.426C635.767 215.803 637.866 212.682 639.299 209.243C640.732 205.805 641.47 202.116 641.47 198.391C641.47 194.666 640.732 190.977 639.299 187.539C637.866 184.1 635.767 180.979 633.122 178.356L457.26 6.94899C452.808 2.49699 446.13 0.270996 439.451 0.270996H437.225H435C428.322 0.270996 421.643 2.49699 417.191 6.94899L241.331 176.13C238.686 178.753 236.586 181.874 235.153 185.313C233.721 188.751 232.983 192.44 232.983 196.165C232.983 199.89 233.721 203.579 235.153 207.017C236.586 210.456 238.686 213.577 241.331 216.2C245.783 225.104 254.687 227.33 261.365 227.33Z\" fill={stroke}/>\r\n    </svg>\r\n)\r\n\r\nexport const RePostIcon = ({width = 980, height = 980, stroke=\"black\"}) => (\r\n    <svg width={width} height={height} viewBox=\"0 0 980 980\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n        <path d=\"M848.9 191.6L665.6 9C653.6 -3 634.2 -3 622.2 9C610.2 21 610.2 40.4 622.2 52.4L753.2 183.4L30.6 183C13.7 183 0 196.7 0 213.6V458.6C0 475.5 13.7 489.2 30.6 489.2C47.5 489.2 61.2 475.5 61.2 458.6V244.5H752.6L622.6 374.6C610.6 386.6 610.6 406 622.6 418C634.6 430 654 430 666 418L848.9 235C860.8 222.9 860.8 203.6 848.9 191.6Z\" fill={stroke}/>\r\n        <path d=\"M131.1 788.4L314.3 971C326.3 983 345.7 983 357.7 971C369.7 959 369.7 939.6 357.7 927.6L226.7 796.7L949.4 797C966.3 797 980 783.3 980 766.4V521.4C980 504.5 966.3 490.8 949.4 490.8C932.5 490.8 918.8 504.5 918.8 521.4V735.5H227.4L357.5 605.4C369.5 593.4 369.5 574 357.5 562C345.5 550 326.1 550 314.1 562L131.1 745C119.2 757.1 119.2 776.4 131.1 788.4Z\" fill={stroke}/>\r\n    </svg>\r\n)\r\n\r\nexport const PaperIcon = ({width = 262, height = 308, stroke = \"black\"}) => (\r\n    <svg width={width} height={height} viewBox=\"0 0 262 308\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n        <path d=\"M218.264 200.541C218.264 203.232 216.063 205.436 213.371 205.436H48.2319C45.5389 205.436 43.3369 203.233 43.3369 200.541V197.28C43.3369 194.589 45.5379 192.386 48.2319 192.386H213.371C216.062 192.386 218.264 194.588 218.264 197.28V200.541Z\" fill={stroke}/>\r\n        <path d=\"M117.293 64.99C117.293 67.68 115.092 69.883 112.398 69.883H48.2319C45.5389 69.883 43.3369 67.681 43.3369 64.99V61.727C43.3369 59.036 45.5379 56.833 48.2319 56.833H112.398C115.091 56.833 117.293 59.035 117.293 61.727V64.99V64.99Z\" fill={stroke}/>\r\n        <path d=\"M215.787 245.727C215.787 248.417 213.584 250.619 210.89 250.619H146.724C144.031 250.619 141.829 248.417 141.829 245.727V242.464C141.829 239.773 144.03 237.57 146.724 237.57H210.89C213.583 237.57 215.787 239.772 215.787 242.464V245.727Z\" fill={stroke}/>\r\n        <path d=\"M151.312 110.172C151.312 112.863 149.111 115.067 146.419 115.067H48.2309C45.5379 115.067 43.3359 112.864 43.3359 110.172V106.911C43.3359 104.22 45.5369 102.018 48.2309 102.018H146.419C149.11 102.018 151.312 104.22 151.312 106.911V110.172Z\" fill={stroke}/>\r\n        <path d=\"M218.264 155.357C218.264 158.048 216.063 160.25 213.371 160.25H48.2319C45.5389 160.25 43.3369 158.048 43.3369 155.357V152.095C43.3369 149.404 45.5379 147.201 48.2319 147.201H213.371C216.062 147.201 218.264 149.403 218.264 152.095V155.357Z\" fill={stroke}/>\r\n        <path d=\"M249.475 74.521L170.352 9.454C163.801 4.062 152.463 0 143.981 0H19.516C8.756 0 0 8.754 0 19.516C0 19.516 0 229.54 0 287.355C0 307.454 19.01 307.454 19.463 307.454C67.803 307.454 242.086 307.454 242.086 307.454C252.848 307.454 261.602 298.699 261.602 287.937V100.198C261.602 91.247 256.387 80.207 249.475 74.521ZM164.941 29.475C164.941 24.694 168.9 28.362 168.9 28.362L231.617 81.947C231.617 81.947 235.631 85.896 228.752 85.896C214.064 85.896 170.006 85.896 170.006 85.896C167.213 85.896 164.941 83.625 164.941 80.832C164.941 80.832 164.941 42.315 164.941 29.475ZM242.086 292.999C242.086 292.999 63.031 292.999 18.096 292.999C17.295 292.999 14.453 292.77 14.453 288.817C14.453 234.41 14.453 19.515 14.453 19.515C14.453 16.77 16.773 14.452 19.516 14.452H143.98C146.087 14.452 150.49 15.57 150.49 21.59V80.832C150.49 91.593 159.244 100.348 170.006 100.348H243.529C244.871 100.348 247.142 101.27 247.142 104.517C247.142 104.568 247.15 287.936 247.15 287.936C247.15 290.729 244.879 292.999 242.086 292.999Z\" fill={stroke}/>\r\n    </svg>\r\n)\r\n\r\nexport const PdfIcon = ({width = 262, height = 308, stroke}) => (\r\n    <svg width={width} height={height} viewBox=\"0 0 262 308\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n        <path d=\"M249.475 74.521L170.352 9.454C163.801 4.062 152.463 0 143.981 0H19.516C8.756 0 0 8.754 0 19.516C0 19.516 0 229.54 0 287.355C0 307.454 19.01 307.454 19.463 307.454C67.803 307.454 242.086 307.454 242.086 307.454C252.848 307.454 261.602 298.699 261.602 287.937V100.198C261.602 91.247 256.387 80.207 249.475 74.521ZM164.941 29.475C164.941 24.694 168.9 28.362 168.9 28.362L231.617 81.947C231.617 81.947 235.631 85.896 228.752 85.896C214.064 85.896 170.006 85.896 170.006 85.896C167.213 85.896 164.941 83.625 164.941 80.832C164.941 80.832 164.941 42.315 164.941 29.475ZM242.086 292.999C242.086 292.999 63.031 292.999 18.096 292.999C17.295 292.999 14.453 292.77 14.453 288.817C14.453 234.41 14.453 19.515 14.453 19.515C14.453 16.77 16.773 14.452 19.516 14.452H143.98C146.087 14.452 150.49 15.57 150.49 21.59V80.832C150.49 91.593 159.244 100.348 170.006 100.348H243.529C244.871 100.348 247.142 101.27 247.142 104.517C247.142 104.568 247.15 287.936 247.15 287.936C247.15 290.729 244.879 292.999 242.086 292.999Z\" fill={stroke}/>\r\n        <path d=\"M124.5 166L127.554 171.192C132.141 178.99 138.195 185.826 145.382 191.322L172.601 212.136C175.329 214.222 178.953 214.719 182.142 213.443V213.443C191.475 209.71 189.732 196.004 179.761 194.726L159.917 192.182C158.975 192.061 158.022 192.03 157.074 192.09L148.829 192.612C129.358 193.844 110.657 200.673 94.9723 212.277L58.0689 239.579C57.6919 239.858 57.3606 240.194 57.0869 240.575V240.575C54.3083 244.441 58.6241 249.421 62.8461 247.221L79.8839 238.342C80.9507 237.786 81.8965 237.024 82.6666 236.1L87.4117 230.406C91.7504 225.199 94.887 219.1 96.5977 212.542L103 188L129.538 116.443C130.488 113.88 130.608 111.082 129.879 108.447L128.497 103.452C126.624 96.6781 118.38 94.0999 112.981 98.5994V98.5994C110.775 100.437 109.5 103.16 109.5 106.031V123.039C109.5 129.604 110.905 136.092 113.622 142.068L124.5 166Z\" stroke={stroke} strokeWidth=\"8\"/>\r\n    </svg>\r\n)\r\n\r\nexport const CodeIcon = ({width = 523, height = 393, stroke = \"black\", stroke1, stroke2, stroke3}) => (\r\n    <svg width={width} height={height} viewBox=\"0 0 523 393\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n        <path d=\"M325.762 5.51303L308.056 0.659023C305.777 -0.100977 303.532 0.138027 301.349 1.37403C299.159 2.61103 297.68 4.46803 296.92 6.94203L190.426 375.53C189.666 378.005 189.904 380.339 191.141 382.525C192.378 384.715 194.231 386.19 196.709 386.95L214.41 391.806C216.694 392.572 218.931 392.332 221.12 391.094C223.31 389.851 224.786 388 225.545 385.53L332.042 16.936C332.801 14.462 332.565 12.128 331.326 9.93702C330.088 7.74702 328.237 6.27203 325.762 5.51303Z\" fill={stroke1 ? stroke1 : stroke}/>\r\n        <path d=\"M166.167 77.465C166.167 74.991 165.214 72.8 163.311 70.898L149.034 56.622C147.131 54.719 144.941 53.765 142.467 53.765C139.993 53.765 137.802 54.72 135.9 56.622L2.856 189.666C0.95 191.569 0 193.759 0 196.233C0 198.707 0.953 200.897 2.856 202.799L135.899 335.843C137.801 337.749 139.988 338.697 142.466 338.697C144.944 338.697 147.131 337.746 149.033 335.843L163.31 321.575C165.213 319.673 166.166 317.482 166.166 315.005C166.166 312.534 165.213 310.344 163.31 308.442L51.107 196.233L163.311 84.032C165.217 82.13 166.167 79.939 166.167 77.465Z\" fill={stroke2 ? stroke2 : stroke}/>\r\n        <path d=\"M519.615 189.663L386.567 56.619C384.665 54.717 382.474 53.762 380.004 53.762C377.526 53.762 375.343 54.717 373.434 56.619L359.163 70.894C357.261 72.797 356.312 74.984 356.312 77.461C356.312 79.938 357.26 82.126 359.163 84.028L471.369 196.232L359.163 308.442C357.261 310.344 356.312 312.535 356.312 315.005C356.312 317.483 357.26 319.673 359.163 321.575L373.434 335.843C375.343 337.749 377.527 338.697 380.004 338.697C382.475 338.697 384.665 337.746 386.567 335.843L519.615 202.8C521.518 200.898 522.469 198.704 522.469 196.23C522.469 193.755 521.518 191.565 519.615 189.663Z\" fill={stroke3 ? stroke3 : stroke}/>\r\n    </svg>\r\n)\r\n\r\nexport const BenchMarkIcon = ({width = 405, height = 354, stroke = \"#00B3DA\"}) => (\r\n    <svg width={width} height={height} viewBox=\"0 0 405 354\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n        <line x1=\"20.9999\" y1=\"0.0636951\" x2=\"19.9999\" y2=\"314.064\" stroke={stroke} strokeWidth=\"30\"/>\r\n        <line x1=\"405\" y1=\"334\" y2=\"334\" stroke={stroke} strokeWidth=\"30\"/>\r\n        <path d=\"M20 212L84.7776 280.771C89.0577 285.315 96.4088 284.87 100.11 279.843L179.078 172.582C182.881 167.416 190.495 167.116 194.692 171.967L243.957 228.895C248.686 234.359 257.471 233.158 260.559 226.625L362.5 11\" stroke={stroke} strokeWidth=\"30\"/>\r\n    </svg>\r\n)\r\n\r\nexport const DemoIcon = ({width = 157, height = 157, stroke = \"#00B3DA\"}) => (\r\n    <svg width={width} height={height} viewBox=\"0 0 157 157\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n        <path d=\"M61 104.851V52.6166C61 51.0441 62.7313 50.0867 64.0632 50.9227L105.324 76.8202C106.567 77.6007 106.574 79.4102 105.337 80.2L64.0761 106.537C62.7447 107.386 61 106.43 61 104.851Z\" stroke={stroke} strokeWidth=\"10\"/>\r\n        <circle cx=\"78.5\" cy=\"78.5\" r=\"73.5\" stroke={stroke} strokeWidth=\"10\"/>\r\n    </svg>\r\n)\r\n\r\nexport const PaperswithCodeIcon = ({width = 262, height = 308, stroke = \"#00B3DA\"}) => (\r\n    <svg width={width} height={height} viewBox=\"0 0 262 308\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n        <path d=\"M117.293 64.99C117.293 67.68 115.092 69.883 112.398 69.883H48.2319C45.5389 69.883 43.3369 67.681 43.3369 64.99V61.727C43.3369 59.036 45.5379 56.833 48.2319 56.833H112.398C115.091 56.833 117.293 59.035 117.293 61.727V64.99V64.99Z\" fill={stroke}/>\r\n        <path d=\"M151.312 110.172C151.312 112.863 149.111 115.067 146.419 115.067H48.2309C45.5379 115.067 43.3359 112.864 43.3359 110.172V106.911C43.3359 104.22 45.5369 102.018 48.2309 102.018H146.419C149.11 102.018 151.312 104.22 151.312 106.911V110.172Z\" fill={stroke}/>\r\n        <path d=\"M249.475 74.521L170.352 9.454C163.801 4.062 152.463 0 143.981 0H19.516C8.756 0 0 8.754 0 19.516C0 19.516 0 229.54 0 287.355C0 307.454 19.01 307.454 19.463 307.454C67.803 307.454 242.086 307.454 242.086 307.454C252.848 307.454 261.602 298.699 261.602 287.937V100.198C261.602 91.247 256.387 80.207 249.475 74.521ZM164.941 29.475C164.941 24.694 168.9 28.362 168.9 28.362L231.617 81.947C231.617 81.947 235.631 85.896 228.752 85.896C214.064 85.896 170.006 85.896 170.006 85.896C167.213 85.896 164.941 83.625 164.941 80.832C164.941 80.832 164.941 42.315 164.941 29.475ZM242.086 292.999C242.086 292.999 63.031 292.999 18.096 292.999C17.295 292.999 14.453 292.77 14.453 288.817C14.453 234.41 14.453 19.515 14.453 19.515C14.453 16.77 16.773 14.452 19.516 14.452H143.98C146.087 14.452 150.49 15.57 150.49 21.59V80.832C150.49 91.593 159.244 100.348 170.006 100.348H243.529C244.871 100.348 247.142 101.27 247.142 104.517C247.142 104.568 247.15 287.936 247.15 287.936C247.15 290.729 244.879 292.999 242.086 292.999Z\" fill={stroke}/>\r\n        <path d=\"M153.596 148.551L147.259 147.127C146.443 146.904 145.64 146.974 144.858 147.337C144.075 147.7 143.545 148.245 143.273 148.97L105.157 257.097C104.885 257.823 104.97 258.508 105.413 259.149C105.856 259.791 106.519 260.224 107.406 260.447L113.742 261.872C114.559 262.096 115.36 262.026 116.143 261.663C116.927 261.298 117.455 260.755 117.727 260.03L155.844 151.902C156.116 151.176 156.031 150.492 155.588 149.849C155.145 149.207 154.482 148.774 153.596 148.551Z\" fill={stroke}/>\r\n        <path d=\"M96.4739 169.659C96.4739 168.933 96.1328 168.29 95.4517 167.732L90.3417 163.544C89.6606 162.986 88.8768 162.706 87.9913 162.706C87.1058 162.706 86.3216 162.986 85.6408 163.544L38.0222 202.573C37.34 203.131 37 203.774 37 204.5C37 205.225 37.3411 205.868 38.0222 206.426L85.6405 245.455C86.3212 246.014 87.104 246.292 87.9909 246.292C88.8778 246.292 89.6606 246.013 90.3414 245.455L95.4513 241.269C96.1325 240.711 96.4735 240.068 96.4735 239.342C96.4735 238.617 96.1325 237.974 95.4513 237.416L55.292 204.5L95.4517 171.585C96.1339 171.027 96.4739 170.384 96.4739 169.659Z\" fill={stroke}/>\r\n        <path d=\"M222.979 202.572L175.359 163.543C174.678 162.985 173.894 162.705 173.01 162.705C172.123 162.705 171.342 162.985 170.659 163.543L165.551 167.731C164.87 168.289 164.53 168.931 164.53 169.657C164.53 170.384 164.87 171.026 165.551 171.584L205.711 204.499L165.551 237.416C164.87 237.974 164.53 238.617 164.53 239.342C164.53 240.069 164.87 240.711 165.551 241.269L170.659 245.455C171.342 246.014 172.123 246.292 173.01 246.292C173.894 246.292 174.678 246.013 175.359 245.455L222.979 206.426C223.66 205.868 224 205.224 224 204.499C224 203.773 223.66 203.13 222.979 202.572Z\" fill={stroke}/>\r\n    </svg>\r\n)\r\n\r\nexport const BackIcon = ({width = 58, height = 104, stroke}) => (\r\n    <svg width={width} height={height} viewBox=\"0 0 58 104\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n        <path d=\"M54.5 3.5L6 52L54.5 100.5\" stroke={stroke} strokeWidth=\"15\"/>\r\n    </svg>\r\n)\r\n\r\nexport const GithubIcon = ({width = 1024, height = 1024, stroke = \"white\"}) => (\r\n    <svg width={width} height={height} viewBox=\"0 0 1024 1024\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n        <path fillRule=\"evenodd\" clipRule=\"evenodd\" d=\"M8 0C3.58 0 0 3.58 0 8C0 11.54 2.29 14.53 5.47 15.59C5.87 15.66 6.02 15.42 6.02 15.21C6.02 15.02 6.01 14.39 6.01 13.72C4 14.09 3.48 13.23 3.32 12.78C3.23 12.55 2.84 11.84 2.5 11.65C2.22 11.5 1.82 11.13 2.49 11.12C3.12 11.11 3.57 11.7 3.72 11.94C4.44 13.15 5.59 12.81 6.05 12.6C6.12 12.08 6.33 11.73 6.56 11.53C4.78 11.33 2.92 10.64 2.92 7.58C2.92 6.71 3.23 5.99 3.74 5.43C3.66 5.23 3.38 4.41 3.82 3.31C3.82 3.31 4.49 3.1 6.02 4.13C6.66 3.95 7.34 3.86 8.02 3.86C8.7 3.86 9.38 3.95 10.02 4.13C11.55 3.09 12.22 3.31 12.22 3.31C12.66 4.41 12.38 5.23 12.3 5.43C12.81 5.99 13.12 6.7 13.12 7.58C13.12 10.65 11.25 11.33 9.47 11.53C9.76 11.78 10.01 12.26 10.01 13.01C10.01 14.08 10 14.94 10 15.21C10 15.42 10.15 15.67 10.55 15.59C13.71 14.53 16 11.53 16 8C16 3.58 12.42 0 8 0Z\" transform=\"scale(64)\" fill={stroke}/>\r\n    </svg>\r\n)\r\n\r\nexport const ColabIcon = ({width = 1000, height = 1000, stroke = \"#000000\"}) => (\r\n    <svg \r\n        role=\"img\" \r\n        xmlns=\"http://www.w3.org/2000/svg\" \r\n        width={width}\r\n        height={height}\r\n        viewBox=\"0 0 1000 1000\">\r\n        <path \r\n            id=\"path\"\r\n            fill={stroke}\r\n            d=\" M 665 375C 633 375 602 388 579 411C 556 434 543 465 543 498C 543 530 556 561 579 584C 602 607 633 620 665 620C 698 620 729 607 752 584C 775 561 788 530 788 498C 788 430 733 375 665 375C 665 375 665 375 665 375M 338 261C 390 261 440 278 481 310C 481 310 424 411 424 411C 401 388 370 375 338 375C 305 375 274 388 251 411C 228 434 215 465 215 498C 215 530 228 561 251 584C 274 607 305 620 338 620C 369 620 399 608 422 587C 422 587 480 686 480 686C 439 717 389 734 338 734C 275 734 215 709 171 665C 126 620 101 560 101 498C 101 367 207 261 338 261C 338 261 338 261 338 261M 665 261C 796 261 902 367 902 498C 902 628 796 734 665 734C 603 734 543 709 498 665C 454 620 429 560 429 498C 429 367 535 261 665 261C 665 261 665 261 665 261\"\r\n            transform=\"\">\r\n        </path>    \r\n    </svg>\r\n)\r\n\r\nexport const ConvertIcon = ({width = 254, height = 222, stroke}) => (\r\n    <svg width={width} height={height} viewBox=\"0 0 254 222\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n        <path d=\"M22.0621 118.817C22.2582 118.893 22.4598 118.943 22.6615 119.005C23.0312 119.117 23.4009 119.212 23.7902 119.274C23.891 119.29 23.9863 119.332 24.0871 119.344C24.426 119.383 24.7593 119.402 25.0926 119.402C25.6527 119.402 26.2073 119.344 26.7507 119.234C27.0812 119.167 27.3892 119.049 27.7057 118.946C27.9102 118.879 28.1203 118.837 28.3191 118.755C28.6776 118.607 29.0081 118.408 29.3386 118.212C29.4758 118.131 29.6271 118.072 29.7615 117.982C30.2209 117.674 30.6494 117.324 31.0415 116.932L52.5292 95.4443C55.8118 92.1646 55.8118 86.8431 52.5292 83.5633C49.2495 80.2808 43.928 80.2808 40.6482 83.5633L36.4106 87.801C46.7568 47.3854 83.4837 17.4169 127.078 17.4169C163.469 17.4169 196.84 38.773 212.094 71.828C214.035 76.0404 219.031 77.8777 223.241 75.9368C227.456 73.993 229.293 68.9992 227.35 64.7868C209.36 25.8025 170 0.612061 127.078 0.612061C74.8684 0.612061 31.0387 37.0589 19.6198 85.8348L16.5473 80.785C14.1331 76.819 8.96558 75.5587 4.99965 77.9758C1.03652 80.3872 -0.223842 85.5575 2.19045 89.5235L17.9141 115.366C17.9449 115.417 17.9898 115.453 18.0206 115.504C18.281 115.91 18.5807 116.285 18.9056 116.641C18.9812 116.725 19.0429 116.82 19.1213 116.901C19.5358 117.319 19.9923 117.691 20.4881 118.016C20.6169 118.1 20.7598 118.159 20.8942 118.237C21.2667 118.456 21.6532 118.657 22.0621 118.817Z\" fill={stroke}/>\r\n        <path d=\"M251.809 132.477L236.085 106.634C236.057 106.586 236.015 106.55 235.984 106.502C235.718 106.085 235.41 105.698 235.077 105.334C235.009 105.258 234.953 105.172 234.883 105.099C234.469 104.679 234.01 104.306 233.514 103.981C233.388 103.897 233.248 103.841 233.116 103.766C232.738 103.544 232.349 103.343 231.937 103.183C231.741 103.107 231.539 103.06 231.338 102.998C230.968 102.886 230.598 102.791 230.209 102.729C230.108 102.712 230.013 102.67 229.909 102.659C229.763 102.642 229.621 102.668 229.475 102.656C229.285 102.642 229.103 102.598 228.909 102.598C228.738 102.598 228.582 102.637 228.414 102.648C228.153 102.662 227.898 102.687 227.64 102.726C227.282 102.78 226.94 102.864 226.599 102.962C226.375 103.026 226.153 103.085 225.938 103.166C225.559 103.309 225.204 103.491 224.854 103.684C224.688 103.777 224.518 103.85 224.358 103.953C223.854 104.278 223.38 104.645 222.958 105.068L201.47 126.556C198.187 129.835 198.187 135.157 201.47 138.437C204.752 141.719 210.068 141.719 213.351 138.437L217.588 134.199C207.242 174.615 170.515 204.583 126.921 204.583C89.225 204.583 55.3773 182.146 40.6899 147.424C38.8806 143.15 33.954 141.142 29.6771 142.96C25.4031 144.769 23.4033 149.696 25.2127 153.973C42.5356 194.926 82.4582 221.388 126.921 221.388C179.131 221.388 222.96 184.941 234.379 136.162L237.452 141.212C239.031 143.811 241.801 145.245 244.636 145.245C246.123 145.245 247.63 144.85 248.997 144.021C252.963 141.61 254.223 136.442 251.809 132.477Z\" fill={stroke}/>\r\n    </svg>\r\n)\r\n\r\nexport const SendIcon = ({width = 207, height = 207, stroke = \"#25A2F9\"}) => (\r\n    <svg width={width} height={height} viewBox=\"0 0 207 207\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n        <circle cx=\"103.5\" cy=\"103.5\" r=\"96\" stroke={stroke} strokeWidth=\"15\"/>\r\n        <path d=\"M108.303 48.6967C105.374 45.7678 100.626 45.7678 97.6967 48.6967L49.967 96.4264C47.0381 99.3553 47.0381 104.104 49.967 107.033C52.8959 109.962 57.6447 109.962 60.5736 107.033L103 64.6066L145.426 107.033C148.355 109.962 153.104 109.962 156.033 107.033C158.962 104.104 158.962 99.3553 156.033 96.4264L108.303 48.6967ZM110.5 153L110.5 54L95.5 54L95.5 153L110.5 153Z\" fill={stroke} />\r\n    </svg>\r\n)\r\n","import React from 'react';\r\n\r\nexport const MoonIcon = ({width = 24, height = 24}) => (\r\n    <svg width={width} height={height} viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n        <path stroke=\"white\" fill=\"white\" d=\"M12 11.807C10.7418 10.5483 9.88488 8.94484 9.53762 7.1993C9.19037 5.45375 9.36832 3.64444 10.049 2C8.10826 2.38205 6.3256 3.33431 4.92899 4.735C1.02399 8.64 1.02399 14.972 4.92899 18.877C8.83499 22.783 15.166 22.782 19.072 18.877C20.4723 17.4805 21.4245 15.6983 21.807 13.758C20.1625 14.4385 18.3533 14.6164 16.6077 14.2692C14.8622 13.9219 13.2588 13.0651 12 11.807V11.807Z\" />\r\n    </svg>\r\n);\r\n\r\nexport const SunIcon = ({width = 24, height = 24}) => (\r\n    <svg width={width} height={height} viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n        <path stroke=\"white\" strokeWidth=\"1.8\" d=\"M6.995 12C6.995 14.761 9.241 17.007 12.002 17.007C14.763 17.007 17.009 14.761 17.009 12C17.009 9.239 14.763 6.993 12.002 6.993C9.241 6.993 6.995 9.239 6.995 12ZM11 19H13V22H11V19ZM11 2H13V5H11V2ZM2 11H5V13H2V11ZM19 11H22V13H19V11Z\" />\r\n        <path stroke=\"white\" strokeWidth=\"1.8\" d=\"M5.63702 19.778L4.22302 18.364L6.34402 16.243L7.75802 17.657L5.63702 19.778Z\" />\r\n        <path stroke=\"white\" strokeWidth=\"1.8\" d=\"M16.242 6.34405L18.364 4.22205L19.778 5.63605L17.656 7.75805L16.242 6.34405Z\" />\r\n        <path stroke=\"white\" strokeWidth=\"1.8\" d=\"M6.34402 7.75902L4.22302 5.63702L5.63802 4.22302L7.75802 6.34502L6.34402 7.75902Z\" />\r\n        <path stroke=\"white\" strokeWidth=\"1.8\" d=\"M19.778 18.3639L18.364 19.7779L16.242 17.6559L17.656 16.2419L19.778 18.3639Z\" />\r\n    </svg>\r\n)","import React, {useEffect} from \"react\";\r\nimport \"./themetoggle.css\";\r\nimport {MoonIcon, SunIcon} from '../../icons/darkmode';\r\n\r\nconst updateTheme = (isDarkEnabled) => {\r\n  // Get CSS variables for background/foreground\r\n  const styles = getComputedStyle(document.body);\r\n  const black = styles.getPropertyValue(\"--black\");\r\n  const white = styles.getPropertyValue(\"--white\");\r\n  const docEl = document.documentElement;\r\n\r\n  if (isDarkEnabled) {\r\n    docEl.style.setProperty(\"--background\", black);\r\n    docEl.style.setProperty(\"--foreground\", white);\r\n    document.querySelector(\"html\").classList.add(\"darkmode\");\r\n  } else {\r\n    docEl.style.setProperty(\"--background\", white);\r\n    docEl.style.setProperty(\"--foreground\", black);\r\n    document.querySelector(\"html\").classList.remove(\"darkmode\");\r\n  }\r\n};\r\n\r\nexport const ThemeToggle = ({darkMode, setDarkMode}) => {\r\n\r\n  useEffect(() => {\r\n    updateTheme(darkMode);\r\n  }, [darkMode]);\r\n\r\n  const toggleState = () => {\r\n    setDarkMode(!darkMode);\r\n  };\r\n\r\n  return (\r\n    <label id=\"themeChanger\" className=\"toggle-wrapper\" htmlFor=\"toggle\">\r\n      <div className={`toggle ${darkMode ? \"enabled\" : \"disabled\"}`}>\r\n        <span className=\"hidden\">\r\n          {darkMode ? \"Enable Light Mode\" : \"Enable Dark Mode\"}\r\n        </span>\r\n        <div className=\"icons\">\r\n          <SunIcon />\r\n          <MoonIcon />\r\n        </div>\r\n        <input\r\n          id=\"toggle\"\r\n          name=\"toggle\"\r\n          type=\"checkbox\"\r\n          checked={darkMode}\r\n          onClick={() => toggleState()}\r\n        />\r\n      </div>\r\n    </label>\r\n  );\r\n}\r\n\r\nexport default ThemeToggle;\r\n","import React from 'react';\r\nimport {Flex, Col, Row, Text, Image} from './common/base';\r\nimport {VerseIcon} from '../icons/headericons';\r\n\r\nexport const DesignHeader = ({route, headerShown}) => {\r\n    return (\r\n        <Row align=\"center\" justify=\"space-between\" flex={route == 4 ? headerShown ? 0 : 3.8 : 0} style={{opacity: route == 4 ? headerShown ? 0 : 1 : 1, transition: 'all 400ms ease', overflow: 'hidden'}}>\r\n            <Row align=\"center\" style={{minWidth: 300}}>\r\n                <VerseIcon width={22} />\r\n                <Flex to=\"cursor\" padding=\"padding: 10px 15px 10px 15px;\">\r\n                    <Text className=\"light\" size=\"12.8\">STARTING FROM BENCHMARKS</Text>\r\n                </Flex>\r\n            </Row>\r\n            <Row align=\"center\">\r\n                <VerseIcon width={22} />\r\n                <Flex to=\"cursor\" padding=\"padding: 10px 15px 10px 15px;\">\r\n                    <Text className=\"light\" size=\"12.8\">COMPONENTS</Text>\r\n                </Flex>\r\n            </Row> \r\n            <Row align=\"center\">\r\n                <VerseIcon width={22} />\r\n                <Flex to=\"cursor\" padding=\"padding: 10px 15px 10px 15px;\">\r\n                    <Text className=\"light\" size=\"12.8\">MY MODELS</Text>\r\n                </Flex>\r\n            </Row>\r\n        </Row>  \r\n    )\r\n};\r\n\r\nexport default DesignHeader;","import React from 'react';\r\nimport {Flex, Col, Row, Text, Image} from './common/base';\r\n\r\nexport const OpsHeader = ({route, headerShown}) => {\r\n    return (\r\n        <Row flex={route == 5 ? headerShown ? 0 : 3.8 : 0} style={{opacity: route == 5 ? headerShown ? 0 : 1 : 1, transition: 'all 500ms ease', overflow: 'hidden'}}>\r\n\r\n        </Row>\r\n    )\r\n};\r\n\r\nexport default OpsHeader;","export const blueColor = \"#25A2F9\"\r\nexport const redColor = \"#ED2166\"\r\nexport const purColor = \"#9D15B0\"\r\n\r\nexport const blueLowColor = \"#1C8BD8\"\r\nexport const redLowColor = \"#D84476\"\r\nexport const purLowColor = \"#9E35AD\"\r\n\r\n// export const darkHue = \"#25A2F9\";\r\n// export const hue = \"#9E35AD\";\r\n\r\nexport const darkBg = \"rgb(30, 30, 30)\"\r\nexport const bg = \"white\";\r\n\r\nexport const darkBgopa = (opa) => `rgba(30, 30, 30, ${opa})`\r\nexport const bgopa = (opa) => `rgba(255, 255, 255, ${opa})`\r\n\r\nexport const hueBlue = \"#00B3DA\";\r\n\r\nexport const extremehueBlue = \"#00dcff\";\r\n\r\nexport const hueStyler = (darkMode) => {\r\n    return darkMode ? purColor : blueColor;\r\n}\r\n\r\nexport const bgStyler = (darkMode, opa) => {\r\n    return opa ? darkMode ? darkBgopa(opa) : bgopa(opa) : darkMode ? darkBg : bg;\r\n}\r\n\r\nexport const btnStyler = (darkMode) => {\r\n    return darkMode ? \"black\" : \"white\";\r\n}\r\n\r\nexport const GlobalBgStyler = (darkMode) => {\r\n    return darkMode ? \"rgb(15, 15, 15)\" : \"rgb(255, 255, 255)\";\r\n}","import React, {useState, useEffect} from 'react';\r\nimport {Flex, Row, Image, Text, CirclePic, Col} from '../components/common/base';\r\nimport {ModelIcon, SpaceIcon, VerseIcon, NftIcon, NotiIcon, DesignIcon, StudioLight} from '../icons/headericons';\r\nimport {SendIcon, CodeIcon} from '../icons/utilities';\r\nimport ThemeToggle from './buttons/themeButton';\r\nimport {ThemeEvent} from '../contexts/GlobalContext';\r\nimport logo from '../imgs/logo.png';\r\nimport DesignHeader from './designHeader';\r\nimport OpsHeader from './opsHeader';\r\nimport styled from 'styled-components';\r\n\r\nimport me from '../imgs/me.jpeg';\r\nimport { blueColor, extremehueBlue, purColor, redColor } from '../styles';\r\n\r\nexport const HeaderBox = styled(Row)`\r\n    transition: background-color .3s,color .3s,box-shadow .3s ease;\r\n    box-shadow: 0 0 0.1rem rgb(0 0 0 / 10%), 0 0.15rem 0.9rem rgb(0 0 0 / 10%);\r\n    border: 0;\r\n    ::-webkit-scrollbar {\r\n        display: none;\r\n        -ms-overflow-style: none;  /* IE and Edge */\r\n        scrollbar-width: none;\r\n    }\r\n`;\r\n\r\nexport const Header = ({loggedIn = false, setRoute, route}) => {\r\n    const [hoverModel, setHoverModel] = useState(false);\r\n    const [hoverDataset, setHoverDataset] = useState(false);\r\n    const [hoverTrend, setHoverTrend] = useState(false);\r\n    const [hoverNft, setHoverNft] = useState(false);\r\n    const {darkMode, setDarkMode} = ThemeEvent();\r\n    const [headerShown, setHeaderShown] = useState(false);\r\n    return (\r\n        <HeaderBox \r\n            position=\"fixed\" align=\"center\" justify=\"space-between\" zIndex={1000} \r\n            bg={darkMode ? \"rgba(15,15,15,0.9)\" : \"rgba(255, 255, 255, 0.9)\"} \r\n            style={{width: '100vw', height:  80, top: 0, backdropFilter: 'blur(2px)'}}\r\n        >\r\n            <Row flex={2.2}>\r\n                <a href=\"/\" onClick={() => setRoute(0)}>\r\n                    <Row to=\"cursor\" align=\"center\" padding=\"padding: 30px;\" position=\"relative\" style={{width: 300}}>\r\n                        <Image width=\"43px;\" src={logo} />\r\n                        <Flex position=\"absolute\" style={{left: 73, opacity: route == 0 ? 1 : 0, transition: 'all 500ms ease'}}>\r\n                            <Text margin=\"margin-left: 15px;\" className=\"light\" weight=\"700\" size=\"18\">NEURALVERSE</Text>\r\n                        </Flex>\r\n                        <Flex position=\"absolute\" style={{left: 73, opacity: route == 1 ? 1 : 0, transition: 'all 500ms ease'}}>\r\n                            <Text margin=\"margin-left: 15px;\" className=\"light\" weight=\"700\" size=\"18\">NEURAL VERSE</Text>\r\n                        </Flex>\r\n                        <Flex position=\"absolute\" style={{left: 73, opacity: route == 3 ? 1 : 0, transition: 'all 500ms ease'}}>\r\n                            <Text margin=\"margin-left: 15px;\" className=\"light\" weight=\"700\" size=\"18\">NEURAL SPACE</Text>\r\n                        </Flex>\r\n                        <Flex position=\"absolute\" style={{left: 73, opacity: route == 4 ? 1 : 0, transition: 'all 500ms ease'}}>\r\n                            <Text margin=\"margin-left: 15px;\" className=\"light\" weight=\"700\" size=\"18\">NEURAL STUDIO</Text>\r\n                        </Flex>\r\n                        <Flex position=\"absolute\" style={{left: 73, opacity: route == 5 ? 1 : 0, transition: 'all 500ms ease'}}>\r\n                            <Text margin=\"margin-left: 15px;\" className=\"light\" weight=\"700\" size=\"18\">NEURAL OPS</Text>\r\n                        </Flex>\r\n                    </Row>\r\n                </a>\r\n                {(route == 4 || route == 5) && <Text onClick={() => setHeaderShown(!headerShown)}>See Header</Text>}\r\n            </Row>\r\n            <DesignHeader route={route} headerShown={headerShown}/>\r\n            <OpsHeader route={route} headerShown={headerShown}/>\r\n            <Row align=\"center\" justify=\"space-between\" flex={route == 4 || route == 5 ? headerShown ? 4 : 0 : 4} height=\"100%\" style={{opacity: route == 4 || route == 5 ? headerShown ? 1 : 0 : 1, transition: 'all 500ms ease', overflow: 'hidden'}}>\r\n                <a onClick={() => setRoute(1)}>\r\n                    <Row align=\"center\" hover={hoverTrend} onMouseOver={() => setHoverTrend(true)} onMouseLeave={() => setHoverTrend(false)} >\r\n                        <VerseIcon width={22} />\r\n                        <Flex to=\"cursor\" padding=\"padding: 10px 0px 10px 15px;\">\r\n                            <Text className=\"light\" size=\"12.8\" weight=\"700\">VERSE</Text>\r\n                        </Flex>\r\n                    </Row>\r\n                </a>\r\n                <a onClick={() => setRoute(3)}>\r\n                    <Row align=\"center\" hover={hoverDataset} onMouseOver={() => setHoverDataset(true)} onMouseLeave={() => setHoverDataset(false)}>\r\n                        <SpaceIcon width={22} />\r\n                        <Flex to=\"cursor\" padding=\"padding: 10px 0px 10px 15px;\">\r\n                            <Text className=\"light\" size=\"12.8\" weight=\"700\">SPACE</Text>\r\n                        </Flex>\r\n                    </Row>\r\n                </a>\r\n                <a onClick={() => setRoute(4)}>\r\n                    <Row align=\"center\" hover={hoverNft} onMouseOver={() => setHoverNft(true)} onMouseLeave={() => setHoverNft(false)}>\r\n                        <DesignIcon width={30} height={30} />\r\n                        <Flex to=\"cursor\" padding=\"padding: 10px 0px 10px 15px;\">\r\n                            <Text className=\"light\" size=\"12.8\" weight=\"700\">STUDIO</Text>\r\n                        </Flex>\r\n                    </Row>\r\n                </a>\r\n                <a onClick={() => setRoute(5)}>\r\n                    <Row align=\"center\" hover={hoverNft} onMouseOver={() => setHoverNft(true)} onMouseLeave={() => setHoverNft(false)}>\r\n                        <Image src={logo} width={30} />\r\n                        <Flex to=\"cursor\" padding=\"padding: 10px 0px 10px 12.8px;\">\r\n                            <Text className=\"light\" size=\"12.8\" weight=\"700\">OPS</Text>\r\n                        </Flex>\r\n                    </Row>\r\n                </a>\r\n                <a onClick={() => setRoute(5)}>\r\n                    <Row align=\"center\" hover={hoverNft} onMouseOver={() => setHoverNft(true)} onMouseLeave={() => setHoverNft(false)}>\r\n                        <CodeIcon stroke1={redColor} stroke2={blueColor} stroke3={blueColor} height={15} width={25} />\r\n                        <Flex to=\"cursor\" padding=\"padding: 10px 0px 10px 12.8px;\">\r\n                            <Text className=\"light\" size=\"12.8\" weight=\"700\">RESEARCH</Text>\r\n                        </Flex>\r\n                    </Row>\r\n                </a>\r\n                </Row>\r\n                <Row flex={2} align=\"center\" justify=\"flex-end\" padding=\"padding-right: 38px;\" >\r\n                    <Flex width=\"100px\" margin=\"margin-right: 30px;\">\r\n                        <ThemeToggle darkMode={darkMode} setDarkMode={setDarkMode} />\r\n                    </Flex>\r\n                    {!loggedIn ? \r\n                    (<>\r\n                        \r\n                        <a onClick={() => setRoute(5)}>\r\n                            <Flex margin=\"margin-left: 10px;\" to=\"cursor\" width=\"80px\" height=\"25px\" justify=\"center\" align=\"center\" br=\"15px\" bw={2} bc={blueColor}>\r\n                                <Text className=\"light\" size=\"12\" weight=\"600\">LOGIN</Text>\r\n                            </Flex>\r\n                        </a>\r\n                        <a onClick={() => setRoute(5)}>\r\n                            <Flex margin=\"margin-left: 30px;\" to=\"cursor\" width=\"80px\" height=\"25px\" justify=\"center\" align=\"center\" br=\"15px\" bw={2} bc={blueColor}>\r\n                                <Text className=\"light\" size=\"12\" weight=\"600\">SIGNUP</Text>\r\n                            </Flex>\r\n                        </a>\r\n                    </>) :\r\n                    (\r\n                        <a onClick={() => setRoute(7)}>\r\n                            <Row align=\"center\" to=\"cursor\">\r\n                                <CirclePic margin={15} size={32} image={me} />\r\n                                <Text className=\"light\" size=\"13\">JONATHAN</Text>\r\n                            </Row>\r\n                        </a>\r\n                    )\r\n                }\r\n            </Row>\r\n        </HeaderBox>\r\n    )\r\n};\r\n\r\n{/* <a onClick={() => setRoute(4)} style={{marginLeft: 30}}>\r\n    <Row align=\"center\" hover={hoverNft} onMouseOver={() => setHoverNft(true)} onMouseLeave={() => setHoverNft(false)}>\r\n        <NftIcon width={22} />\r\n        <Flex to=\"cursor\" padding=\"padding: 10px 15px 10px 15px;\">\r\n            <Text className=\"light\" size=\"13\">NFTS</Text>\r\n        </Flex>\r\n    </Row>\r\n</a> */}\r\n\r\nexport default Header;","import React from 'react';\r\n\r\nexport const Nfts = ({route}) => {\r\n    return (\r\n        <div style={{display: route == 4 ? 'block': 'none'}}>\r\n\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default Nfts;","import React from 'react';\r\n\r\nexport const Login = ({route}) => {\r\n    return (\r\n        <div style={{display: route == 5 ? 'block': 'none'}}>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default Login;","import React from 'react';\r\n\r\nexport const Profile = ({route}) => {\r\n    return (\r\n        <div style={{display: route == 6 ? 'block': 'none'}}>\r\n            \r\n        </div>\r\n    )\r\n};\r\n\r\nexport default Profile;","import React, {useState, useEffect} from 'react';\r\nimport {Flex, Col, Row, Text, Image} from '../common/base';\r\nimport Button from '../../icons/generate.svg'\r\nimport { SideBarEvent } from '../../contexts/GlobalContext';\r\n\r\nexport const MyButton = ({label}) => {\r\n    const [hover, setHover] = useState(false);\r\n    const {setSideBar} = SideBarEvent();\r\n    return (\r\n        <Flex onClick={() => setSideBar(true)} onMouseOver={() => setHover(true)} onMouseLeave={() => setHover(false)} us=\"none\" to=\"cursor\" cursorOpaFalse={true} position=\"fixed\" style={{width: 50, height: 50, padding: 20, right: '1.5%', bottom: '12%', zIndex: 10}}>\r\n            <Flex align=\"center\" padding=\"padding-left: 20px;\" bg=\"black\" style={{width: hover ? 270 : 0, opacity: hover ? 1 : 0, height: 50, right: 0, position: 'absolute', transition: 'all 300ms'}} br=\"25px\">\r\n                <Text style={{width: 250, position: 'absolute'}} color=\"white\" className=\"light\">MY MODELS & DATASETS</Text>\r\n            </Flex>\r\n            <Flex style={{right: 0, position: 'absolute', zIndex: 10}}>\r\n                <Image style={{width: 50, height: 50, transition: \"all 300ms\", transform: hover ? 'rotate(45deg)' : 'rotate(0deg)'}} src={Button} />\r\n            </Flex>\r\n        </Flex>\r\n    )\r\n};\r\n\r\nexport default MyButton;","/* eslint-disable import/no-anonymous-default-export */\r\nconst {outerHeight} = window;\r\nconst {outerWidth} = window;\r\nexport const Width = outerWidth;\r\nexport const Height = outerHeight;\r\n\r\nexport default (ratio, w, h) => {\r\n    let { outerWidth } = window;\r\n    let widthP = outerWidth;\r\n    const width = widthP * ratio / 100\r\n    const height = widthP * ratio / 100 / w * h;\r\n    return {\r\n      width,\r\n      height\r\n    };\r\n}","import React, {useState, useEffect} from 'react'\r\nimport {Flex, Col, Row, Text, CirclePic, Image, Input} from '../../components/common/base';\r\nimport gan from '../../imgs/gan.png';\r\nimport Button from '../../components/buttons/button';\r\nimport {bgStyler, hueStyler, btnStyler, blueColor, redColor, purLowColor, purColor, blueLowColor} from '../../styles';\r\nimport {RightIcon, BenchmarkIcon, SearchIcon, CloseIcon} from '../../icons/utilities';\r\nimport styled from 'styled-components';\r\nimport { Height } from '../../hooks/getWindow';\r\nimport { ThemeEvent, SideBarEvent } from '../../contexts/GlobalContext';\r\n\r\nconst Box = styled(Col)`\r\n    transition: background-color .3s,color .3s,box-shadow .3s;\r\n    box-shadow: 0 0 0.1rem rgb(0 0 0 / 10%), 0 0.15rem 0.9rem rgb(0 0 0 / 10%);\r\n    border: 0;\r\n    ::-webkit-scrollbar {\r\n        display: none;\r\n        -ms-overflow-style: none;  /* IE and Edge */\r\n        scrollbar-width: none;\r\n      }\r\n      \r\n`;\r\nexport const Model = ({darkMode}) => {\r\n    return (\r\n        <Box margin=\"margin: 10px 0px;\" padding=\"padding: 15px\" style={{flexDirection: 'row', height: 180}} bg={bgStyler(darkMode)} br=\"20px;\">\r\n            <Col>\r\n                <Row align=\"center\">\r\n                    <Flex flex={1} style={{maxHeight: 100, maxWidth: 100, overflow: 'hidden'}} br=\"10px\" align=\"center\" justify=\"center\">\r\n                        <Image src={gan} style={{height: '100%', width: '100%'}} of=\"cover\" />\r\n                    </Flex>\r\n                    <Flex flex={6} margin=\"margin-left: 10px;\">\r\n                        <Text className=\"bold\" size=\"14\">\r\n                            JoJoGAN: One Shot Face Stylization\r\n                        </Text>\r\n                    </Flex>\r\n                </Row>\r\n                <Text style={{opacity: 0.85}} size=\"12.8\" className=\"light\" weight=\"500\" margin=\"margin: 10px 0px;\">\r\n                    mchong6/JoJoGAN •  • arXiv 2021\r\n                </Text>\r\n                <Text margin=\"margin-bottom: 5px;\" size=\"12.8\" style={{height: 50, overflow: 'hidden'}}>\r\n                    While there have been recent advances in few-shot image stylization, these methods\r\n                    fail to capture stylistic details that are obvious to humans. Details such as the shape\r\n                    of the eyes, the boldness of the lines, are especially difficult for a model to learn,\r\n                    especially so under a limited data setting. In this work, we aim to perform oneshot image stylization that gets the details right. Given a reference style image,\r\n                    we approximate paired real data using GAN inversion and finetune a pretrained\r\n                    StyleGAN using that approximate paired data. We then encourage the StyleGAN\r\n                    to generalize so that the learned style can be applied to all other images.                    \r\n                </Text>\r\n                <Row margin=\"margin: 5px 0px;\">\r\n                    <Text>GAN Inversion</Text>\r\n                    <Text>Image Stylization</Text>\r\n                </Row>\r\n            </Col>\r\n        </Box>\r\n    )\r\n}\r\n\r\nconst sideBarHeight = Height - 80;\r\n\r\nexport const SideBar = ({}) => {\r\n    const [model, setModel] = useState(true);\r\n    const {darkMode} = ThemeEvent();\r\n    const {sideBar, setSideBar} = SideBarEvent();\r\n    return (\r\n        <Box position=\"fixed\" padding=\"padding: 20px;\" style={{zIndex: 100, right: sideBar ? 0 : - 400, width: 400, height: sideBarHeight, transition: 'all 300ms ease', top: 0, marginTop: 80, overflowY: 'scroll'}} bg={darkMode ? \"black\" : \"white\"}>\r\n            <Flex position=\"absolute\" onClick={() => setSideBar(false)} style={{right: 20, top: 20}} to=\"cursor\">\r\n                <CloseIcon bg={bgStyler(darkMode)} stroke={\"white\"} width={23} height={23} />\r\n            </Flex>\r\n            <Col>\r\n                <Row align=\"center\" justify=\"space-between\" margin=\"margin-right: 40px;\">\r\n                    <Text to=\"cursor\" size=\"20\" className=\"bold\" margin=\"margin-bottom: 10px;\">{model == true ? \"My Models\" : \"My Datasets\"}</Text>\r\n                    <Text to=\"cursor\" onClick={() => setModel(!model)} size=\"20\" className=\"bold\" size=\"12.8\" color=\"rgb(100, 100, 100)\" margin=\"margin-bottom: 10px;\">{model == true ? \"My Datasets\" : \"My Models\"}</Text>\r\n                </Row>\r\n                <Model darkMode={darkMode} />\r\n                <Model darkMode={darkMode} />\r\n                <Model darkMode={darkMode} />\r\n                <Flex justify=\"center\"><Text>More</Text></Flex>\r\n            </Col>\r\n            <Col margin=\"margin-top: 20px;\">\r\n                <Text size=\"20\" className=\"bold\" margin=\"margin-bottom: 10px;\">Saved</Text>\r\n                <Model darkMode={darkMode} />\r\n                <Model darkMode={darkMode} />\r\n                <Model darkMode={darkMode} />\r\n                <Model darkMode={darkMode} />\r\n                <Model darkMode={darkMode} />\r\n            </Col>\r\n        </Box>\r\n    )\r\n}\r\n\r\nexport default SideBar;","import React from 'react';\r\nimport SideBar from './components';\r\n\r\nexport const Index = ({sideBar, setSideBar, darkMode}) => {\r\n    return (\r\n        <SideBar sideBar={sideBar} setSideBar={setSideBar} darkMode={darkMode} />\r\n    )\r\n}\r\n\r\nexport default SideBar;","import React, {useState, useEffect} from 'react';\r\nimport {Flex, Col, Row, Text} from '../common/base';\r\nimport {ThemeEvent} from '../../contexts/GlobalContext';\r\nimport { redLowColor, blueColor, purColor, blueLowColor } from '../../styles';\r\nimport styled from 'styled-components';\r\n\r\nconst T = styled(Text)`\r\n    :hover {\r\n        font-weight: 800;\r\n    };\r\n    transition: all 0.3s;\r\n`;\r\n\r\nexport const FollowButton = ({scale = 1}) => {\r\n    const {darkMode} = ThemeEvent();\r\n    const [hover, setHover] = useState(false);\r\n    const [follow, setFollow] = useState(false);\r\n    return (\r\n        <Col \r\n            onClick={() => setFollow(!follow)} to=\"cursor\" \r\n            cursorOpaFalse={true} \r\n            onMouseOver={() => setHover(true)} \r\n            onMouseLeave={() => setHover(false)} \r\n            style={{transform: `scale(${scale})`, borderColor: follow ? redLowColor : blueLowColor, borderStyle: 'solid', borderWidth: 1.5}} \r\n            align=\"center\" \r\n            height=\"23px\" \r\n            width=\"70px\" \r\n            justify=\"center\" \r\n            br=\"20px\">\r\n            <T weight=\"600\" className=\"light\" color={darkMode ? \"white\" : \"black\"} padding=\"padding: 8px 10px 8px 10px\" size=\"9\">{follow ? \"Unfollow\" : \"+ Follow\"}</T>\r\n        </Col>\r\n    )\r\n}\r\n\r\nexport default FollowButton;","import React, {useState, useEffect} from 'react';\r\nimport { Flex } from '../common/base';\r\n\r\nexport const ReadEngine = ({darkMode}) => {\r\n    return (\r\n        <Flex style={{width: '100%', overflow: 'hidden', position: 'relative'}}>\r\n            <div id=\"graph\" className=\"graph\" tabIndex={0}>\r\n                <svg id=\"canvas\" className=\"canvas\" preserveAspectRatio=\"xMidYMid meet\" width=\"100%\" height=\"100%\"></svg>\r\n            </div>\r\n            <SideBar />\r\n            <ToolBox />\r\n            {/* <div id=\"transparent\" className=\"transparent\"></div>\r\n            <div className=\"center logo\">\r\n                \r\n                <div className=\"center logo-message\" style={{display: 'none'}}>\r\n                    <div style={{height: 30, textAlign: 'center'}}>Version <span id=\"version\" className=\"select\">5.4.7</span></div>\r\n                    <div style={{height: 30, textAlign: 'center'}}>Copyright © <a href=\"https://www.lutzroeder.com/\" target=\"blank_\">Lutz Roeder</a></div>\r\n                </div>\r\n                \r\n                <span className=\"center consent-message\">This app uses cookies to report errors and anonymous usage information.</span>\r\n                <button id=\"consent-accept-button\" className=\"center consent-accept-button\">Accept</button>\r\n                <button id=\"open-file-button\" className=\"center open-file-button\">Open Model…</button>\r\n                <input type=\"file\" id=\"open-file-dialog\" className=\"open-file-dialog\" multiple={false} accept=\".onnx, .pb, .meta, .tflite, .lite, .tfl, .keras, .h5, .hd5, .hdf5, .json, .model, .mar, .params, .param, .armnn, .mnn, .ncnn, .tnnproto, .tmfile, .ms, .om, .nn, .uff, .rknn, .xmodel, .paddle, .pdmodel, .pdparams, .nb, .dnn, .cmf, .mlmodel, .mlpackage, .caffemodel, .pbtxt, .prototxt, .pkl, .pt, .pth, .ptl, .t7, .joblib, .cfg, .xml, .zip, .tar\" />\r\n            </div> */}\r\n        </Flex>\r\n    )\r\n}\r\n\r\nexport const SideBar = ({}) => {\r\n    return (\r\n        <div id=\"sidebar\" className=\"sidebar\"></div>\r\n    )\r\n}\r\n\r\nexport const ToolBox = ({}) => {\r\n    return (\r\n        <div id=\"toolbar\" className=\"toolbar\">\r\n            <button id=\"menu-button\" className=\"toolbar-button\" title=\"Menu\">\r\n                <svg className=\"icon\" viewBox=\"0 0 100 100\">\r\n                    <rect className=\"border\" x=\"12\" y=\"12\" width=\"76\" height=\"76\" rx=\"16\" ry=\"16\" strokeWidth=\"8\"></rect>\r\n                    <line className=\"border\" x1=\"30\" y1=\"37\" x2=\"70\" y2=\"37\" strokeWidth=\"8\" strokeLinecap=\"round\" stroke=\"#fff\"></line>\r\n                    <line className=\"border\" x1=\"30\" y1=\"50\" x2=\"70\" y2=\"50\" strokeWidth=\"8\" strokeLinecap=\"round\" stroke=\"#fff\"></line>\r\n                    <line className=\"border\" x1=\"30\" y1=\"63\" x2=\"70\" y2=\"63\" strokeWidth=\"8\" strokeLinecap=\"round\" stroke=\"#fff\"></line>\r\n                    <rect className=\"stroke\" x=\"12\" y=\"12\" width=\"76\" height=\"76\" rx=\"16\" ry=\"16\" strokeWidth=\"4\"></rect>\r\n                    <line className=\"stroke\" x1=\"30\" y1=\"37\" x2=\"70\" y2=\"37\" strokeWidth=\"4\" strokeLinecap=\"round\"></line>\r\n                    <line className=\"stroke\" x1=\"30\" y1=\"50\" x2=\"70\" y2=\"50\" strokeWidth=\"4\" strokeLinecap=\"round\"></line>\r\n                    <line className=\"stroke\" x1=\"30\" y1=\"63\" x2=\"70\" y2=\"63\" strokeWidth=\"4\" strokeLinecap=\"round\"></line>\r\n                </svg>\r\n            </button>\r\n            <button id=\"zoom-in-button\" className=\"toolbar-button\" title=\"Zoom In\">\r\n                <svg className=\"icon\" viewBox=\"0 0 100 100\">\r\n                    <circle className=\"border\" cx=\"50\" cy=\"50\" r=\"35\" strokeWidth=\"8\" stroke=\"#fff\"></circle>\r\n                    <line className=\"border\" x1=\"50\" y1=\"38\" x2=\"50\" y2=\"62\" strokeWidth=\"8\" strokeLinecap=\"round\" stroke=\"#fff\"></line>\r\n                    <line className=\"border\" x1=\"38\" y1=\"50\" x2=\"62\" y2=\"50\" strokeWidth=\"8\" strokeLinecap=\"round\" stroke=\"#fff\"></line>\r\n                    <line className=\"border\" x1=\"78\" y1=\"78\" x2=\"82\" y2=\"82\" strokeWidth=\"12\" strokeLinecap=\"square\" stroke=\"#fff\"></line>\r\n                    <circle className=\"stroke\" cx=\"50\" cy=\"50\" r=\"35\" strokeWidth=\"4\"></circle>\r\n                    <line className=\"stroke\" x1=\"50\" y1=\"38\" x2=\"50\" y2=\"62\" strokeWidth=\"4\" strokeLinecap=\"round\"></line>\r\n                    <line className=\"stroke\" x1=\"38\" y1=\"50\" x2=\"62\" y2=\"50\" strokeWidth=\"4\" strokeLinecap=\"round\"></line>\r\n                    <line className=\"stroke\" x1=\"78\" y1=\"78\" x2=\"82\" y2=\"82\" strokeWidth=\"8\" strokeLinecap=\"square\"></line>\r\n                </svg>\r\n            </button>\r\n            <button id=\"zoom-out-button\" className=\"toolbar-button\" title=\"Zoom Out\">\r\n                <svg className=\"icon\" viewBox=\"0 0 100 100\">\r\n                    <circle className=\"border\" cx=\"50\" cy=\"50\" r=\"35\" strokeWidth=\"8\" stroke=\"#fff\"></circle>\r\n                    <line className=\"border\" x1=\"38\" y1=\"50\" x2=\"62\" y2=\"50\" strokeWidth=\"8\" strokeLinecap=\"round\" stroke=\"#fff\"></line>\r\n                    <line className=\"border\" x1=\"78\" y1=\"78\" x2=\"82\" y2=\"82\" strokeWidth=\"12\" strokeLinecap=\"square\" stroke=\"#fff\"></line>\r\n                    <circle className=\"stroke\" cx=\"50\" cy=\"50\" r=\"35\" strokeWidth=\"4\"></circle>\r\n                    <line className=\"stroke\" x1=\"38\" y1=\"50\" x2=\"62\" y2=\"50\" strokeWidth=\"4\" strokeLinecap=\"round\"></line>\r\n                    <line className=\"stroke\" x1=\"78\" y1=\"78\" x2=\"82\" y2=\"82\" strokeWidth=\"8\" strokeLinecap=\"square\"></line>\r\n                </svg>\r\n            </button>\r\n            <button id=\"back-button\" className=\"toolbar-back-button\" title=\"Back\">\r\n                ❮\r\n            </button>\r\n            <button id=\"name-button\" className=\"toolbar-name-button\" title=\"Name\">\r\n            </button>\r\n            <div id=\"menu-dropdown\" className=\"dropdown\" style={{display: 'none'}}></div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ReadEngine;","import React, {useState, useEffect} from 'react'\r\nimport {Flex, Col, Row, Text, CirclePic, Image, Box} from '../common/base';\r\nimport logocircle from '../../imgs/logocircle.png';\r\nimport {bgStyler, btnStyler, hueStyler} from '../../styles';\r\nimport FollowButton from '../buttons/folllowButton';\r\nimport {Height, Width} from '../../hooks/getWindow';\r\nimport {CloseIcon} from '../../icons/utilities';\r\nimport styled from 'styled-components'\r\nimport ReadEngine from '../read_engine';\r\n\r\nimport { ThemeEvent, VisualizerEvent } from '../../contexts/GlobalContext';\r\n\r\nexport const VisualizerModal = ({setVisualizer, visualizer, darkMode}) => {\r\n    return (\r\n        <Box width=\"100%\" padding=\"padding: 25px 10%\" bg={darkMode ? \"rgba(15, 15, 15, 0.98)\" : \"rgba(255, 255, 255, 0.95)\"} style={{backdropFilter: 'blur(2px)', height: '100%', alignSelf: 'center', justifySelf: 'flex-end', overflowY: 'scroll', position: 'relative'}}>\r\n            <Flex cursorOpaFalse={true} onClick={() => setVisualizer(false)} to=\"cursor\" position=\"absolute\" style={{right: 0, top: 0}}>\r\n                <CloseIcon width={30} height={30} bg=\"rgb(47, 47, 47)\" stroke=\"white\" />\r\n            </Flex>\r\n            <Col padding=\"padding: 25px;\" style={{overflow: 'hidden'}}>\r\n                <Row align=\"center\">\r\n                    <CirclePic bg={bgStyler(darkMode)} image={logocircle} size={33} />\r\n                    <Col margin=\"margin-left: 15px;\">\r\n                        <Row align=\"center\">\r\n                            <Text size=\"15\" weight=\"600\" margin=\"margin-right: 8px;\">Neuralverse</Text>\r\n                            {/* <Flex>\r\n                                <FollowButton scale={0.9} />\r\n                            </Flex> */}\r\n                        </Row>\r\n                        <Text size=\"12\" margin=\"margin-top: 2.5px;\" style={{opacity: 0.8}}>Beyond the State of the Arts</Text>\r\n                    </Col>\r\n                </Row>\r\n                <Row align=\"center\">\r\n                    <Col margin=\"margin: 20px 0px; margin-right: 20px;\" flex={1}>\r\n                        <Text className=\"bold\" weight=\"600\" size=\"18\">A ConvNet for the 2020s</Text>\r\n                        <Text className=\"light\"  size=\"12.8\" weight=\"400\" margin=\"margin-top: 5px;\" style={{opacity: 0.8}}>Zhuang Liu, Hanzi Mao, Chao-Yuan Wu, Christoph Feichtenhofer, Trevor Darrell, Saining Xie</Text>\r\n                    </Col>\r\n                    <CustomizeModelBtn darkMode={darkMode} />\r\n                </Row>\r\n                <ReadEngine darkMode={darkMode}/>\r\n            </Col>\r\n        </Box>\r\n    )\r\n}\r\n\r\nexport const CustomizeModelBtn = ({darkMode}) => {\r\n    return (\r\n        <Flex height=\"27px;\" ato=\"cursor\" margin=\"margin-bottom: 25px;\" cursorOpaFalse={true} width=\"170px\" opacity={0.9} bg={hueStyler(darkMode)} br=\"20px;\">\r\n            <Text size=\"12\" className=\"bold\" color=\"white\" padding=\"padding: 8px 15px; padding-top: 6px;\" >Customize this Model</Text>\r\n        </Flex>\r\n    )\r\n}\r\n\r\nexport const Visualizer = () => {\r\n    const {visualizer, setVisualizer} = VisualizerEvent();\r\n    const {darkMode} = ThemeEvent();\r\n    \r\n    return (\r\n        <Col \r\n            className=\"visualbox\" \r\n            bg={\"rgba(0,0,0,0)\"} \r\n            position=\"fixed\" \r\n            style={{\r\n                width: '100%',\r\n                height: Height - 148,\r\n                overflow: 'hidden', \r\n                opacity: visualizer ? 1 : 0, \r\n                top: visualizer ? 80 : '100%',\r\n                transition: 'all 300ms',\r\n                zIndex: 1000,\r\n            }}>\r\n            <VisualizerModal setVisualizer={setVisualizer} visualizer={visualizer} darkMode={darkMode} />\r\n        </Col>\r\n    )\r\n}\r\n\r\nexport default Visualizer;","import React, {useState, useEffect} from 'react';\r\nimport {Flex, Row, Col, Text, Image} from '../components/common/base';\r\nimport { bgStyler } from '../styles';\r\nimport logo from '../imgs/logo.png';\r\nimport cvlab from '../imgs/cvlab.png';\r\nimport styled from 'styled-components';\r\n\r\nconst T = styled(Text)`\r\n    font-size: 12.8px;\r\n    font-weight: 400;\r\n    cursor: pointer;\r\n    opacity: 0.7;\r\n    :hover {\r\n        opacity: 1;\r\n    }\r\n`;\r\n\r\nconst textstyle = (darkMode) => {\r\n    return {\r\n        fontSize: 12.8,\r\n        fontWeight: 400,\r\n        opacity: darkMode ? 0.7 : 1,\r\n    }\r\n}\r\n\r\n\r\nexport const Footer = ({darkMode}) => {\r\n    return (\r\n        <Row height=\"300px;\" align=\"center\" justify=\"space-between\" padding=\"padding: 55px; padding-right: 150px\" bg={bgStyler(darkMode)}>\r\n            <Col align=\"center\">\r\n                <Image height=\"25px\" src={logo} />\r\n                <Text style={textstyle(darkMode)} className=\"light\" margin=\"margin-top: 20px;\">© 2022 NeuralVerse. All right reserved.</Text>\r\n                <Row margin=\"margin-top: 30px;\">\r\n                    <Text style={textstyle(darkMode)} className=\"light\">Technical Supports:</Text>\r\n                    <Text style={textstyle(darkMode)} className=\"light\" margin=\"margin-left: 5px;\">support@neuralverse.ai</Text>\r\n                </Row>\r\n                <Row margin=\"margin-top: 10px;\">\r\n                    <Text style={textstyle(darkMode)} className=\"light\">Other Supports:</Text>\r\n                    <Text style={textstyle(darkMode)} className=\"light\" margin=\"margin-left: 5px;\">team@neuralverse.ai</Text>\r\n                </Row>\r\n            </Col>            \r\n            <Col align=\"center\">\r\n                <Text className=\"light\">SERVICES</Text>\r\n                <Col align=\"center\">\r\n                    <Text className=\"light\" margin=\"margin-top: 20px;\" style={textstyle(darkMode)}>Neural Verse</Text>\r\n                    <Text className=\"light\" margin=\"margin-top: 15px;\" style={textstyle(darkMode)}>Neural Space</Text>\r\n                    <Text className=\"light\" margin=\"margin-top: 15px;\" style={textstyle(darkMode)}>Neural Studio</Text>\r\n                    <Text className=\"light\" margin=\"margin-top: 15px;\" style={textstyle(darkMode)}>Neural Ops</Text>\r\n                    <Text className=\"light\" margin=\"margin-top: 15px;\" style={textstyle(darkMode)}>Neural Workspace</Text>\r\n                </Col>\r\n            </Col>\r\n            <Col align=\"center\">\r\n                <Text className=\"light\">DEVELOPERS</Text>\r\n                <Col align=\"center\">\r\n                    <Text style={textstyle(darkMode)} margin=\"margin-top: 20px;\" className=\"light\">Overview</Text>\r\n                    <Text style={textstyle(darkMode)} margin=\"margin-top: 15px\" className=\"light\">Neural Blog</Text>\r\n                    <Text style={textstyle(darkMode)} margin=\"margin-top: 15px;\" className=\"light\">API Documentation</Text>\r\n                    <Text style={textstyle(darkMode)} margin=\"margin-top: 15px;\" className=\"light\">API Token</Text>\r\n                    <Text style={textstyle(darkMode)} margin=\"margin-top: 15px;\" className=\"light\">Neural Discuss</Text>\r\n                </Col>\r\n            </Col>\r\n            <Col align=\"center\">\r\n                <Text className=\"light\">NEURALVERSE</Text>\r\n                <Col align=\"center\">\r\n                    <Text style={textstyle(darkMode)} margin=\"margin-top: 20px;\" className=\"light\">About Us</Text>\r\n                    <Text style={textstyle(darkMode)} margin=\"margin-top: 15px;\" className=\"light\">Contact Us</Text>\r\n                    <Text style={textstyle(darkMode)} margin=\"margin-top: 15px;\" className=\"light\">Terms of Service</Text>\r\n                    <Text style={textstyle(darkMode)} margin=\"margin-top: 15px;\" className=\"light\">Privacy Policy</Text>\r\n                    <Text style={textstyle(darkMode)} margin=\"margin-top: 15px;\" className=\"light\">Github</Text>\r\n                </Col>\r\n            </Col>\r\n        </Row>\r\n    )\r\n};\r\n\r\nexport default Footer;","import React, { useEffect } from 'react';\r\nimport {Text, Flex, Row, Col, Image} from '../../components/common/base';\r\nimport earth from '../../imgs/best.mp4';\r\nimport * as THREE from 'three';\r\nimport ReactPlayer from 'react-player';\r\n\r\nexport const Index = ({darkMode}) => {\r\n    // useEffect(() => {\r\n        \r\n\r\n\r\n\t// \t\tconst SEPARATION = 100, AMOUNTX = 50, AMOUNTY = 50;\r\n\r\n\t// \t\tlet container, stats;\r\n\t// \t\tlet camera, scene, renderer;\r\n\r\n\t// \t\tlet particles, count = 0;\r\n\r\n\t// \t\tlet mouseX = 0, mouseY = 0;\r\n\r\n\t// \t\tlet windowHalfX = window.innerWidth / 2;\r\n\t// \t\tlet windowHalfY = window.innerHeight / 2;\r\n\r\n\t// \t\tinit();\r\n\t// \t\tanimate();\r\n\r\n\t// \t\tfunction init() {\r\n\r\n\t// \t\t\tcontainer = document.createElement( 'div' );\r\n\t// \t\t\tdocument.getElementsByClassName(\"landing\")[0].appendChild( container );\r\n\r\n\t// \t\t\tcamera = new THREE.PerspectiveCamera( 75, window.innerWidth / window.innerHeight, 1, 10000 );\r\n\t// \t\t\tcamera.position.z = 1000;\r\n\r\n\t// \t\t\tscene = new THREE.Scene();\r\n\r\n\t// \t\t\t//\r\n\r\n\t// \t\t\tconst numParticles = AMOUNTX * AMOUNTY;\r\n\r\n\t// \t\t\tconst positions = new Float32Array( numParticles * 3 );\r\n\t// \t\t\tconst scales = new Float32Array( numParticles );\r\n\r\n\t// \t\t\tlet i = 0, j = 0;\r\n\r\n\t// \t\t\tfor ( let ix = 0; ix < AMOUNTX; ix ++ ) {\r\n\r\n\t// \t\t\t\tfor ( let iy = 0; iy < AMOUNTY; iy ++ ) {\r\n\r\n\t// \t\t\t\t\tpositions[ i ] = ix * SEPARATION - ( ( AMOUNTX * SEPARATION ) / 2 ); // x\r\n\t// \t\t\t\t\tpositions[ i + 1 ] = 0; // y\r\n\t// \t\t\t\t\tpositions[ i + 2 ] = iy * SEPARATION - ( ( AMOUNTY * SEPARATION ) / 2 ); // z\r\n\r\n\t// \t\t\t\t\tscales[ j ] = 1;\r\n\r\n\t// \t\t\t\t\ti += 3;\r\n\t// \t\t\t\t\tj ++;\r\n\r\n\t// \t\t\t\t}\r\n\r\n\t// \t\t\t}\r\n\r\n\t// \t\t\tconst geometry = new THREE.BufferGeometry();\r\n\t// \t\t\tgeometry.setAttribute( 'position', new THREE.BufferAttribute( positions, 3 ) );\r\n\t// \t\t\tgeometry.setAttribute( 'scale', new THREE.BufferAttribute( scales, 1 ) );\r\n\r\n\t// \t\t\tconst material = new THREE.ShaderMaterial( {\r\n\r\n\t// \t\t\t\tuniforms: {\r\n\t// \t\t\t\t\tcolor: { value: new THREE.Color( \"white\" ) },\r\n\t// \t\t\t\t},\r\n\t// \t\t\t\tvertexShader: document.getElementById( 'vertexshader' ).textContent,\r\n\t// \t\t\t\tfragmentShader: document.getElementById( 'fragmentshader' ).textContent\r\n\r\n\t// \t\t\t} );\r\n\r\n\t// \t\t\t//\r\n\r\n\t// \t\t\tparticles = new THREE.Points( geometry, material );\r\n\t// \t\t\tscene.add( particles );\r\n\r\n\t// \t\t\t//\r\n\r\n\t// \t\t\trenderer = new THREE.WebGLRenderer( { antialias: true, alpha: true } );\r\n\t// \t\t\trenderer.setClearColor( 0x000000, 0 );\r\n\t// \t\t\trenderer.setPixelRatio( window.devicePixelRatio );\r\n\t// \t\t\trenderer.setSize( window.innerWidth, window.innerHeight );\r\n\t// \t\t\tcontainer.appendChild( renderer.domElement );\r\n\r\n\t// \t\t\t// stats = new Stats();\r\n\t// \t\t\t// container.appendChild( stats.dom );\r\n\r\n\t// \t\t\tcontainer.style.touchAction = 'none';\r\n\t// \t\t\tcontainer.addEventListener( 'pointermove', onPointerMove );\r\n\r\n\t// \t\t\t//\r\n\r\n\t// \t\t\twindow.addEventListener( 'resize', onWindowResize );\r\n\r\n\t// \t\t}\r\n\r\n\t// \t\tfunction onWindowResize() {\r\n\r\n\t// \t\t\twindowHalfX = window.innerWidth / 2;\r\n\t// \t\t\twindowHalfY = window.innerHeight / 2;\r\n\r\n\t// \t\t\tcamera.aspect = window.innerWidth / window.innerHeight;\r\n\t// \t\t\tcamera.updateProjectionMatrix();\r\n\r\n\t// \t\t\trenderer.setSize( window.innerWidth, window.innerHeight );\r\n\r\n\t// \t\t}\r\n\r\n\t// \t\t//\r\n\r\n\t// \t\tfunction onPointerMove( event ) {\r\n\r\n\t// \t\t\tif ( event.isPrimary === false ) return;\r\n\r\n\t// \t\t\tmouseX = event.clientX - windowHalfX;\r\n\t// \t\t\tmouseY = event.clientY - windowHalfY;\r\n\r\n\t// \t\t}\r\n\r\n\t// \t\t//\r\n\r\n\t// \t\tfunction animate() {\r\n\r\n\t// \t\t\trequestAnimationFrame( animate );\r\n\r\n\t// \t\t\trender();\r\n\t// \t\t\t//stats.update();\r\n\r\n\t// \t\t}\r\n\r\n\t// \t\tfunction render() {\r\n\r\n\t// \t\t\tcamera.position.x += ( mouseX - camera.position.x ) * .05;\r\n\t// \t\t\tcamera.position.y += ( - mouseY - camera.position.y ) * .05;\r\n\t// \t\t\tcamera.lookAt( scene.position );\r\n\r\n\t// \t\t\tconst positions = particles.geometry.attributes.position.array;\r\n\t// \t\t\tconst scales = particles.geometry.attributes.scale.array;\r\n\r\n\t// \t\t\tlet i = 0, j = 0;\r\n\r\n\t// \t\t\tfor ( let ix = 0; ix < AMOUNTX; ix ++ ) {\r\n\r\n\t// \t\t\t\tfor ( let iy = 0; iy < AMOUNTY; iy ++ ) {\r\n\r\n\t// \t\t\t\t\tpositions[ i + 1 ] = ( Math.sin( ( ix + count ) * 0.3 ) * 50 ) +\r\n\t// \t\t\t\t\t\t\t\t\t( Math.sin( ( iy + count ) * 0.5 ) * 50 );\r\n\r\n\t// \t\t\t\t\tscales[ j ] = ( Math.sin( ( ix + count ) * 0.3 ) + 1 ) * 20 +\r\n\t// \t\t\t\t\t\t\t\t\t( Math.sin( ( iy + count ) * 0.5 ) + 1 ) * 20;\r\n\r\n\t// \t\t\t\t\ti += 3;\r\n\t// \t\t\t\t\tj ++;\r\n\r\n\t// \t\t\t\t}\r\n\r\n\t// \t\t\t}\r\n\r\n\t// \t\t\tparticles.geometry.attributes.position.needsUpdate = true;\r\n\t// \t\t\tparticles.geometry.attributes.scale.needsUpdate = true;\r\n\r\n\t// \t\t\trenderer.render( scene, camera );\r\n\r\n\t// \t\t\tcount += 0.1;\r\n\r\n\t// \t\t}\r\n\r\n    // })\r\n    return (\r\n        <Col justify=\"center\" style={{height: '100vh', width: '100vw', overflow: 'hidden'}} position=\"relative\">\r\n\t\t\t<div className=\"landing\" style={{position: 'absolute', width: '100%', height: '100%', zIndex: 10}}></div>\r\n            <Col justify=\"center\" align=\"center\" style={{alignSelf: \"center\"}} position=\"absolute\" zIndex={10}>\r\n                <Text zIndex={10} className=\"bold\" size=\"30\" color=\"white\" style={{textShadow: '1.5px 1.5px 1.5px rgba(20, 20, 20, 0.9)'}}>BEYOND THE STATE OF THE ARTS</Text>\r\n                <Text zIndex={10} margin=\"margin: 10px\" color=\"white\" className=\"bold\" style={{textShadow: '1.5px 1.5px 1.5px rgba(20, 20, 20, 0.9)'}} size=\"20\">WE BELIEVE THE HUMAN COLLECTIVE INTELLIGENCE</Text>\r\n            </Col>\r\n\t\t\t<ReactPlayer mute={true} playing={true} loop={true} url={earth} width='100%' height='100%' style={{position: 'absolute'}} />\t\r\n        </Col>\r\n    )\r\n};\r\n    \r\nexport default Index;","import React from 'react';\r\nimport {Text, Flex, Row, Col, Image} from '../../components/common/base';\r\nimport { VerseIcon } from '../../icons/headericons';\r\n\r\nexport const Index = ({}) => {\r\n    return (\r\n        <Col align=\"center\" justify=\"center\" style={{height: '120vh'}} position=\"relative\">\r\n            <Row align=\"center\" position=\"absolute\" style={{right: '15%', top: '5%'}}>\r\n                <VerseIcon width={30} height={30} />\r\n                <Text className=\"bold\" size=\"18\" margin=\"margin-left: 15px;\">NEURAL VERSE</Text>\r\n            </Row>\r\n            <Row>\r\n                <Col flex={1} align=\"center\" justify=\"center\">\r\n                    <Text className=\"bold\" size=\"30\">Share More</Text>\r\n                    <Text className=\"bold\" size=\"30\">Grow Fast</Text>\r\n                </Col>\r\n                <Col flex={1} align=\"center\" justify=\"center\">\r\n                    <Text>Sharing your idea helps growing ideas</Text>\r\n                </Col>\r\n            </Row>\r\n            <Row align=\"center\" justify=\"center\">\r\n                <Col flex={1} align=\"center\" justify=\"center\">\r\n                    <Text className=\"bold\" size=\"30\">Share More</Text>\r\n                    <Text className=\"bold\" size=\"30\">Grow Fast</Text>\r\n                </Col>\r\n                <Col flex={1} align=\"center\" justify=\"center\">\r\n                    <Text>Sharing your idea helps growing ideas</Text>\r\n                </Col>\r\n            </Row>\r\n        </Col>\r\n    )\r\n};\r\n\r\nexport default Index;","import React from 'react';\r\nimport {Text, Flex, Row, Col, Image} from '../../components/common/base';\r\nimport { SpaceIcon } from '../../icons/headericons';\r\n\r\nexport const Index = ({}) => {\r\n    return (\r\n        <Col align=\"center\" justify=\"center\" style={{height: '70vh'}} position=\"relative\">\r\n            <Row align=\"center\" position=\"absolute\" style={{left: '15%', top: '5%'}}>\r\n                <SpaceIcon width={50} height={50} />\r\n                <Text className=\"bold\" size=\"18\" margin=\"margin-left: 15px;\">NEURAL SPACE</Text>\r\n            </Row>\r\n            <Text className=\"bold\" size=\"30\">CUSTOMIZE SOTAS TO YOUR OWN</Text>\r\n            <Text className=\"bold\" size=\"30\">GENERATE YOUR MODEL IN INSTANCE</Text>\r\n        </Col>\r\n    )\r\n};\r\n\r\nexport default Index;","import React from 'react';\r\nimport {Text, Flex, Row, Col, Image} from '../../components/common/base';\r\nimport { DesignIcon, StudioLight } from '../../icons/headericons';\r\n\r\nexport const Index = ({}) => {\r\n    return (\r\n        <Col align=\"center\" justify=\"center\" style={{height: '70vh'}} position=\"relative\">\r\n            <Row align=\"center\" position=\"absolute\" style={{right: '15%', top: '5%'}}>\r\n                <DesignIcon width={50} height={50} />\r\n                <Text className=\"bold\" size=\"18\" margin=\"margin-left: 15px;\">NEURAL STUDIO</Text>\r\n            </Row>\r\n            <Text className=\"bold\" size=\"30\">GENERATE NFT OF YOUR OWN MODEL</Text>\r\n        </Col>\r\n    )\r\n};\r\n\r\nexport default Index;","import React from 'react';\r\nimport {Text, Flex, Row, Col, Image} from '../../components/common/base';\r\nimport ReactPlayer from 'react-player';\r\nimport gd from '../../imgs/gd.mp4';\r\nimport logo from '../../imgs/logo.png';\r\n\r\nexport const Index = ({}) => {\r\n    return (\r\n        <Row align=\"center\" justify=\"center\" style={{height: '70vh'}} padding=\"padding: 10%\" position=\"relative\">\r\n            <Row align=\"center\" position=\"absolute\" style={{left: '15%', top: '5%'}}>\r\n                <Image src={logo} width={50} />\r\n                <Text className=\"bold\" size=\"18\" margin=\"margin-left: 15px;\">NEURAL OPS</Text>\r\n            </Row>\r\n            <Col flex={1}>\r\n                <Text className=\"bold\" size=\"30\">TRAIN YOUR MODEL ON BATCH FLY</Text>\r\n            </Col>\r\n            <Col flex={1}>\r\n                <Flex position=\"relative\" width=\"100%\" height=\"100%\">\r\n                    <Flex style={{position: 'absolute', width: 300, height: 30, right: 0}} bg=\"black\"></Flex>\r\n                    <ReactPlayer muted={true} playing={true} loop={true} width=\"100%\" height=\"100%\" style={{objectFit: 'cover'}} url={gd} />\r\n                </Flex>\r\n                <Text>3Brown1Eye</Text>\r\n            </Col>\r\n        </Row>\r\n    )\r\n};\r\n\r\nexport default Index;","import React from 'react';\r\nimport {Text, Flex, Row, Col, Image} from '../../components/common/base';\r\n\r\nexport const Index = ({}) => {\r\n    return (\r\n        <Flex align=\"center\" justify=\"center\" style={{height: '70vh'}}>\r\n            <Text className=\"bold\" size=\"30\">RATE AND COMPETE WITH OTHER MODELS</Text>\r\n        </Flex>\r\n    )\r\n};\r\n\r\nexport default Index;","import React from 'react';\r\nimport {Text, Flex, Row, Col, Image} from '../../components/common/base';\r\n\r\nexport const Index = ({}) => {\r\n    return (\r\n        <Flex align=\"center\" justify=\"center\" style={{height: '70vh'}}>\r\n            <Text size=\"30\" className=\"bold\">CHECK OUT SOTAS IN NEURALVERSE</Text>\r\n        </Flex>\r\n    )\r\n};\r\n\r\nexport default Index;","import React from 'react';\r\nimport {Text, Flex, Row, Col, Image} from '../../components/common/base';\r\nimport {blueColor, redColor} from '../../styles';\r\nimport logo from '../../imgs/logo.png';\r\nimport {CodeIcon} from '../../icons/utilities';\r\nimport {SpaceIcon, VerseIcon, DesignIcon} from '../../icons/headericons';\r\n\r\nexport const Index = ({route, setRoute}) => {\r\n    return (\r\n        <Col align=\"center\" justify=\"center\" style={{height: '70vh'}} padding=\"padding: 15%\">\r\n            <Text className=\"bold\" size=\"30\">THE MOST SOPHISCATED END-TO-END DEEP-LEARNING OPS</Text>\r\n            <Row align=\"center\" justify=\"space-between\" flex={1}>\r\n                <a onClick={() => setRoute(1)}>\r\n                    <Col padding=\"padding: 20px\" width=\"300px\" height=\"90%\" br=\"20px\" align=\"center\">\r\n                        <Row align=\"center\">\r\n                            <VerseIcon width={22} />\r\n                            <Flex to=\"cursor\" padding=\"padding: 10px 15px 10px 15px;\">\r\n                                <Text className=\"light\" size=\"12.8\" weight=\"700\">NEURAL VERSE</Text>\r\n                            </Flex>\r\n                        </Row>\r\n                    </Col>\r\n                </a>\r\n                <a onClick={() => setRoute(3)}>\r\n                    <Col padding=\"padding: 20px\" width=\"300px\" height=\"90%\" br=\"20px\" align=\"center\">\r\n                        <Row align=\"center\">\r\n                            <SpaceIcon width={22} />\r\n                            <Flex to=\"cursor\" padding=\"padding: 10px 15px 10px 15px;\">\r\n                                <Text className=\"light\" size=\"12.8\" weight=\"700\">NEURAL SPACE</Text>\r\n                            </Flex>\r\n                        </Row>\r\n                    </Col>\r\n                </a>\r\n                <a onClick={() => setRoute(4)}>\r\n                    <Col padding=\"padding: 20px\" width=\"300px\" height=\"90%\" br=\"20px\" align=\"center\">\r\n                        <Row align=\"center\">\r\n                            <DesignIcon width={30} height={30} />\r\n                            <Flex to=\"cursor\" padding=\"padding: 10px 15px 10px 15px;\">\r\n                                <Text className=\"light\" size=\"12.8\" weight=\"700\">NEURAL STUDIO</Text>\r\n                            </Flex>\r\n                        </Row>\r\n                    </Col>\r\n                </a>\r\n                <a onClick={() => setRoute(5)}>\r\n                    <Col padding=\"padding: 20px\" width=\"300px\" height=\"90%\" br=\"20px\" align=\"center\">\r\n                        <Row align=\"center\">\r\n                            <Image src={logo} width={30} />\r\n                            <Flex to=\"cursor\" padding=\"padding: 10px 15px 10px 12.8px;\">\r\n                                <Text className=\"light\" size=\"12.8\" weight=\"700\">NEURAL OPS</Text>\r\n                            </Flex>\r\n                        </Row>\r\n                    </Col>\r\n                </a>\r\n                <a onClick={() => setRoute(5)}>\r\n                    <Col padding=\"padding: 20px\" width=\"300px\" height=\"90%\" br=\"20px\" align=\"center\">\r\n                        <Row align=\"center\">\r\n                            <CodeIcon stroke1={redColor} stroke2={blueColor} stroke3={blueColor} height={15} width={25} />\r\n                            <Flex to=\"cursor\" padding=\"padding: 10px 15px 10px 12.8px;\">\r\n                                <Text className=\"light\" size=\"12.8\" weight=\"700\">NEURAL RESEARCH</Text>\r\n                            </Flex>\r\n                        </Row>\r\n                    </Col>\r\n                </a>\r\n                </Row>\r\n        </Col>\r\n    )\r\n};\r\n\r\nexport default Index;","import React from 'react';\r\nimport Footer from '../../components/footer';\r\nimport Landing1 from './landing1';\r\nimport Landing2 from './landing2';\r\nimport Landing3 from './landing3';\r\nimport Landing4 from './landing4';\r\nimport Landing5 from './landing5';\r\nimport Landing6 from './landing6';\r\nimport Landing7 from './landing7';\r\nimport Landing8 from './landing8';\r\nimport { ThemeEvent } from '../../contexts/GlobalContext';\r\nimport { Flex } from '../../components/common/base';\r\n\r\n\r\nexport const Landing = ({route, setRoute}) => {\r\n    const {darkMode} = ThemeEvent();\r\n    return (\r\n        <Flex style={{display: route == 0 ? 'block': 'none', backgroundColor: darkMode ? \"black\" : \"white\"}}>\r\n            <Landing1 darkMode={darkMode} />\r\n            <Landing8 setRoute={setRoute}/>\r\n            <Landing2 />\r\n            <Landing3 />\r\n            <Landing4 />\r\n            <Landing5 />\r\n            <Landing6 />\r\n            <Landing7 />\r\n            <Footer darkMode={darkMode} />\r\n        </Flex>\r\n    )\r\n};\r\n\r\nexport default Landing;","import React, {useEffect, useState} from 'react';\r\nimport {Flex, Col, Row, Text, Image, Input, Box} from '../../../components/common/base';\r\nimport {PaperIcon, CodeIcon, DemoIcon} from '../../../icons/utilities';\r\nimport {StudioLight} from '../../../icons/headericons';\r\nimport {bgStyler, hueBlue} from '../../../styles';\r\nimport styled from 'styled-components';\r\n\r\n\r\nconst DatasetLink = styled.a`\r\n    :hover {\r\n        cursor: pointer;\r\n    }\r\n`;\r\n\r\nexport const Dataset = ({darkMode, arg}) => {\r\n    return (\r\n        <DatasetLink>\r\n            <Box padding=\"padding: 0px 12px; padding-bottom: 6px;\" margin=\"margin-right: 10px; margin-bottom: 10px;\" br=\"5px\" style={{display: 'inline-block'}} bg={bgStyler(darkMode)}>\r\n                <Text className=\"light\" weight=\"500\" size=\"11\"># {arg}</Text>\r\n            </Box>\r\n        </DatasetLink>\r\n    )\r\n}\r\n\r\nexport const ModelBox = styled(Flex)`\r\n    margin: 10px 12.8px;\r\n    &:last-child {\r\n        margin-right: 0px;\r\n    };\r\n    position: relative;\r\n    cursor: pointer;\r\n    display: inline-block;\r\n    width: 31%;\r\n    height: 190px;\r\n    bottom: 0px;\r\n    :hover {\r\n        bottom: 5px;\r\n    };\r\n    transition: 300ms;\r\n`;\r\n\r\nexport const ModelConfig = ({model, darkMode}) => {\r\n    return (\r\n        <Row justify=\"space-between\" margin=\"margin-top: 10px;\">\r\n            <Row padding=\"padding: 3px\" align=\"center\">\r\n                <Flex margin=\"margin-bottom: 2px;\">\r\n                    <PaperIcon stroke={hueBlue} height={12.8} width={12.8} />\r\n                </Flex>\r\n                <Text className=\"light\" margin=\"margin-left: 10px;\" size=\"10\" weight=\"600\">PAPER</Text>\r\n            </Row>\r\n            <Row padding=\"padding: 3px\" align=\"center\">\r\n                <CodeIcon stroke={hueBlue} height={15} width={15} />\r\n                <Text className=\"light\" margin=\"margin-left: 10px;\" size=\"10\" weight=\"600\">CODE</Text>\r\n            </Row>\r\n            <Row padding=\"padding: 3px\" align=\"center\">\r\n                <StudioLight stroke1={hueBlue} stroke2={hueBlue} height={15} width={15} />\r\n                <Text className=\"light\" margin=\"margin-left: 10px;\" size=\"10\" weight=\"600\">STUDIO</Text>\r\n            </Row>\r\n            {model.demo && <Row padding=\"padding: 3px\" align=\"center\">\r\n                <DemoIcon stroke1={hueBlue} stroke2={hueBlue} height={15} width={15} />\r\n                <Text className=\"light\" margin=\"margin-left: 10px;\" size=\"10\" weight=\"600\">DEMO</Text>\r\n            </Row>}\r\n        </Row>\r\n    )\r\n}\r\n\r\nexport const Model = ({setModel, darkMode, content}) => {\r\n    return (\r\n        <ModelBox onClick={() => setModel(content)} shadow={true} bg={bgStyler(darkMode)} position=\"relative\" br=\"20px\" style={{overflow: 'hidden'}}>\r\n            <Col padding=\"padding: 0px 15px;\" width=\"100%\" height=\"50%\" position=\"absolute\" justify=\"center\" zIndex={100} style={{bottom: -1, backdropFilter: 'blur(2px)'}} bg={darkMode ? \"rgba(0,0,0,0.8)\" : \"rgba(255, 255, 255, 0.95)\"}>\r\n                <Text className=\"light\" size=\"17\" weight=\"700\" margin=\"margin: 5px 0px;\">\r\n                    {content.title}\r\n                </Text>\r\n                <Text className=\"light\" size=\"12.8\" weight=\"600\">\r\n                    {content.subtitle}\r\n                </Text>\r\n                <ModelConfig model={content} darkMode={darkMode} />\r\n            </Col>\r\n            <Image src={content.img} of=\"cover\" position=\"absolute\" width=\"108%\" height=\"108%\" />\r\n        </ModelBox>\r\n    )\r\n}\r\n\r\nexport default Model;","import React, {useEffect, useState} from 'react';\r\nimport {Flex, Col, Row, Text, Image, Box} from '../../../components/common/base';\r\nimport {PaperIcon, CodeIcon, BenchMarkIcon, DemoIcon, UpDown} from '../../../icons/utilities';\r\nimport Model, {Dataset} from './components';\r\n\r\nexport const ModelViewTop = ({task, subTask, options, setOptions, optionBtn, setOptionbtn, darkMode}) => {\r\n    return (\r\n        <>\r\n            <Row align=\"center\" justify=\"space-between\">\r\n                <Row align=\"center\">\r\n                    <Text className=\"bold\" size=\"20\" margin=\"margin: 20px 0px;\">\r\n                        TRENDINGS ON {subTask ? subTask.title.toUpperCase() : task.title.toUpperCase()}\r\n                    </Text>\r\n                </Row>\r\n                <Row to=\"cursor\" cursorOpaFalse={true} align=\"center\" us=\"none\" onClick={() => setOptionbtn(!optionBtn)}>\r\n                    <Text className=\"light\" weight=\"500\" size=\"12.8\" margin=\"margin-right: 10px;\">\r\n                        View Options\r\n                    </Text>\r\n                    <Flex style={{transform: !optionBtn ? 'rotate(0deg)' : 'rotate(180deg)'}}>\r\n                        <UpDown width={20} height={25} stroke={darkMode ? \"white\" : \"black\"} />\r\n                    </Flex>\r\n                </Row>\r\n            </Row>\r\n            <Col style={{width: '100%', height: optionBtn ? 35 : 0, transition: 'all 300ms', overflow: 'hidden'}}>\r\n                <Col>\r\n                    <Flex margin=\"margin-top: 5px;\" style={{display: 'block'}}>\r\n                        <Row align=\"center\">\r\n                            <Row onClick={() => setOptions(0)} to=\"cursor\" align=\"center\" margin=\"margin-right: 30px;\">\r\n                                <Text className=\"light\" weight=\"500\" size=\"12.8\">See All</Text>\r\n                            </Row>\r\n                            <Row onClick={() => setOptions(0)} to=\"cursor\" align=\"center\" margin=\"margin-right: 30px;\">\r\n                                <Text className=\"light\" weight=\"500\" size=\"12.8\" margin=\"margin-left: 7px;\">Most Implemented</Text>\r\n                            </Row>\r\n                            <Row onClick={() => setOptions(0)} to=\"cursor\" align=\"center\" margin=\"margin-right: 30px;\">\r\n                                <Text className=\"light\" weight=\"500\" size=\"12.8\" margin=\"margin-left: 7px;\">Latest</Text>\r\n                            </Row>\r\n                            <Row onClick={() => setOptions(1)} to=\"cursor\" align=\"center\" margin=\"margin-right: 30px;\">\r\n                                <DemoIcon width={18} height={18} stroke={darkMode ? \"rgb(150, 150, 150)\" : \"rgb(100, 100, 100)\"} />\r\n                                <Text  className=\"light\" weight=\"500\" size=\"12.8\" margin=\"margin-left: 7px;\">Demo Availables</Text>\r\n                            </Row>\r\n                            <Row onClick={() => setOptions(2)} to=\"cursor\" align=\"center\" margin=\"margin-right: 30px;\">\r\n                                <BenchMarkIcon width={18} height={18} stroke={darkMode ? \"rgb(150, 150, 150)\" : \"rgb(100, 100, 100)\"} />\r\n                                <Text className=\"light\" weight=\"500\" size=\"12.8\" margin=\"margin-left: 7px;\">Benchmarks</Text>\r\n                            </Row>\r\n                            <Row onClick={() => setOptions(2)} to=\"cursor\" align=\"center\" margin=\"margin-right: 30px;\">\r\n                                <BenchMarkIcon width={18} height={18} stroke={darkMode ? \"rgb(150, 150, 150)\" : \"rgb(100, 100, 100)\"} />\r\n                                <Text className=\"light\" weight=\"500\" size=\"12.8\" margin=\"margin-left: 7px;\">Datasets</Text>\r\n                            </Row>\r\n                        </Row>\r\n                        <Flex style={{display: 'block'}} margin=\"margin: 15px 0px;\">\r\n                            <Dataset arg={\"All Dataset\"} darkMode={darkMode} />\r\n                            {subTask ? subTask.datasets.map(item => <Dataset key={item} arg={item} darkMode={darkMode}/>) : task.datasets.map(item => <Dataset arg={item} darkMode={darkMode} key={item} />)}\r\n                        </Flex>\r\n                    </Flex>\r\n                </Col>\r\n            </Col>\r\n        </>\r\n    )\r\n}\r\n\r\nexport const ModelView = ({setModel, darkMode, task, subTask}) => {\r\n    // buttons control\r\n    const [optionBtn, setOptionbtn] = useState(false);\r\n    const [datasetBtn, setDatasetBtn] = useState(false);\r\n\r\n    // view options: {view options > dataset options}\r\n    const [options, setOptions] = useState(0);\r\n    const [dataset, setDataset] = useState(['All']);\r\n\r\n    // converting animation hooks\r\n    const [opacity, setOpacity] = useState(1);\r\n    const [_task, set_Task] = useState(task);\r\n    const [_subTask, set_subTask] = useState(subTask);\r\n\r\n    useEffect(() => {\r\n        const opaciter = () => {\r\n            setOpacity(0);\r\n            setTimeout(() => {\r\n                setOpacity(1)\r\n                set_Task(task);\r\n                set_subTask(subTask);\r\n            }, 300);\r\n        };\r\n        opaciter();\r\n    }, [task, subTask]);\r\n    \r\n    return (\r\n        <Col flex={3} margin=\"margin-top: 50px;\">   \r\n            <ModelViewTop task={task} subTask={subTask} options={options} setOptions={setOptions} optionBtn={optionBtn} setOptionbtn={setOptionbtn} darkMode={darkMode} />\r\n            <Col opacity={opacity} position=\"relative\" style={{left: -15, width: 'calc(100% + 30px)'}}>\r\n                <Flex margin=\"margin: 12px 0px;\" style={{display: 'block'}}>\r\n\r\n                    {(_subTask != undefined && _subTask.models) ?\r\n                    _subTask.models.map(item => \r\n                        <Model darkMode={darkMode} setModel={setModel} content={item} key={item.title}/>)\r\n                    : \r\n                    //change the key later\r\n                    (_task != undefined && _task.models) && \r\n                    _task.models.map((item , index) => \r\n                        <Model darkMode={darkMode} setModel={setModel} content={item} key={index}/>)}\r\n                \r\n                </Flex>\r\n            </Col>\r\n        </Col>\r\n    )\r\n}\r\n\r\nexport default ModelView;","import React, { useEffect, useState } from 'react';\r\nimport {Text, Flex} from './base';\r\nimport './style/loading.css';\r\n\r\nexport const Loading = () => {\r\n    return (\r\n        <div id=\"load\">\r\n            <div>G</div>\r\n            <div>N</div>\r\n            <div>I</div>\r\n            <div>D</div>\r\n            <div>A</div>\r\n            <div>O</div>\r\n            <div>L</div>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport const InputAnyImage = ({text}) => (\r\n    <Flex>\r\n        <Text>{text ? text : \"Please Input Any Image to Model 😊\"}</Text>\r\n    </Flex>\r\n)\r\n\r\nexport const Timer = ({defaultSec}) => {\r\n    const [time, setTime] = useState(0);\r\n    useEffect(() => {\r\n        setInterval(() => {\r\n            let _time = time;\r\n            _time = _time + 1;\r\n            setTime(_time);\r\n        }, 1000);\r\n    });\r\n    return (\r\n        <Text style={{opacity: 0.7}}>{time}.0 / {defaultSec}.0s</Text>\r\n    )\r\n}","export const postRequest = (img, api_url, setResult, arg) => {\r\n\r\n    let data = null;\r\n    \r\n    if (Array.isArray(img)){\r\n        data = { \"data\": img}\r\n    } else if (arg) {\r\n        data = { \"data\": [img, arg]}\r\n    } else {\r\n        data = { \"data\": [img] };\r\n    }\r\n\r\n    console.log(data);\r\n\r\n    fetch(api_url, {\r\n        method: \"POST\",\r\n        body: JSON.stringify(data),\r\n        headers: { \"Content-Type\": \"application/json\" }\r\n    }).then(function (response) {\r\n        if (response.status === 200) {\r\n            console.log(\"hi\", response);\r\n            return response.json();\r\n        }\r\n        else {\r\n            console.log(response)\r\n        }\r\n    }).then(function (json_response) {\r\n        console.log(\"output\", json_response)\r\n        setResult(json_response);\r\n        return json_response;\r\n    })\r\n}\r\n\r\nexport const textPostRequest = (text, api_url, setResult) => {\r\n\r\n    let data = {\"data\": [text]};\r\n\r\n    console.log(data);\r\n\r\n    fetch(api_url, {\r\n        method: \"POST\",\r\n        body: JSON.stringify(data),\r\n        headers: { \"Content-Type\": \"application/json\" }\r\n    }).then(function (response) {\r\n        if (response.status === 200) {\r\n            console.log(\"hi\", response);\r\n            return response.json();\r\n        }\r\n        else {\r\n            console.log(response)\r\n        }\r\n    }).then(function (json_response) {\r\n        console.log(\"output\", json_response)\r\n        setResult(json_response);\r\n        return json_response;\r\n    })\r\n}","import React, {useState, useEffect} from 'react';\r\nimport styled from 'styled-components';\r\nimport {Flex, Col, Row, Text, Image, Box} from '../../../../components/common/base';\r\nimport { bgStyler } from '../../../../styles';\r\n\r\nimport city from '../imgs/city.jpg';\r\nimport elephant from '../imgs/elephants.jpg';\r\nimport zebra from '../imgs/zebras.jpg';\r\n\r\nexport const DragAndDrop = ({darkMode, img, setImg}) => {\r\n    return (\r\n        <Flex margin=\"margin-bottom: 10px;\" to=\"cursor\">\r\n            <form>\r\n                <input accept=\"image/*\" style={{display: \"none\"}} type=\"file\" />\r\n                <Flex br=\"20px\" width=\"100%\" height=\"100px;\" align=\"center\" justify=\"center\" style={{border:`2px dashed ${darkMode ? \"rgb(70, 70, 70)\" : \"rgb(224, 224, 224)\"}`}}>\r\n                    <Text size=\"12\" color={darkMode ? \"rgb(150, 150, 150)\" : \"rgb(124, 124, 124)\"} style={{textAlign: 'center'}}>Drag image file here or click to browse from your device</Text>\r\n                </Flex>\r\n            </form>\r\n        </Flex>\r\n    )\r\n};\r\n\r\nconst ImgWrap = styled(Flex)`\r\n    opacity: ${(props) => props.img == props.item ? 1 : 0.7};\r\n    :hover {\r\n        opacity: 1\r\n    };\r\n    cursor: pointer;\r\n    border-radius: 20px;\r\n    overflow: hidden;\r\n    width: 100%;\r\n    height: 100px;\r\n    margin: 10px 0px;\r\n`;\r\n\r\nconst imgs = [\r\n    city,\r\n    elephant,\r\n    zebra,\r\n]\r\n\r\nexport const Examples = ({run, displayImage}) => {\r\n    return (\r\n        <Col>\r\n            {imgs.map((item, index) => <ImgWrap onClick={() => run(item)} img={displayImage} item={item} key={index}>\r\n                <Image width=\"100%\" height=\"100px\" of=\"cover\" src={item} />\r\n            </ImgWrap>)}\r\n        </Col>\r\n    )\r\n};\r\n\r\nexport const InputBar = ({run, displayImage, open, setOpen, darkMode, type}) => {\r\n    return (\r\n        <Box width=\"20%\" height=\"100%\" padding=\"padding: 15px;\" position=\"absolute\" bg={bgStyler(darkMode)} style={{left: open ? 0 : '-25%', overflow: 'hidden', overflowY: 'scroll'}}>\r\n            <DragAndDrop darkMode={darkMode} />\r\n            <Examples displayImage={displayImage} run={run} />\r\n        </Box>\r\n    )\r\n}","export const toDataURL = url => fetch(url)\r\n    .then(response => response.blob())\r\n    .then(blob => new Promise((resolve, reject) => {\r\n        const reader = new FileReader()\r\n        reader.onloadend = () => resolve(reader.result)\r\n        reader.onerror = reject\r\n        reader.readAsDataURL(blob)\r\n        }\r\n    )\r\n)","import React, {useState, useEffect} from 'react';\r\nimport {Flex, Col, Row, Text, Image} from '../../../../components/common/base';\r\nimport { Loading, Timer, InputAnyImage } from '../../../../components/common/loading';\r\nimport { postRequest } from '../../inference';\r\nimport { InputBar } from './components';\r\nimport {toDataURL} from '../utilities';\r\nimport { bgStyler, extremehueBlue } from '../../../../styles';\r\n\r\n\r\nexport const Classifier = ({model, open, setOpen, darkMode}) => {\r\n    const [displayImage, setDisplayImage] = useState(null);\r\n    const [result, setResult] = useState(null);\r\n    const [isLoading, setIsLoading] = useState(false);\r\n    const [animate, setAnimate] = useState(false);\r\n    const [label, setLabel] = useState(null);\r\n\r\n    const run = (img) => {\r\n        setAnimate(false);\r\n        setDisplayImage(img);\r\n        setIsLoading(true); \r\n        toDataURL(img)\r\n        .then(dataUrl =>   {\r\n            postRequest(dataUrl, model.demo.api, setResult);\r\n        })\r\n    };\r\n\r\n    useEffect(() => {\r\n        const changer = () => {\r\n            let data = result.data[0];\r\n            setLabel(data);\r\n            setIsLoading(false);\r\n            setTimeout(() => setAnimate(true), 100);\r\n        };\r\n        result && changer();\r\n    }, [result]);\r\n\r\n    return (\r\n        <Col position=\"relative\" width=\"100%\" height=\"100%\" align=\"center\" justify=\"center\">\r\n            <InputBar run={run} displayImage={displayImage} open={open} setOpen={setOpen} darkMode={darkMode} />\r\n\r\n            <Row align=\"center\" justify=\"center\" width=\"100%\" height=\"100%\" padding={`padding-left: ${open ? '20%' : 0}`}>\r\n        \r\n                <Col flex={3} width=\"100%\" height=\"100%\" align=\"center\" justify=\"center\">\r\n                    {displayImage ? isLoading ? <Loading /> : <Image width=\"100%\" height=\"100%\" of=\"cover\" style={{opacity: isLoading ? 0.3 : 1, transition: 'all 300ms'}} src={displayImage} /> : <InputAnyImage />}\r\n                </Col>\r\n\r\n                {isLoading && <Flex position=\"absolute\" style={{right: 10, top: 10}} zIndex={1000}>\r\n                    <Timer defaultSec={3} />\r\n                </Flex>}\r\n                <Col flex={1} height=\"100%\">\r\n                    {label && !isLoading &&\r\n                        <Col padding=\"padding: 15px;\" height=\"100%\" bg={bgStyler(darkMode)}>\r\n                            <Text className=\"light\" size=\"14\" margin=\"margin-bottom: 20px;\" style={{alignSelf: \"center\"}}>{label.label}</Text>\r\n                            {label.confidences.map((item, index) => <Row align=\"center\" margin=\"margin: 5px 0px;\" key={index}>\r\n                                <Col width=\"100%\">\r\n                                    <Row justify=\"space-between\">\r\n                                        <Text className=\"light\" weight=\"500\" size=\"12.8\" margin=\"margin-right: 20px;\">{item.label}</Text>\r\n                                        <Text size=\"12.8\" style={{opacity: 0.7}}>({(item.confidence * 100).toFixed(2)}%)</Text>\r\n                                    </Row>\r\n                                    <Flex margin=\"margin-top: 5px;\" style={{width: animate ? `${100 * item.confidence}%` : 0, transition: 'all 300ms'}} height=\"1px\" bg={extremehueBlue} />\r\n                                </Col>\r\n                            </Row>)}\r\n                        </Col>\r\n                    }\r\n                </Col>\r\n            </Row>\r\n\r\n        </Col>\r\n    )\r\n};\r\n\r\nexport default Classifier;","import React, {useState, useEffect} from 'react';\r\nimport styled from 'styled-components';\r\nimport {Flex, Col, Row, Text, Image, Box} from '../../../../../components/common/base';\r\nimport { bgStyler } from '../../../../../styles';\r\n\r\nimport city from '../../imgs/city.jpg';\r\nimport elephant from '../../imgs/elephants.jpg';\r\nimport zebra from '../../imgs/zebras.jpg';\r\n\r\nexport const DragAndDrop = ({darkMode, img, setImg}) => {\r\n    return (\r\n        <Flex margin=\"margin-bottom: 10px;\" to=\"cursor\">\r\n            <form>\r\n                <input accept=\"image/*\" style={{display: \"none\"}} type=\"file\" />\r\n                <Flex br=\"20px\" width=\"100%\" height=\"100px;\" align=\"center\" justify=\"center\" style={{border:`2px dashed ${darkMode ? \"rgb(70, 70, 70)\" : \"rgb(224, 224, 224)\"}`}}>\r\n                    <Text size=\"12\" color={darkMode ? \"rgb(150, 150, 150)\" : \"rgb(124, 124, 124)\"} style={{textAlign: 'center'}}>Drag image file here or click to browse from your device</Text>\r\n                </Flex>\r\n            </form>\r\n        </Flex>\r\n    )\r\n};\r\n\r\nconst ImgWrap = styled(Flex)`\r\n    opacity: ${(props) => props.img == props.item ? 1 : 0.7};\r\n    :hover {\r\n        opacity: 1\r\n    };\r\n    cursor: pointer;\r\n    border-radius: 20px;\r\n    overflow: hidden;\r\n    width: 100%;\r\n    height: 100px;\r\n    margin: 10px 0px;\r\n`;\r\n\r\nconst imgs = [\r\n    city,\r\n    elephant,\r\n    zebra,\r\n]\r\n\r\nexport const Examples = ({run, displayImage}) => {\r\n    return (\r\n        <Col>\r\n            {imgs.map((item, index) => <ImgWrap onClick={() => run(item)} img={displayImage} item={item} key={index}>\r\n                <Image width=\"100%\" height=\"100px\" of=\"cover\" src={item} />\r\n            </ImgWrap>)}\r\n        </Col>\r\n    )\r\n};\r\n\r\nexport const InputBar = ({run, displayImage, open, setOpen, darkMode, type}) => {\r\n    return (\r\n        <Box width=\"20%\" height=\"100%\" padding=\"padding: 15px;\" position=\"absolute\" bg={bgStyler(darkMode)} style={{left: open ? 0 : '-25%', overflow: 'hidden', overflowY: 'scroll'}}>\r\n            <DragAndDrop darkMode={darkMode} />\r\n            <Examples displayImage={displayImage} run={run} />\r\n        </Box>\r\n    )\r\n}","import React, {useState, useEffect} from 'react';\r\nimport {Flex, Col, Row, Text, Image} from '../../../../../components/common/base';\r\nimport { Loading, Timer, InputAnyImage } from '../../../../../components/common/loading';\r\nimport { postRequest } from '../../../inference';\r\nimport { InputBar } from './components';\r\nimport {toDataURL} from '../../utilities';\r\nimport { bgStyler, extremehueBlue } from '../../../../../styles';\r\nimport styled from 'styled-components';\r\n\r\nconst SelectBtn = styled(Flex)`\r\n    opacity: 0.8;\r\n    :hover {\r\n        opacity: 1;\r\n    };\r\n    transition: all 300ms;\r\n    cursor: pointer;\r\n`;\r\n\r\n\r\nexport const ImagetoImage = ({model, open, setOpen, darkMode, type}) => {\r\n    const [displayImage, setDisplayImage] = useState();\r\n    const [result, setResult] = useState(null);\r\n    const [isLoading, setIsLoading] = useState(false);\r\n    \r\n    // if models exists\r\n    const [modelSelect, setModelSelect] = useState(false);\r\n    const [_model, set_Model] = useState(null);\r\n\r\n    useEffect(() => {\r\n        if (model.demo.models){\r\n            set_Model(model.demo.models[0]);\r\n        };\r\n    }, [])\r\n\r\n    const run = (img) => {     \r\n        setIsLoading(true); \r\n        toDataURL(img)\r\n        .then(dataUrl =>   {\r\n            postRequest(dataUrl, model.demo.api, setResult, _model);\r\n        })\r\n    };\r\n\r\n    useEffect(() => {\r\n        const changer = () => {\r\n            let data = result.data[0];\r\n            setDisplayImage(data);\r\n            setIsLoading(false);\r\n        };\r\n        result && changer();\r\n    }, [result]);\r\n\r\n    return (\r\n        <Col position=\"relative\" width=\"100%\" height=\"100%\" align=\"center\" justify=\"center\">\r\n            <InputBar run={run} displayImage={displayImage} open={open} setOpen={setOpen} darkMode={darkMode} />\r\n\r\n            <Row align=\"center\" justify=\"center\" width=\"100%\" height=\"100%\" padding={`padding-left: ${open ? '20%' : 0}`}>\r\n        \r\n                <Col flex={3} width=\"100%\" height=\"100%\" align=\"center\" justify=\"center\">\r\n                    {displayImage ? !isLoading ? <Image width=\"100%\" height=\"100%\" of=\"cover\" src={displayImage} /> : <Loading /> : isLoading ? <Loading /> : <InputAnyImage />}\r\n                </Col>\r\n\r\n                {isLoading && <Flex position=\"absolute\" style={{right: 10, top: 10}} zIndex={1000}>\r\n                    <Timer defaultSec={3} />\r\n                </Flex>}\r\n            </Row>\r\n            {model.demo.models && !isLoading &&\r\n            <Col position=\"absolute\" shadow={true} \r\n                onClick={() => setModelSelect(!modelSelect)}\r\n                bg={bgStyler(darkMode)}\r\n                padding=\"padding: 0px 5px\"\r\n                style={{width: 'auto', height: modelSelect ? 45 * model.demo.models.length : 40, transition: 'all 300ms', right: 10, top: 10, overflow: 'hidden'}} \r\n                br=\"20px\">\r\n                <Text color={darkMode ? extremehueBlue : \"black\"} to=\"cursor\" size=\"14\" weight=\"600\" padding=\"padding: 10px 15px;\">Model Selected: {_model}</Text>\r\n                {model.demo.models.map(item => \r\n                    <SelectBtn \r\n                        padding=\"padding: 10px 15px;\"\r\n                        to=\"cursor\"\r\n                        key={item} onClick={() => set_Model(item)}><Text size=\"14\" color={darkMode ? extremehueBlue : \"black\"}>{item}</Text>\r\n                    </SelectBtn>)}\r\n            </Col>}\r\n        </Col>\r\n    )\r\n};\r\n\r\nexport default ImagetoImage;","import {useState} from 'react';\r\n\r\nexport const useInput = (initialValue) => {\r\n    const [value, setValue] = useState(initialValue);\r\n    const onChange = (e) => {\r\n      setValue(e.target.value);\r\n    };\r\n    return { value, onChange };\r\n};\r\n\r\nexport default useInput;","import React, {useState, useEffect, useRef} from 'react';\r\nimport styled from 'styled-components';\r\nimport {Flex, Col, Row, Text, Image, Box, TextArea} from '../../../../../components/common/base';\r\nimport { bgStyler } from '../../../../../styles';\r\nimport useInput from '../../../../../hooks/useInput';\r\nimport { SendIcon } from '../../../../../icons/utilities';\r\n\r\nexport const InputBar = ({run, open, setOpen, darkMode}) => {\r\n    const {value, onChange} = useInput(\"\");\r\n    const [height, setHeight] = useState(38);\r\n    const textarea = useRef(null);\r\n    return (\r\n        <Box width=\"33%\" height=\"100%\" padding=\"padding: 15px;\" position=\"absolute\" bg={bgStyler(darkMode)} style={{left: open ? 0 : '-33%', overflow: 'hidden', overflowY: 'scroll'}}>\r\n            <Row align=\"center\">\r\n                <TextArea \r\n                    ref={textarea} onChange={(e) => {onChange(e); setHeight(value ? textarea.current.scrollHeight : 38)}} \r\n                    value={value}\r\n                    size=\"14\" placeholder=\"What do you want to see?\" \r\n                    padding=\"padding: 10px 15px;\" br=\"10px\" bg={darkMode ? \"rgb(40, 40, 40)\" : \"white\"} \r\n                    style={{width: '90%', height: height}} />\r\n                <Flex margin=\"margin-left: 10px\" to=\"cursor\" onClick={() => run(value)}>\r\n                    <SendIcon width={25} height={25} />\r\n                </Flex>\r\n            </Row>\r\n        </Box>\r\n    )\r\n}","import React, {useState, useEffect} from 'react';\r\nimport {Flex, Col, Row, Text, Image} from '../../../../../components/common/base';\r\nimport { Loading, Timer, InputAnyImage } from '../../../../../components/common/loading';\r\nimport { textPostRequest } from '../../../inference';\r\nimport { InputBar } from './components';\r\nimport { bgStyler, extremehueBlue } from '../../../../../styles';\r\nimport styled from 'styled-components';\r\n\r\nconst SelectBtn = styled(Flex)`\r\n    opacity: 0.8;\r\n    :hover {\r\n        opacity: 1;\r\n    };\r\n    transition: all 300ms;\r\n    cursor: pointer;\r\n`;\r\n\r\n\r\nexport const TextToImage = ({model, open, setOpen, darkMode}) => {\r\n    const [displayImage, setDisplayImage] = useState();\r\n    const [result, setResult] = useState(null);\r\n    const [isLoading, setIsLoading] = useState(false);\r\n\r\n    // if models exists\r\n    const [modelSelect, setModelSelect] = useState(false);\r\n    const [_model, set_Model] = useState(null);\r\n\r\n    useEffect(() => {\r\n        if (model.demo.models){\r\n            set_Model(model.demo.models[0]);\r\n        };\r\n    }, [])\r\n\r\n    const run = (text) => {     \r\n        setIsLoading(true); \r\n        textPostRequest(text, model.demo.api, setResult, _model);\r\n    };\r\n\r\n    useEffect(() => {\r\n        const changer = () => {\r\n            let data = result.data[0];\r\n            setDisplayImage(data);\r\n            setIsLoading(false);\r\n        };\r\n        result && changer();\r\n    }, [result]);\r\n\r\n    return (\r\n        <Col position=\"relative\" width=\"100%\" height=\"100%\" align=\"center\" justify=\"center\">\r\n            <InputBar run={run} open={open} setOpen={setOpen} darkMode={darkMode} />\r\n\r\n            <Row align=\"center\" justify=\"center\" width=\"100%\" height=\"100%\" padding={`padding-left: ${open ? '20%' : 0}`}>\r\n        \r\n                <Col flex={3} width=\"100%\" height=\"100%\" align=\"center\" justify=\"center\">\r\n                    {displayImage ? !isLoading ? <Image width=\"100%\" height=\"100%\" of=\"cover\" src={displayImage} /> : <Loading /> : isLoading ? <Loading /> : <InputAnyImage text=\"Please Input Any words or sentences to Model 😊\" />}\r\n                </Col>\r\n\r\n                {isLoading && <Flex position=\"absolute\" style={{right: 10, top: 10}} zIndex={1000}>\r\n                    <Timer defaultSec={3} />\r\n                </Flex>}\r\n            </Row>\r\n\r\n            {model.demo.models && !isLoading &&\r\n            <Col position=\"absolute\" shadow={true} \r\n                onClick={() => setModelSelect(!modelSelect)}\r\n                bg={bgStyler(darkMode)}\r\n                padding=\"padding: 0px 5px\"\r\n                style={{width: 'auto', height: modelSelect ? 45 * model.demo.models.length : 40, transition: 'all 300ms', right: 10, top: 10, overflow: 'hidden'}} \r\n                br=\"20px\">\r\n                <Text color={darkMode ? extremehueBlue : \"black\"} to=\"cursor\" size=\"14\" weight=\"600\" padding=\"padding: 10px 15px;\">Model Selected: {_model}</Text>\r\n                {model.demo.models.map(item => \r\n                    <SelectBtn \r\n                        padding=\"padding: 10px 15px;\"\r\n                        to=\"cursor\"\r\n                        key={item} onClick={() => set_Model(item)}><Text size=\"14\" color={darkMode ? extremehueBlue : \"black\"}>{item}</Text>\r\n                    </SelectBtn>)}\r\n            </Col>}\r\n            \r\n        </Col>\r\n    )\r\n};\r\n\r\nexport default TextToImage;","import React from 'react';\r\nimport ImagetoImage from './imagetoimage';\r\nimport TexttoImage from './texttoimage';\r\n\r\nexport const Generator = ({model, open, setOpen, darkMode, subtype}) => {\r\n    return (\r\n        <>\r\n            {subtype == \"imagetoimage\" && <ImagetoImage model={model} open={open} setOpen={setOpen} darkMode={darkMode} />}\r\n            {subtype == \"texttoimage\" && <TexttoImage model={model} open={open} setOpen={setOpen} darkMode={darkMode} />}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Generator;","import React, {useState, useEffect} from 'react';\r\nimport styled from 'styled-components';\r\nimport {Flex, Col, Row, Text, Image, Box} from '../../../../components/common/base';\r\nimport { bgStyler } from '../../../../styles';\r\n\r\nimport city from '../imgs/city.jpg';\r\nimport elephant from '../imgs/elephants.jpg';\r\nimport zebra from '../imgs/zebras.jpg';\r\nimport streetview from '../imgs/streetview.jpg'\r\nimport satelite from '../imgs/satelite.jpg';\r\n\r\nexport const DragAndDrop = ({darkMode, img, setImg}) => {\r\n    return (\r\n        <Flex margin=\"margin-bottom: 10px;\" to=\"cursor\">\r\n            <form>\r\n                <input accept=\"image/*\" style={{display: \"none\"}} type=\"file\" />\r\n                <Flex br=\"20px\" width=\"100%\" height=\"100px;\" align=\"center\" justify=\"center\" style={{border:`2px dashed ${darkMode ? \"rgb(70, 70, 70)\" : \"rgb(224, 224, 224)\"}`}}>\r\n                    <Text size=\"12\" color={darkMode ? \"rgb(150, 150, 150)\" : \"rgb(124, 124, 124)\"} style={{textAlign: 'center'}}>Drag image file here or click to browse from your device</Text>\r\n                </Flex>\r\n            </form>\r\n        </Flex>\r\n    )\r\n};\r\n\r\nconst ImgWrap = styled(Flex)`\r\n    opacity: ${(props) => props.img == props.item ? 1 : 0.7};\r\n    :hover {\r\n        opacity: 1\r\n    };\r\n    cursor: pointer;\r\n    border-radius: 20px;\r\n    overflow: hidden;\r\n    width: 100%;\r\n    height: 100px;\r\n    margin: 10px 0px;\r\n`;\r\n\r\nconst imgs = [\r\n    city,\r\n    elephant,\r\n    satelite,\r\n    zebra,\r\n]\r\n\r\nexport const Examples = ({run, displayImage}) => {\r\n    return (\r\n        <Col>\r\n            {imgs.map((item, index) => <ImgWrap onClick={() => run(item)} img={displayImage} item={item} key={index}>\r\n                <Image width=\"100%\" height=\"100px\" of=\"cover\" src={item} />\r\n            </ImgWrap>)}\r\n        </Col>\r\n    )\r\n};\r\n\r\nexport const InputBar = ({run, displayImage, open, setOpen, darkMode, type}) => {\r\n    return (\r\n        <Box width=\"20%\" height=\"100%\" padding=\"padding: 15px;\" position=\"absolute\" bg={bgStyler(darkMode)} style={{left: open ? 0 : '-25%', overflow: 'hidden', overflowY: 'scroll'}}>\r\n            <DragAndDrop darkMode={darkMode} />\r\n            <Examples displayImage={displayImage} run={run} />\r\n        </Box>\r\n    )\r\n}","import React, {useState, useEffect} from 'react';\r\nimport {Flex, Col, Row, Text, Image} from '../../../../components/common/base';\r\nimport { Loading, Timer, InputAnyImage } from '../../../../components/common/loading';\r\nimport { postRequest } from '../../inference';\r\nimport { InputBar } from './components';\r\nimport {toDataURL} from '../utilities';\r\n\r\n\r\nexport const Detector = ({model, open, setOpen, darkMode}) => {\r\n    const [displayImage, setDisplayImage] = useState();\r\n    const [displayImage2, setDisplayImage2] = useState();\r\n    const [result, setResult] = useState(null);\r\n    const [isLoading, setIsLoading] = useState(false);\r\n\r\n    const run = (img) => {     \r\n        setIsLoading(true); \r\n        toDataURL(img)\r\n        .then(dataUrl =>   {\r\n            postRequest(dataUrl, model.demo.api, setResult);\r\n        })\r\n    };\r\n\r\n    useEffect(() => {\r\n        const changer = () => {\r\n            let data = result.data[0];\r\n            // for two output images\r\n            if (result.data.length == 2) {\r\n                setDisplayImage2(result.data[1]);\r\n            }\r\n            setDisplayImage(data);\r\n            setIsLoading(false);\r\n        };\r\n        result && changer();\r\n    }, [result]);\r\n\r\n    return (\r\n        <Col position=\"relative\" width=\"100%\" height=\"100%\" align=\"center\" justify=\"center\">\r\n            <InputBar run={run} displayImage={displayImage} open={open} setOpen={setOpen} darkMode={darkMode} />\r\n\r\n            <Row align=\"center\" justify=\"center\" width=\"100%\" height=\"100%\" padding={`padding-left: ${open ? '20%' : 0}`}>\r\n        \r\n                <Col flex={3} width=\"100%\" height=\"100%\" align=\"center\" justify=\"center\">\r\n                    {displayImage ? !isLoading ? \r\n                        <Row>\r\n                            <Image flex={1} height=\"100%\" of=\"cover\" src={displayImage} />\r\n                            {displayImage2 && <Image flex={1} height=\"100%\" of=\"cover\" src={displayImage2} />}\r\n                        </Row>\r\n                        : <Loading /> : isLoading ? <Loading /> : <InputAnyImage />}\r\n                </Col>\r\n\r\n                {isLoading && <Flex position=\"absolute\" style={{right: 10, top: 10}} zIndex={1000}>\r\n                    <Timer defaultSec={3} />\r\n                </Flex>}\r\n            </Row>\r\n\r\n        </Col>\r\n    )\r\n};\r\n\r\nexport default Detector;","import React, {useState, useEffect} from 'react';\r\nimport styled from 'styled-components';\r\nimport {Flex, Col, Row, Text, Image, Box} from '../../../../components/common/base';\r\nimport { bgStyler } from '../../../../styles';\r\n\r\nimport mountain from '../imgs/mountain.jpeg';\r\nimport monc from '../imgs/monc.jpeg';\r\n\r\nexport const DragAndDrop = ({darkMode, img, setImg}) => {\r\n    const colorer = darkMode ? \"rgb(150, 150, 150)\" : \"rgb(124, 124, 124)\";\r\n    return (\r\n        <Col margin=\"margin-bottom: 10px;\" to=\"cursor\">\r\n            <form>\r\n                <input accept=\"image/*\" style={{display: \"none\"}} type=\"file\" />\r\n                <Col br=\"20px\" width=\"100%\" height=\"100px;\" align=\"center\" justify=\"center\" style={{border:`2px dashed ${darkMode ? \"rgb(70, 70, 70)\" : \"rgb(224, 224, 224)\"}`}}>\r\n                    <Text margin=\"margin-bottom: 2.5px;\" color={colorer}>Content Image</Text>\r\n                    <Text margin=\"margin-top: 2.5px;\" size=\"12\" color={colorer} style={{textAlign: 'center'}}>Drag image file here or click to browse from your device</Text>\r\n                </Col>\r\n            </form>\r\n            <form>\r\n                <input accept=\"image/*\" style={{display: \"none\"}} type=\"file\" />\r\n                <Col br=\"20px\" width=\"100%\" height=\"100px;\" align=\"center\" margin=\"margin-top: 20px;\" justify=\"center\" style={{border:`2px dashed ${darkMode ? \"rgb(70, 70, 70)\" : \"rgb(224, 224, 224)\"}`}}>\r\n                    <Text margin=\"margin-bottom: 2.5px;\" color={colorer}>Style Image</Text>\r\n                    <Text margin=\"margin-top: 2.5px;\" size=\"12\" color={colorer} style={{textAlign: 'center'}}>Drag image file here or click to browse from your device</Text>\r\n                </Col>\r\n            </form>\r\n        </Col>\r\n    )\r\n};\r\n\r\nconst ImgWrap = styled(Flex)`\r\n    opacity: ${(props) => props.img == props.item ? 1 : 0.7};\r\n    :hover {\r\n        opacity: 1\r\n    };\r\n    cursor: pointer;\r\n    border-radius: 20px;\r\n    overflow: hidden;\r\n    width: 100%;\r\n    height: 100px;\r\n    margin: 10px 0px;\r\n`;\r\n\r\n\r\nconst imgs = [\r\n    [mountain, monc],\r\n]\r\n\r\nexport const TransferExamples = ({run, displayImage}) => {\r\n    return (\r\n        <Col>\r\n            {imgs.map((item, index) => <ImgWrap onClick={() => run(item)} item={item} img={displayImage} key={index}>\r\n                <Image width=\"50%\" height=\"100px\" of=\"cover\" src={item[0]} />\r\n                <Image width=\"50%\" height=\"100px\" of=\"cover\" src={item[1]} />\r\n            </ImgWrap>\r\n            )}\r\n        </Col>\r\n    )\r\n};\r\n\r\nexport const InputBar = ({run, displayImage, open, setOpen, darkMode, type}) => {\r\n    return (\r\n        <Box width=\"20%\" height=\"100%\" padding=\"padding: 15px;\" position=\"absolute\" bg={bgStyler(darkMode)} style={{left: open ? 0 : '-25%', overflow: 'hidden', overflowY: 'scroll'}}>\r\n            <DragAndDrop darkMode={darkMode} />\r\n            <TransferExamples run={run} displayImage={displayImage} />\r\n        </Box>\r\n    )\r\n}","import React, {useState, useEffect} from 'react';\r\nimport {Flex, Col, Row, Text, Image} from '../../../../components/common/base';\r\nimport { Loading, Timer, InputAnyImage} from '../../../../components/common/loading';\r\nimport { postRequest } from '../../inference';\r\nimport { InputBar } from './components';\r\nimport {toDataURL} from '../utilities';\r\n\r\nexport const Transferer = ({model, open, setOpen, darkMode}) => {\r\n    const [inputs, setInputs] = useState([null, null]);\r\n    const [displayImage, setDisplayImage] = useState();\r\n    const [result, setResult] = useState(null);\r\n    const [isLoading, setIsLoading] = useState(false);\r\n\r\n    const run = (raw) => {\r\n        setDisplayImage(raw);\r\n        setIsLoading(true);\r\n        console.log(raw);\r\n        \r\n        // convert content img\r\n        toDataURL(raw[0])\r\n        .then(dataUrl => {\r\n            let copy = inputs;\r\n            copy[0] = dataUrl;\r\n            setInputs(copy)\r\n        })\r\n        // convert style img\r\n        toDataURL(raw[1])\r\n        .then(dataUrl => {\r\n            let copy = inputs;\r\n            copy[1] = dataUrl;\r\n            setInputs(copy);\r\n            postRequest(inputs, model.demo.api, setResult)\r\n        })\r\n    };\r\n\r\n    \r\n    useEffect(() => {\r\n        const changer = () => {\r\n            let data = result.data[0];\r\n            setDisplayImage(data);\r\n            setIsLoading(false);\r\n        };\r\n        result && changer();\r\n    }, [result]);\r\n\r\n    return (\r\n        <Col position=\"relative\" width=\"100%\" height=\"100%\" align=\"center\" justify=\"center\">\r\n            <InputBar run={run} displayImage={displayImage} open={open} setOpen={setOpen} darkMode={darkMode} />\r\n\r\n            <Row align=\"center\" justify=\"center\" width=\"100%\" height=\"100%\" padding={`padding-left: ${open ? '20%' : 0}`}>\r\n\r\n                <Col flex={3} width=\"100%\" height=\"100%\" align=\"center\" justify=\"center\">\r\n                    {displayImage ? !isLoading ? <Image width=\"100%\" height=\"100%\" of=\"cover\" src={displayImage} /> : <Loading /> : <InputAnyImage />}\r\n                </Col>\r\n\r\n                {isLoading && <Flex position=\"absolute\" style={{right: 10, top: 10}} zIndex={1000}>\r\n                    <Timer defaultSec={model.demo.defaultSec ? model.demo.defaultSec : 8} />\r\n                </Flex>}\r\n            </Row>\r\n\r\n        </Col>\r\n    )\r\n};\r\n\r\nexport default Transferer;","import React, {useState, useEffect} from 'react';\r\nimport {Col, Row, Flex, Image, Text} from '../../../components/common/base';\r\nimport { DemoIcon } from '../../../icons/utilities';\r\n\r\nimport Classifier from './classifier';\r\nimport Generator from './generator';\r\nimport Detector from './detector';\r\nimport Transferer from './transferer';\r\n\r\nexport const Demo = ({model, darkMode}) => {\r\n    const [open, setOpen] = useState(true);\r\n    const demo = model.demo.type.split(\"/\");\r\n    console.log(demo);\r\n    const type = demo[0];\r\n    const subtype = demo[1];\r\n    return (\r\n        <Col>\r\n            <Row align=\"center\" margin=\"margin-bottom: 30px; margin-left: 20px;\">\r\n                <DemoIcon width={23} height={23} />\r\n                <Text className='bold' size=\"22\" margin=\"margin-left: 12px;\">{model.demo.title ? model.demo.title : model.title} Demo</Text>\r\n            </Row>\r\n            <Flex shadow={true} height=\"470px\" width=\"100%\" margin=\"margin-bottom: 30px;\" br=\"20px\" bg={darkMode ? \"rgba(30, 30, 30, 0.5)\" : \"rgba(255, 255, 255, 0.5)\"} style={{overflow: 'hidden'}}>\r\n                {type == \"classification\" && <Classifier model={model} open={open} setOpen={setOpen} darkMode={darkMode} subtype={subtype}/>}\r\n                {type == \"object-detection\" && <Detector model={model} open={open} setOpen={setOpen} darkMode={darkMode} subtype={subtype}/>}\r\n                {type == \"style-transfer\" && <Transferer model={model} open={open} setOpen={setOpen} darkMode={darkMode} subtype={subtype}/>}\r\n                {type == \"image-generation\" && <Generator model={model} open={open} setOpen={setOpen} darkMode={darkMode} subtype={subtype}/>}\r\n            </Flex>\r\n        </Col>\r\n    )\r\n};\r\n\r\nexport default Demo;","import React from 'react';\r\n\r\n\r\nexport default () => (\r\n    <table style={{color: 'white'}} className=\"table-striped\">\r\n                            <tbody><tr>\r\n                                <th>Task</th>\r\n                                <th>Dataset</th>\r\n                                <th>Model</th>\r\n                                <th>Metric Name</th>\r\n                                <th>Metric Value</th>\r\n                                <th>Global Rank</th>\r\n                                \r\n                                \r\n                                    <th>Result</th>\r\n                                \r\n                                <th>Benchmark</th>\r\n                            </tr>\r\n\r\n                            \r\n                                <tr>\r\n                                    \r\n                                    <td rowspan=\"4\" className=\"rowspan-td\">\r\n                                        Lesion Segmentation\r\n                                    </td>\r\n                                    \r\n                                    \r\n                                    <td rowspan=\"4\" className=\"rowspan-td\">\r\n                                        Anatomical Tracings of Lesions After Stroke (ATLAS)\r\n                                    </td>\r\n                                    \r\n                                    \r\n                                    <td rowspan=\"4\" className=\"rowspan-td model-col\">\r\n                                        \r\n                                            U-Net\r\n                                        \r\n                                    </td>\r\n                                    \r\n                                    <td>\r\n                                        Dice\r\n                                    </td>\r\n                                    <td>\r\n                                        0.4606\r\n                                    </td>\r\n                                    <td>\r\n                                        # 2\r\n                                    </td>\r\n                                    \r\n                                    \r\n                                        <td className=\"results-icon\">\r\n                                            <a href=\"/paper/u-net-convolutional-networks-for-biomedical/review/?hl=38102\">\r\n                                                <span className=\" icon-wrapper icon-ion\" data-name=\"enter-outline\"><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"51\" height=\"51\" viewBox=\"0 0 51 51\"><path d=\"M176 176v-40a40 40 0 0 1 40-40h208a40 40 0 0 1 40 40v240a40 40 0 0 1-40 40H216a40 40 0 0 1-40-40v-40\" fill=\"none\" stroke=\"#000\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"32\"></path><path fill=\"none\" stroke=\"#000\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"32\" d=\"M272 336l80-80-80-80M48 256h288\"></path></svg></span>\r\n                                            </a>\r\n                                        </td>\r\n                                    \r\n                                    <td>\r\n                                        <div className=\"sota-table-link\">\r\n                                            <a className=\"btn btn-primary\" href=\"/sota/lesion-segmentation-on-anatomical-tracings-of-1\">\r\n                                                Compare</a>\r\n                                        </div>\r\n                                    </td>\r\n                                </tr>\r\n                            \r\n                                <tr>\r\n                                    \r\n                                    \r\n                                    \r\n                                    <td>\r\n                                        IoU\r\n                                    </td>\r\n                                    <td>\r\n                                        0.3447\r\n                                    </td>\r\n                                    <td>\r\n                                        # 2\r\n                                    </td>\r\n                                    \r\n                                    \r\n                                        <td className=\"results-icon\">\r\n                                            <a href=\"/paper/u-net-convolutional-networks-for-biomedical/review/?hl=38102\">\r\n                                                <span className=\" icon-wrapper icon-ion\" data-name=\"enter-outline\"><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"51\" height=\"51\" viewBox=\"0 0 51 51\"><path d=\"M176 176v-40a40 40 0 0 1 40-40h208a40 40 0 0 1 40 40v240a40 40 0 0 1-40 40H216a40 40 0 0 1-40-40v-40\" fill=\"none\" stroke=\"#000\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"32\"></path><path fill=\"none\" stroke=\"#000\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"32\" d=\"M272 336l80-80-80-80M48 256h288\"></path></svg></span>\r\n                                            </a>\r\n                                        </td>\r\n                                    \r\n                                    <td>\r\n                                        <div className=\"sota-table-link\">\r\n                                            <a className=\"btn btn-primary\" href=\"/sota/lesion-segmentation-on-anatomical-tracings-of-1\">\r\n                                                Compare</a>\r\n                                        </div>\r\n                                    </td>\r\n                                </tr>\r\n                            \r\n                                <tr>\r\n                                    \r\n                                    \r\n                                    \r\n                                    <td>\r\n                                        Precision\r\n                                    </td>\r\n                                    <td>\r\n                                        0.5994\r\n                                    </td>\r\n                                    <td>\r\n                                        # 1\r\n                                    </td>\r\n                                    \r\n                                    \r\n                                        <td className=\"results-icon\">\r\n                                            <a href=\"/paper/u-net-convolutional-networks-for-biomedical/review/?hl=38102\">\r\n                                                <span className=\" icon-wrapper icon-ion\" data-name=\"enter-outline\"><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"51\" height=\"51\" viewBox=\"0 0 51 51\"><path d=\"M176 176v-40a40 40 0 0 1 40-40h208a40 40 0 0 1 40 40v240a40 40 0 0 1-40 40H216a40 40 0 0 1-40-40v-40\" fill=\"none\" stroke=\"#000\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"32\"></path><path fill=\"none\" stroke=\"#000\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"32\" d=\"M272 336l80-80-80-80M48 256h288\"></path></svg></span>\r\n                                            </a>\r\n                                        </td>\r\n                                    \r\n                                    <td>\r\n                                        <div className=\"sota-table-link\">\r\n                                            <a className=\"btn btn-primary\" href=\"/sota/lesion-segmentation-on-anatomical-tracings-of-1\">\r\n                                                Compare</a>\r\n                                        </div>\r\n                                    </td>\r\n                                </tr>\r\n                            \r\n                                <tr>\r\n                                    \r\n                                    \r\n                                    \r\n                                    <td>\r\n                                        Recall\r\n                                    </td>\r\n                                    <td>\r\n                                        0.4449\r\n                                    </td>\r\n                                    <td>\r\n                                        # 1\r\n                                    </td>\r\n                                    \r\n                                    \r\n                                        <td className=\"results-icon\">\r\n                                            <a href=\"/paper/u-net-convolutional-networks-for-biomedical/review/?hl=38102\">\r\n                                                <span className=\" icon-wrapper icon-ion\" data-name=\"enter-outline\"><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"51\" height=\"51\" viewBox=\"0 0 51 51\"><path d=\"M176 176v-40a40 40 0 0 1 40-40h208a40 40 0 0 1 40 40v240a40 40 0 0 1-40 40H216a40 40 0 0 1-40-40v-40\" fill=\"none\" stroke=\"#000\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"32\"></path><path fill=\"none\" stroke=\"#000\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"32\" d=\"M272 336l80-80-80-80M48 256h288\"></path></svg></span>\r\n                                            </a>\r\n                                        </td>\r\n                                    \r\n                                    <td>\r\n                                        <div className=\"sota-table-link\">\r\n                                            <a className=\"btn btn-primary\" href=\"/sota/lesion-segmentation-on-anatomical-tracings-of-1\">\r\n                                                Compare</a>\r\n                                        </div>\r\n                                    </td>\r\n                                </tr>\r\n                            \r\n                                <tr>\r\n                                    \r\n                                    <td rowspan=\"2\" className=\"rowspan-td\">\r\n                                        Retinal Vessel Segmentation\r\n                                    </td>\r\n                                    \r\n                                    \r\n                                    <td rowspan=\"2\" className=\"rowspan-td\">\r\n                                        CHASE_DB1\r\n                                    </td>\r\n                                    \r\n                                    \r\n                                    <td rowspan=\"2\" className=\"rowspan-td model-col\">\r\n                                        \r\n                                            U-Net\r\n                                        \r\n                                    </td>\r\n                                    \r\n                                    <td>\r\n                                        F1 score\r\n                                    </td>\r\n                                    <td>\r\n                                        0.7783\r\n                                    </td>\r\n                                    <td>\r\n                                        # 10\r\n                                    </td>\r\n                                    \r\n                                    \r\n                                        <td className=\"results-icon\">\r\n                                            <a href=\"/paper/u-net-convolutional-networks-for-biomedical/review/?hl=3244\">\r\n                                                <span className=\" icon-wrapper icon-ion\" data-name=\"enter-outline\"><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"51\" height=\"51\" viewBox=\"0 0 51 51\"><path d=\"M176 176v-40a40 40 0 0 1 40-40h208a40 40 0 0 1 40 40v240a40 40 0 0 1-40 40H216a40 40 0 0 1-40-40v-40\" fill=\"none\" stroke=\"#000\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"32\"></path><path fill=\"none\" stroke=\"#000\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"32\" d=\"M272 336l80-80-80-80M48 256h288\"></path></svg></span>\r\n                                            </a>\r\n                                        </td>\r\n                                    \r\n                                    <td>\r\n                                        <div className=\"sota-table-link\">\r\n                                            <a className=\"btn btn-primary\" href=\"/sota/retinal-vessel-segmentation-on-chase_db1\">\r\n                                                Compare</a>\r\n                                        </div>\r\n                                    </td>\r\n                                </tr>\r\n                            \r\n                                <tr>\r\n                                    \r\n                                    \r\n                                    \r\n                                    <td>\r\n                                        AUC\r\n                                    </td>\r\n                                    <td>\r\n                                        0.9772\r\n                                    </td>\r\n                                    <td>\r\n                                        # 10\r\n                                    </td>\r\n                                    \r\n                                    \r\n                                        <td className=\"results-icon\">\r\n                                            <a href=\"/paper/u-net-convolutional-networks-for-biomedical/review/?hl=3244\">\r\n                                                <span className=\" icon-wrapper icon-ion\" data-name=\"enter-outline\"><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"51\" height=\"51\" viewBox=\"0 0 51 51\"><path d=\"M176 176v-40a40 40 0 0 1 40-40h208a40 40 0 0 1 40 40v240a40 40 0 0 1-40 40H216a40 40 0 0 1-40-40v-40\" fill=\"none\" stroke=\"#000\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"32\"></path><path fill=\"none\" stroke=\"#000\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"32\" d=\"M272 336l80-80-80-80M48 256h288\"></path></svg></span>\r\n                                            </a>\r\n                                        </td>\r\n                                    \r\n                                    <td>\r\n                                        <div className=\"sota-table-link\">\r\n                                            <a className=\"btn btn-primary\" href=\"/sota/retinal-vessel-segmentation-on-chase_db1\">\r\n                                                Compare</a>\r\n                                        </div>\r\n                                    </td>\r\n                                </tr>\r\n                            \r\n                                <tr>\r\n                                    \r\n                                    <td rowspan=\"3\" className=\"rowspan-td\">\r\n                                        Colorectal Gland Segmentation:\r\n                                    </td>\r\n                                    \r\n                                    \r\n                                    <td rowspan=\"3\" className=\"rowspan-td\">\r\n                                        CRAG\r\n                                    </td>\r\n                                    \r\n                                    \r\n                                    <td rowspan=\"3\" className=\"rowspan-td model-col\">\r\n                                        \r\n                                            U-Net (e)\r\n                                        \r\n                                    </td>\r\n                                    \r\n                                    <td>\r\n                                        F1-score\r\n                                    </td>\r\n                                    <td>\r\n                                        0.827\r\n                                    </td>\r\n                                    <td>\r\n                                        # 8\r\n                                    </td>\r\n                                    \r\n                                    \r\n                                        <td className=\"results-icon\">\r\n                                            <a href=\"/paper/u-net-convolutional-networks-for-biomedical/review/?hl=16702\">\r\n                                                <span className=\" icon-wrapper icon-ion\" data-name=\"enter-outline\"><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"51\" height=\"51\" viewBox=\"0 0 51 51\"><path d=\"M176 176v-40a40 40 0 0 1 40-40h208a40 40 0 0 1 40 40v240a40 40 0 0 1-40 40H216a40 40 0 0 1-40-40v-40\" fill=\"none\" stroke=\"#000\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"32\"></path><path fill=\"none\" stroke=\"#000\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"32\" d=\"M272 336l80-80-80-80M48 256h288\"></path></svg></span>\r\n                                            </a>\r\n                                        </td>\r\n                                    \r\n                                    <td>\r\n                                        <div className=\"sota-table-link\">\r\n                                            <a className=\"btn btn-primary\" href=\"/sota/colorectal-gland-segmentation-on-crag\">\r\n                                                Compare</a>\r\n                                        </div>\r\n                                    </td>\r\n                                </tr>\r\n                            \r\n                                <tr>\r\n                                    \r\n                                    \r\n                                    \r\n                                    <td>\r\n                                        Dice\r\n                                    </td>\r\n                                    <td>\r\n                                        0.844\r\n                                    </td>\r\n                                    <td>\r\n                                        # 9\r\n                                    </td>\r\n                                    \r\n                                    \r\n                                        <td className=\"results-icon\">\r\n                                            <a href=\"/paper/u-net-convolutional-networks-for-biomedical/review/?hl=16702\">\r\n                                                <span className=\" icon-wrapper icon-ion\" data-name=\"enter-outline\"><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"51\" height=\"51\" viewBox=\"0 0 51 51\"><path d=\"M176 176v-40a40 40 0 0 1 40-40h208a40 40 0 0 1 40 40v240a40 40 0 0 1-40 40H216a40 40 0 0 1-40-40v-40\" fill=\"none\" stroke=\"#000\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"32\"></path><path fill=\"none\" stroke=\"#000\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"32\" d=\"M272 336l80-80-80-80M48 256h288\"></path></svg></span>\r\n                                            </a>\r\n                                        </td>\r\n                                    \r\n                                    <td>\r\n                                        <div className=\"sota-table-link\">\r\n                                            <a className=\"btn btn-primary\" href=\"/sota/colorectal-gland-segmentation-on-crag\">\r\n                                                Compare</a>\r\n                                        </div>\r\n                                    </td>\r\n                                </tr>\r\n                            \r\n                                <tr>\r\n                                    \r\n                                    \r\n                                    \r\n                                    <td>\r\n                                        Hausdorff Distance (mm)\r\n                                    </td>\r\n                                    <td>\r\n                                        196.9\r\n                                    </td>\r\n                                    <td>\r\n                                        # 5\r\n                                    </td>\r\n                                    \r\n                                    \r\n                                        <td className=\"results-icon\">\r\n                                            <a href=\"/paper/u-net-convolutional-networks-for-biomedical/review/?hl=16702\">\r\n                                                <span className=\" icon-wrapper icon-ion\" data-name=\"enter-outline\"><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"51\" height=\"51\" viewBox=\"0 0 51 51\"><path d=\"M176 176v-40a40 40 0 0 1 40-40h208a40 40 0 0 1 40 40v240a40 40 0 0 1-40 40H216a40 40 0 0 1-40-40v-40\" fill=\"none\" stroke=\"#000\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"32\"></path><path fill=\"none\" stroke=\"#000\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"32\" d=\"M272 336l80-80-80-80M48 256h288\"></path></svg></span>\r\n                                            </a>\r\n                                        </td>\r\n                                    \r\n                                    <td>\r\n                                        <div className=\"sota-table-link\">\r\n                                            <a className=\"btn btn-primary\" href=\"/sota/colorectal-gland-segmentation-on-crag\">\r\n                                                Compare</a>\r\n                                        </div>\r\n                                    </td>\r\n                                </tr>\r\n                            \r\n                                <tr>\r\n                                    \r\n                                    <td rowspan=\"1\" className=\"rowspan-td\">\r\n                                        Colorectal Gland Segmentation:\r\n                                    </td>\r\n                                    \r\n                                    \r\n                                    <td rowspan=\"1\" className=\"rowspan-td\">\r\n                                        CRAG\r\n                                    </td>\r\n                                    \r\n                                    \r\n                                    <td rowspan=\"1\" className=\"rowspan-td model-col\">\r\n                                        \r\n                                            U-Net\r\n                                        \r\n                                    </td>\r\n                                    \r\n                                    <td>\r\n                                        DiceOC\r\n                                    </td>\r\n                                    <td>\r\n                                        0.835\r\n                                    </td>\r\n                                    <td>\r\n                                        # 1\r\n                                    </td>\r\n                                    \r\n                                    \r\n                                        <td className=\"results-icon\">\r\n                                            <a href=\"/paper/u-net-convolutional-networks-for-biomedical/review/?hl=40302\">\r\n                                                <span className=\" icon-wrapper icon-ion\" data-name=\"enter-outline\"><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"51\" height=\"51\" viewBox=\"0 0 51 51\"><path d=\"M176 176v-40a40 40 0 0 1 40-40h208a40 40 0 0 1 40 40v240a40 40 0 0 1-40 40H216a40 40 0 0 1-40-40v-40\" fill=\"none\" stroke=\"#000\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"32\"></path><path fill=\"none\" stroke=\"#000\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"32\" d=\"M272 336l80-80-80-80M48 256h288\"></path></svg></span>\r\n                                            </a>\r\n                                        </td>\r\n                                    \r\n                                    <td>\r\n                                        <div className=\"sota-table-link\">\r\n                                            <a className=\"btn btn-primary\" href=\"/sota/colorectal-gland-segmentation-on-crag\">\r\n                                                Compare</a>\r\n                                        </div>\r\n                                    </td>\r\n                                </tr>\r\n                            \r\n                                <tr>\r\n                                    \r\n                                    <td rowspan=\"2\" className=\"rowspan-td\">\r\n                                        Colorectal Gland Segmentation:\r\n                                    </td>\r\n                                    \r\n                                    \r\n                                    <td rowspan=\"2\" className=\"rowspan-td\">\r\n                                        CRAG\r\n                                    </td>\r\n                                    \r\n                                    \r\n                                    <td rowspan=\"2\" className=\"rowspan-td model-col\">\r\n                                        \r\n                                            FCN8 (e)\r\n                                        \r\n                                    </td>\r\n                                    \r\n                                    <td>\r\n                                        F1-score\r\n                                    </td>\r\n                                    <td>\r\n                                        0.796\r\n                                    </td>\r\n                                    <td>\r\n                                        # 11\r\n                                    </td>\r\n                                    \r\n                                    \r\n                                        <td className=\"results-icon\">\r\n                                            <a href=\"/paper/u-net-convolutional-networks-for-biomedical/review/?hl=16701\">\r\n                                                <span className=\" icon-wrapper icon-ion\" data-name=\"enter-outline\"><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"51\" height=\"51\" viewBox=\"0 0 51 51\"><path d=\"M176 176v-40a40 40 0 0 1 40-40h208a40 40 0 0 1 40 40v240a40 40 0 0 1-40 40H216a40 40 0 0 1-40-40v-40\" fill=\"none\" stroke=\"#000\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"32\"></path><path fill=\"none\" stroke=\"#000\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"32\" d=\"M272 336l80-80-80-80M48 256h288\"></path></svg></span>\r\n                                            </a>\r\n                                        </td>\r\n                                    \r\n                                    <td>\r\n                                        <div className=\"sota-table-link\">\r\n                                            <a className=\"btn btn-primary\" href=\"/sota/colorectal-gland-segmentation-on-crag\">\r\n                                                Compare</a>\r\n                                        </div>\r\n                                    </td>\r\n                                </tr>\r\n                            \r\n                                <tr>\r\n                                    \r\n                                    \r\n                                    \r\n                                    <td>\r\n                                        Hausdorff Distance (mm)\r\n                                    </td>\r\n                                    <td>\r\n                                        199.5\r\n                                    </td>\r\n                                    <td>\r\n                                        # 4\r\n                                    </td>\r\n                                    \r\n                                    \r\n                                        <td className=\"results-icon\">\r\n                                            <a href=\"/paper/u-net-convolutional-networks-for-biomedical/review/?hl=16701\">\r\n                                                <span className=\" icon-wrapper icon-ion\" data-name=\"enter-outline\"><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"51\" height=\"51\" viewBox=\"0 0 51 51\"><path d=\"M176 176v-40a40 40 0 0 1 40-40h208a40 40 0 0 1 40 40v240a40 40 0 0 1-40 40H216a40 40 0 0 1-40-40v-40\" fill=\"none\" stroke=\"#000\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"32\"></path><path fill=\"none\" stroke=\"#000\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"32\" d=\"M272 336l80-80-80-80M48 256h288\"></path></svg></span>\r\n                                            </a>\r\n                                        </td>\r\n                                    \r\n                                    <td>\r\n                                        <div className=\"sota-table-link\">\r\n                                            <a className=\"btn btn-primary\" href=\"/sota/colorectal-gland-segmentation-on-crag\">\r\n                                                Compare</a>\r\n                                        </div>\r\n                                    </td>\r\n                                </tr>\r\n                            \r\n                                <tr>\r\n                                    \r\n                                    <td rowspan=\"3\" className=\"rowspan-td\">\r\n                                        Pancreas Segmentation\r\n                                    </td>\r\n                                    \r\n                                    \r\n                                    <td rowspan=\"3\" className=\"rowspan-td\">\r\n                                        CT-150\r\n                                    </td>\r\n                                    \r\n                                    \r\n                                    <td rowspan=\"3\" className=\"rowspan-td model-col\">\r\n                                        \r\n                                            U-Net\r\n                                        \r\n                                    </td>\r\n                                    \r\n                                    <td>\r\n                                        Dice Score\r\n                                    </td>\r\n                                    <td>\r\n                                        0.814\r\n                                    </td>\r\n                                    <td>\r\n                                        # 1\r\n                                    </td>\r\n                                    \r\n                                    \r\n                                        <td className=\"results-icon\">\r\n                                            <a href=\"/paper/u-net-convolutional-networks-for-biomedical/review/?hl=3236\">\r\n                                                <span className=\" icon-wrapper icon-ion\" data-name=\"enter-outline\"><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"51\" height=\"51\" viewBox=\"0 0 51 51\"><path d=\"M176 176v-40a40 40 0 0 1 40-40h208a40 40 0 0 1 40 40v240a40 40 0 0 1-40 40H216a40 40 0 0 1-40-40v-40\" fill=\"none\" stroke=\"#000\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"32\"></path><path fill=\"none\" stroke=\"#000\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"32\" d=\"M272 336l80-80-80-80M48 256h288\"></path></svg></span>\r\n                                            </a>\r\n                                        </td>\r\n                                    \r\n                                    <td>\r\n                                        <div className=\"sota-table-link\">\r\n                                            <a className=\"btn btn-primary\" href=\"/sota/pancreas-segmentation-on-ct-150\">\r\n                                                Compare</a>\r\n                                        </div>\r\n                                    </td>\r\n                                </tr>\r\n                            \r\n                                <tr>\r\n                                    \r\n                                    \r\n                                    \r\n                                    <td>\r\n                                        Precision\r\n                                    </td>\r\n                                    <td>\r\n                                        0.848\r\n                                    </td>\r\n                                    <td>\r\n                                        # 2\r\n                                    </td>\r\n                                    \r\n                                    \r\n                                        <td className=\"results-icon\">\r\n                                            <a href=\"/paper/u-net-convolutional-networks-for-biomedical/review/?hl=3236\">\r\n                                                <span className=\" icon-wrapper icon-ion\" data-name=\"enter-outline\"><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"51\" height=\"51\" viewBox=\"0 0 51 51\"><path d=\"M176 176v-40a40 40 0 0 1 40-40h208a40 40 0 0 1 40 40v240a40 40 0 0 1-40 40H216a40 40 0 0 1-40-40v-40\" fill=\"none\" stroke=\"#000\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"32\"></path><path fill=\"none\" stroke=\"#000\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"32\" d=\"M272 336l80-80-80-80M48 256h288\"></path></svg></span>\r\n                                            </a>\r\n                                        </td>\r\n                                    \r\n                                    <td>\r\n                                        <div className=\"sota-table-link\">\r\n                                            <a className=\"btn btn-primary\" href=\"/sota/pancreas-segmentation-on-ct-150\">\r\n                                                Compare</a>\r\n                                        </div>\r\n                                    </td>\r\n                                </tr>\r\n                            \r\n                                <tr>\r\n                                    \r\n                                    \r\n                                    \r\n                                    <td>\r\n                                        Recall\r\n                                    </td>\r\n                                    <td>\r\n                                        0.806\r\n                                    </td>\r\n                                    <td>\r\n                                        # 2\r\n                                    </td>\r\n                                    \r\n                                    \r\n                                        <td className=\"results-icon\">\r\n                                            <a href=\"/paper/u-net-convolutional-networks-for-biomedical/review/?hl=3236\">\r\n                                                <span className=\" icon-wrapper icon-ion\" data-name=\"enter-outline\"><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"51\" height=\"51\" viewBox=\"0 0 51 51\"><path d=\"M176 176v-40a40 40 0 0 1 40-40h208a40 40 0 0 1 40 40v240a40 40 0 0 1-40 40H216a40 40 0 0 1-40-40v-40\" fill=\"none\" stroke=\"#000\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"32\"></path><path fill=\"none\" stroke=\"#000\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"32\" d=\"M272 336l80-80-80-80M48 256h288\"></path></svg></span>\r\n                                            </a>\r\n                                        </td>\r\n                                    \r\n                                    <td>\r\n                                        <div className=\"sota-table-link\">\r\n                                            <a className=\"btn btn-primary\" href=\"/sota/pancreas-segmentation-on-ct-150\">\r\n                                                Compare</a>\r\n                                        </div>\r\n                                    </td>\r\n                                </tr>\r\n                            \r\n                                <tr>\r\n                                    \r\n                                    <td rowspan=\"1\" className=\"rowspan-td\">\r\n                                        Medical Image Segmentation\r\n                                    </td>\r\n                                    \r\n                                    \r\n                                    <td rowspan=\"1\" className=\"rowspan-td\">\r\n                                        CVC-ClinicDB\r\n                                    </td>\r\n                                    \r\n                                    \r\n                                    <td rowspan=\"1\" className=\"rowspan-td model-col\">\r\n                                        \r\n                                            U-Net\r\n                                        \r\n                                    </td>\r\n                                    \r\n                                    <td>\r\n                                        mean Dice\r\n                                    </td>\r\n                                    <td>\r\n                                        0.8230\r\n                                    </td>\r\n                                    <td>\r\n                                        # 16\r\n                                    </td>\r\n                                    \r\n                                    \r\n                                        <td className=\"results-icon\">\r\n                                            <a href=\"/paper/u-net-convolutional-networks-for-biomedical/review/?hl=19751\">\r\n                                                <span className=\" icon-wrapper icon-ion\" data-name=\"enter-outline\"><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"51\" height=\"51\" viewBox=\"0 0 51 51\"><path d=\"M176 176v-40a40 40 0 0 1 40-40h208a40 40 0 0 1 40 40v240a40 40 0 0 1-40 40H216a40 40 0 0 1-40-40v-40\" fill=\"none\" stroke=\"#000\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"32\"></path><path fill=\"none\" stroke=\"#000\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"32\" d=\"M272 336l80-80-80-80M48 256h288\"></path></svg></span>\r\n                                            </a>\r\n                                        </td>\r\n                                    \r\n                                    <td>\r\n                                        <div className=\"sota-table-link\">\r\n                                            <a className=\"btn btn-primary\" href=\"/sota/medical-image-segmentation-on-cvc-clinicdb\">\r\n                                                Compare</a>\r\n                                        </div>\r\n                                    </td>\r\n                                </tr>\r\n                            \r\n                                <tr>\r\n                                    \r\n                                    <td rowspan=\"1\" className=\"rowspan-td\">\r\n                                        Cell Segmentation\r\n                                    </td>\r\n                                    \r\n                                    \r\n                                    <td rowspan=\"1\" className=\"rowspan-td\">\r\n                                        DIC-HeLa\r\n                                    </td>\r\n                                    \r\n                                    \r\n                                    <td rowspan=\"1\" className=\"rowspan-td model-col\">\r\n                                        \r\n                                            U-Net\r\n                                        \r\n                                    </td>\r\n                                    \r\n                                    <td>\r\n                                        Mean IoU\r\n                                    </td>\r\n                                    <td>\r\n                                        0.7756\r\n                                    </td>\r\n                                    <td>\r\n                                        # 1\r\n                                    </td>\r\n                                    \r\n                                    \r\n                                        <td className=\"results-icon\">\r\n                                            <a href=\"/paper/u-net-convolutional-networks-for-biomedical/review/?hl=3234\">\r\n                                                <span className=\" icon-wrapper icon-ion\" data-name=\"enter-outline\"><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"51\" height=\"51\" viewBox=\"0 0 51 51\"><path d=\"M176 176v-40a40 40 0 0 1 40-40h208a40 40 0 0 1 40 40v240a40 40 0 0 1-40 40H216a40 40 0 0 1-40-40v-40\" fill=\"none\" stroke=\"#000\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"32\"></path><path fill=\"none\" stroke=\"#000\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"32\" d=\"M272 336l80-80-80-80M48 256h288\"></path></svg></span>\r\n                                            </a>\r\n                                        </td>\r\n                                    \r\n                                    <td>\r\n                                        <div className=\"sota-table-link\">\r\n                                            <a className=\"btn btn-primary\" href=\"/sota/cell-segmentation-on-dic-hela\">\r\n                                                Compare</a>\r\n                                        </div>\r\n                                    </td>\r\n                                </tr>\r\n                            \r\n                                <tr>\r\n                                    \r\n                                    <td rowspan=\"1\" className=\"rowspan-td\">\r\n                                        Medical Image Segmentation\r\n                                    </td>\r\n                                    \r\n                                    \r\n                                    <td rowspan=\"1\" className=\"rowspan-td\">\r\n                                        ISBI 2012 EM Segmentation\r\n                                    </td>\r\n                                    \r\n                                    \r\n                                    <td rowspan=\"1\" className=\"rowspan-td model-col\">\r\n                                        \r\n                                            U-Net\r\n                                        \r\n                                    </td>\r\n                                    \r\n                                    <td>\r\n                                        Warping Error\r\n                                    </td>\r\n                                    <td>\r\n                                        0.000353\r\n                                    </td>\r\n                                    <td>\r\n                                        # 1\r\n                                    </td>\r\n                                    \r\n                                    \r\n                                        <td className=\"results-icon\">\r\n                                            <a href=\"/paper/u-net-convolutional-networks-for-biomedical/review/?hl=3232\">\r\n                                                <span className=\" icon-wrapper icon-ion\" data-name=\"enter-outline\"><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"51\" height=\"51\" viewBox=\"0 0 51 51\"><path d=\"M176 176v-40a40 40 0 0 1 40-40h208a40 40 0 0 1 40 40v240a40 40 0 0 1-40 40H216a40 40 0 0 1-40-40v-40\" fill=\"none\" stroke=\"#000\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"32\"></path><path fill=\"none\" stroke=\"#000\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"32\" d=\"M272 336l80-80-80-80M48 256h288\"></path></svg></span>\r\n                                            </a>\r\n                                        </td>\r\n                                    \r\n                                    <td>\r\n                                        <div className=\"sota-table-link\">\r\n                                            <a className=\"btn btn-primary\" href=\"/sota/medical-image-segmentation-on-isbi-2012-em\">\r\n                                                Compare</a>\r\n                                        </div>\r\n                                    </td>\r\n                                </tr>\r\n                            \r\n                                <tr>\r\n                                    \r\n                                    <td rowspan=\"2\" className=\"rowspan-td\">\r\n                                        Skin Cancer Segmentation\r\n                                    </td>\r\n                                    \r\n                                    \r\n                                    <td rowspan=\"2\" className=\"rowspan-td\">\r\n                                        Kaggle Skin Lesion Segmentation\r\n                                    </td>\r\n                                    \r\n                                    \r\n                                    <td rowspan=\"2\" className=\"rowspan-td model-col\">\r\n                                        \r\n                                            U-Net\r\n                                        \r\n                                    </td>\r\n                                    \r\n                                    <td>\r\n                                        F1 score\r\n                                    </td>\r\n                                    <td>\r\n                                        0.8682\r\n                                    </td>\r\n                                    <td>\r\n                                        # 3\r\n                                    </td>\r\n                                    \r\n                                    \r\n                                        <td className=\"results-icon\">\r\n                                            <a href=\"/paper/u-net-convolutional-networks-for-biomedical/review/?hl=3250\">\r\n                                                <span className=\" icon-wrapper icon-ion\" data-name=\"enter-outline\"><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"51\" height=\"51\" viewBox=\"0 0 51 51\"><path d=\"M176 176v-40a40 40 0 0 1 40-40h208a40 40 0 0 1 40 40v240a40 40 0 0 1-40 40H216a40 40 0 0 1-40-40v-40\" fill=\"none\" stroke=\"#000\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"32\"></path><path fill=\"none\" stroke=\"#000\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"32\" d=\"M272 336l80-80-80-80M48 256h288\"></path></svg></span>\r\n                                            </a>\r\n                                        </td>\r\n                                    \r\n                                    <td>\r\n                                        <div className=\"sota-table-link\">\r\n                                            <a className=\"btn btn-primary\" href=\"/sota/skin-cancer-segmentation-on-kaggle-skin\">\r\n                                                Compare</a>\r\n                                        </div>\r\n                                    </td>\r\n                                </tr>\r\n                            \r\n\r\n                        </tbody></table>\r\n)","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport {Flex, Col, Row, Text, Image} from '../../../../components/common/base';\r\n\r\nexport const Articles = ({model}) => {\r\n    return (\r\n        <Col>\r\n            <Text weight=\"500\" className=\"light\" size=\"22\">Articles about {model.title}</Text>\r\n            <Flex style={{display: \"block\"}}>\r\n                {model.articles.map(item => <ArticleBox key={item.title} />)}\r\n            </Flex>\r\n        </Col>\r\n    )\r\n}\r\n\r\nexport const ArticleBoxWrap = styled(Flex)`\r\n    \r\n`;\r\n\r\nexport const ArticleBox = ({item}) => {\r\n    return (\r\n        <ArticleBoxWrap>\r\n\r\n        </ArticleBoxWrap>\r\n    )\r\n}\r\n\r\nexport default Articles;","import React, { useState, useEffect } from 'react';\r\nimport {Flex, Col, Row, Text, Image} from '../../../components/common/base';\r\nimport { bgStyler } from '../../../styles';\r\nimport Demo from '../demo';\r\nimport Example from './example';\r\nimport Articles from './articles';\r\n\r\nexport const ModelSpecs = ({model, darkMode}) => {\r\n    return (\r\n        <Col flex={1}>\r\n            <Text size=\"22\" className=\"bold\" margin=\"margin-bottom: 30px;\">Model Specs</Text>\r\n            <Flex bg={bgStyler(darkMode)} br=\"20px;\" height=\"500px\"></Flex>\r\n        </Col>\r\n    )\r\n};\r\n\r\nexport const LeaderBoards = ({model, darkMode}) => {\r\n    return (\r\n        <Col flex={2.5} margin=\"margin-right: 30px;\">\r\n            <Text size=\"22\" className=\"bold\" margin=\"margin-bottom: 30px;\">Results from the Paper</Text>\r\n            <Flex br=\"20px;\" height=\"500px;\" style={{overflow: 'hidden'}} bg={bgStyler(darkMode)}>\r\n                <Example />\r\n            </Flex>\r\n        </Col>\r\n    )\r\n};\r\n\r\nexport const Task = ({model, darkMode}) => {\r\n    return (\r\n        <Row margin=\"margin-top: 20px; margin-bottom: 50px;\">\r\n            <Col flex={1} margin=\"margin-right: 25px;\">\r\n                <Text size=\"22\" className=\"bold\" margin=\"margin-bottom: 15px;\">\r\n                    Tasks\r\n                </Text>\r\n                <Flex style={{display: 'block'}}>{model.task.tasks.map((item) => <Text margin=\"margin-right: 10px;\" key={item}>{item}</Text>)}</Flex>\r\n            </Col>\r\n            <Col flex={1} margin=\"margin-left: 25px;\">\r\n                <Text size=\"22\" className=\"bold\" margin=\"margin-bottom: 15px;\">\r\n                    Datasets\r\n                </Text>\r\n                <Flex style={{display: 'block'}}>{model.task.datasets.map((item) => <Text margin=\"margin-right: 10px;\" key={item}>{item}</Text>)}</Flex>\r\n            </Col>\r\n        </Row>\r\n    )\r\n}\r\n\r\nexport const ModelMain = ({model, darkMode}) => {\r\n    // const [opacity, setOpacity] = useState(1);\r\n    // const [_model, set_Model] = useState(model);\r\n    // useEffect(() => {\r\n    //     const opaciter = () => {\r\n    //         setOpacity(0);\r\n    //         setTimeout(() => {\r\n    //             set_Model(model);\r\n    //             setOpacity(1)\r\n    //         }, 300);\r\n    //     };\r\n    //     opaciter();\r\n    // }, [model])\r\n    return (\r\n        <Col width=\"100%\" margin=\"margin-top: 35px;\">\r\n            {model.demo && <Demo model={model} darkMode={darkMode} />}\r\n            {model.articles && <Articles model={model} darkMode={darkMode} />}\r\n            <Task model={model} />\r\n            <Row width=\"100%\">\r\n                <LeaderBoards darkMode={darkMode} />\r\n                <ModelSpecs darkMode={darkMode} />\r\n            </Row>\r\n        </Col>\r\n    )\r\n};\r\n\r\nexport default ModelMain;","import React, {useState, useEffect} from 'react';\r\nimport {Flex, Col, Row, Text, Image} from '../../../components/common/base';\r\nimport {BackIcon, BenchMarkIcon, ColabIcon, DemoIcon, GithubIcon, PaperIcon, PaperswithCodeIcon, PdfIcon} from '../../../icons/utilities';\r\nimport ModelView from '../modelview';\r\nimport ModelMain from '../modelmain';\r\nimport { bgStyler, blueLowColor, extremehueBlue, hueBlue } from '../../../styles';\r\n\r\nexport const Title = ({darkMode, setModel, model, task, subTask}) => {\r\n    return (\r\n        <Col width=\"100%\">\r\n            <Flex onClick={() => setModel(null)} to=\"cursor\" position=\"absolute\" style={{left: '9.5%', top: 180, opacity: model ? 1 : 0, transition: 'all 300ms'}}>\r\n                <BackIcon width={20} height={20} stroke={darkMode ? \"rgba(255, 255, 255, 0.7\" : 'rgba(0, 0, 0, 0.7)'} />\r\n            </Flex>\r\n            <Text className=\"bold\" style={{minHeight: 36.67, marginLeft: model ? 30: 0, marginTop: model ? 3: 0, transition: 'all 300ms'}} size={model ? 27: \"30\"}>\r\n                {model ? model.paper.name : subTask ? subTask.title.toUpperCase() : task ? task.title.toUpperCase() : \"Computer Vision\".toUpperCase()}\r\n            </Text>\r\n           \r\n        </Col>\r\n    )\r\n};\r\n\r\nexport const Directory = ({darkMode, model, subTask, task}) => {\r\n    return (\r\n        <Col>\r\n            <Row margin=\"margin: 20px 0px\" opacity={0.8}>\r\n                <Text className=\"bold\" weight=\"500\" size=\"16\">{task.title}</Text>\r\n                {subTask && task.title != subTask.title && \r\n                <>\r\n                    <Text className=\"bold\" weight=\"500\" size=\"16\" margin=\"margin: 0px 10px;\">></Text>   \r\n                    <Text className=\"bold\" weight=\"500\" size=\"16\">{subTask.title}</Text>\r\n                </>}\r\n                {model && \r\n                <>\r\n                    <Text className=\"bold\" weight=\"500\" size=\"16\" margin=\"margin: 0px 10px;\">></Text>\r\n                    <Text className=\"bold\" weight=\"500\" size=\"16\">{model.title}</Text>\r\n                </>}\r\n            </Row>\r\n            {model && \r\n                <Col>\r\n                    <Text style={{opacity: 0.8}} lh={20} className=\"light\" margin=\"margin-bottom: 10px;\" weight=\"500\">\r\n                        {model.paper.conference && model.paper.conference.name != null && <>\r\n                            <Text size=\"14\">{model.paper.conference.name}</Text>\r\n                            <Text margin=\"margin: 0px 5px;\" size=\"14\">  ·  </Text>\r\n                        </>}\r\n                        {model.paper.published_date && <>\r\n                            <Text size=\"14\">\r\n                                {model.paper.published_date}\r\n                            </Text>\r\n                            <Text margin=\"margin: 0px 5px;\" size=\"14\">  ·  </Text>\r\n                        </>}\r\n                        {model.paper.authors.map((item, index) => index !==0 ? <Text key={index} size=\"14\">{',  ' + item}</Text> : <Text key={index} size=\"14\">{item}</Text>)}\r\n                    </Text>\r\n                    {model.task.featured && <Text size=\"15\" color={darkMode ? extremehueBlue : blueLowColor} className=\"bold\" margin=\"margin: 10px 0px; margin-top: 10px;\" weight=\"600\">{model.task.featured}</Text>}\r\n                </Col>}\r\n        </Col>\r\n    )\r\n}\r\n\r\nexport const Buttons = ({model, darkMode, subTask, task}) => {\r\n    return (\r\n        <>\r\n         {model ? \r\n                <Row margin=\"margin-top: 30px;\">\r\n                    {model.paper.url && <>\r\n                        <a href={`${model.paper.paper.replace('abs', 'pdf')}` + '.pdf'} target=\"_blank\">\r\n                            <Row shadow={true} align=\"center\" margin=\"margin-right: 18px;\" padding=\"padding: 10px 15px;\" br=\"10px\" bg={bgStyler(darkMode)}>\r\n                                <PdfIcon stroke={hueBlue} width={20} height={20} />\r\n                                <Text size=\"12\" className=\"light\" weight=\"600\" margin=\"margin: 0px 10px;\">\r\n                                    Paper\r\n                                </Text>\r\n                            </Row>\r\n                        </a>\r\n                        <a href={model.paper.paper} target=\"_blank\">\r\n                            <Row shadow={true} align=\"center\" margin=\"margin-right: 18px;\" padding=\"padding: 10px 18px;\" br=\"10px\" bg={bgStyler(darkMode)}>\r\n                                <PaperIcon stroke={hueBlue} width={20} height={20} />\r\n                                <Text size=\"12\" className=\"light\" weight=\"600\" margin=\"margin: 0px 10px;\">\r\n                                    Abstract\r\n                                </Text>\r\n                            </Row>\r\n                        </a>\r\n                    </>}\r\n                    {model.paper.conference && <>\r\n                        <a href={model.paper.conference.paper} target=\"_blank\">\r\n                            <Row shadow={true} align=\"center\" margin=\"margin-right: 18px;\" padding=\"padding: 10px 18px;\" br=\"10px\" bg={bgStyler(darkMode)}>\r\n                                <PdfIcon stroke={hueBlue} width={20} height={20} />\r\n                                <Text size=\"12\" className=\"light\" weight=\"600\" margin=\"margin: 0px 10px;\">\r\n                                    {model.paper.conference.name} Paper\r\n                                </Text>\r\n                            </Row>\r\n                        </a>\r\n                        <a href={model.paper.conference.abstract} target=\"_blank\">\r\n                            <Row shadow={true} align=\"center\" margin=\"margin-right: 18px;\" padding=\"padding: 10px 18px;\" br=\"10px\" bg={bgStyler(darkMode)}>\r\n                                <PaperIcon stroke={hueBlue} width={20} height={20} />\r\n                                <Text size=\"12\" className=\"light\" weight=\"600\" margin=\"margin: 0px 10px;\">\r\n                                    {model.paper.conference.name} Abstract\r\n                                </Text>\r\n                            </Row>\r\n                        </a>\r\n                    </>}\r\n                    <a href={model.code.url} target=\"_blank\">\r\n                        <Row shadow={true} align=\"center\" margin=\"margin-right: 18px;\" padding=\"padding: 10px 18px;\" br=\"10px\" bg={bgStyler(darkMode)}>\r\n                            <GithubIcon stroke={hueBlue} width={20} height={20} />\r\n                            <Text size=\"12\" className=\"light\" weight=\"600\" margin=\"margin: 0px 10px;\">\r\n                                Code\r\n                            </Text>\r\n                        </Row>\r\n                    </a>\r\n                    {model.code.colab && \r\n                        <a href={model.code.colab} target=\"_blank\">\r\n                            <Row shadow={true} align=\"center\" margin=\"margin-right: 18px;\" padding=\"padding: 10px 18px;\" br=\"10px\" bg={bgStyler(darkMode)}>\r\n                                <ColabIcon stroke={hueBlue} width={20} height={20} />\r\n                                <Text size=\"12\" className=\"light\" weight=\"600\" margin=\"margin: 0px 10px;\">\r\n                                    Colab\r\n                                </Text>\r\n                            </Row>\r\n                        </a>}\r\n                </Row>\r\n                : \r\n                <Row margin=\"margin-top: 30px;\">\r\n                    <Row align=\"center\">\r\n                        <DemoIcon width={20} height={20} />\r\n                        <Text size=\"12\" className=\"light\" weight=\"600\" margin=\"margin: 0px 10px;\">\r\n                            20 Demos\r\n                        </Text>\r\n                    </Row>\r\n                    <Row align=\"center\" margin=\"margin-left: 10px;\">\r\n                        <PaperswithCodeIcon width={20} height={20} />\r\n                        <Text size=\"12\" className=\"light\" weight=\"600\" margin=\"margin: 0px 10px;\">\r\n                            20 Papers with Code\r\n                        </Text>\r\n                    </Row>\r\n                    <Row align=\"center\" margin=\"margin-left: 10px;\">\r\n                        <BenchMarkIcon width={20} height={20} />\r\n                        <Text size=\"12\" className=\"light\" weight=\"600\" margin=\"margin: 0px 10px;\">\r\n                            20 Benchmarks\r\n                        </Text>\r\n                    </Row>\r\n                </Row>}\r\n            </>\r\n    )\r\n}\r\n\r\nexport const TitleDescription = ({darkMode, setModel, setTask,  model, setSubTask, task, subTask}) => {\r\n    return (\r\n        <Col>\r\n            <Title model={model} setModel={setModel} darkMode={darkMode} task={task} setTask={setTask} subTask={subTask} setSubTask={setSubTask} />\r\n            <Row>\r\n                <Col margin=\"margin-right: 30px;\" flex={1}>\r\n                    <Directory darkMode={darkMode} task={task} subTask={subTask} model={model} />\r\n                    <Text lh={27} className=\"sans\" weight=\"400\">\r\n                        {model ? model.paper.description : subTask ? subTask.description : task.description}\r\n                    </Text>\r\n                    <Buttons subTask={subTask} task={task} darkMode={darkMode} model={model} />\r\n                </Col>\r\n                {!model && <Flex margin=\"margin-top: 30px;\">\r\n                    <Flex br=\"10px\" width=\"300px;\"align=\"center\" justify=\"center\" height=\"180px;\" style={{overflow: 'hidden'}}>\r\n                        <Image width=\"108%\" height=\"108%\" of=\"cover\" src={model ? model.img : subTask ? subTask.img : task.img} />\r\n                    </Flex>\r\n                </Flex>}\r\n            </Row>\r\n        </Col>\r\n    )\r\n}\r\n\r\n\r\nexport const Main = ({model, setModel, categoryBar, darkMode, task, setTask, subTask, setSubTask}) => {\r\n    return (\r\n        <Col width=\"100%\" padding={categoryBar ? \"padding: 0% 10%; padding-right: 25%; padding-bottom: 100px;\" : \"padding: 0% 10%; padding-bottom: 100px;\"}>\r\n            <TitleDescription setModel={setModel} model={model} darkMode={darkMode} task={task} subTask={subTask} />\r\n            {/* <Text>----------------접기------------------</Text> */}\r\n            {model ? <ModelMain model={model} setModel={setModel} darkMode={darkMode} model={model} /> : \r\n            <ModelView setModel={setModel} darkMode={darkMode} task={task} subTask={subTask} />}\r\n        </Col>\r\n    )\r\n}\r\n\r\nexport default Main;","export const Image = {\r\n    title: 'Image Denoising',\r\n    img: \"https://production-media.paperswithcode.com/thumbnails/task/task-0000000714-068a8901_2PQwzdm.jpg\",\r\n    imgcredit: {\r\n        name: \"Wide Inference Network for Image Denoising via Learning Pixel-distribution Prior\",\r\n        url: \"https://arxiv.org/pdf/1707.05414v5.pdf\",\r\n    },\r\n    description: \"Image Denoising is the task of removing noise from an image, e.g. the application of Gaussian noise to an image.\",\r\n    datasets: [\"FFHQ\", \"SIDD\", \"CBSD68\", \"DND\", \"FMD\", \"PolyU Dataset\", \"CRVD\", \"NIND\"],\r\n    models: [\r\n        \r\n    ]\r\n}\r\n\r\nexport default Image;","export const SaltandPepper = {\r\n    title: 'Salt-And-Pepper Noise Removal',\r\n    img: \"https://production-media.paperswithcode.com/thumbnails/task/task-0000000074-57d5ad86.jpg\",\r\n    imgcredit: {\r\n      name: \"NAMF\",\r\n      url: \"https://arxiv.org/pdf/1910.07787v1.pdf\",\r\n    },\r\n    description: \"Salt-and-pepper noise is a form of noise sometimes seen on images. It is also known as impulse noise. This noise can be caused by sharp and sudden disturbances in the image signal. It presents itself as sparsely occurring white and black pixels.\",\r\n    datasets: [\"BSD\"],\r\n    models: [\r\n        \r\n    ]\r\n}\r\n\r\nexport default SaltandPepper;","export const models = [\r\n    // {\r\n    //     writer_id: 'Neuralverse',\r\n    //     title: \"DETR\",\r\n    //     subtitle: \"End-to-End Object Detection with Transformers\",\r\n    //     img: \"https://alcinos.github.io/detr_page/assets/elephants.png\",\r\n    //     imgcredit: {\r\n    //         name: \"DETR: End-to-End Object Detection With Transformers\",\r\n    //         url: \"https://alcinos.github.io/detr_page/\",\r\n    //     },\r\n    //     demo: true,\r\n    //     benchmark: true,\r\n    //     studio: true,\r\n    //     paper: {\r\n    //         name: \"End-to-End Object Detection with Transformers\",\r\n    //         img: \"https://alcinos.github.io/detr_page/assets/overview.jpg\",\r\n    //         description: \"We present a new method that views object detection as a direct set prediction problem. Our approach streamlines the detection pipeline, effectively removing the need for many hand-designed components like a non-maximum suppression procedure or anchor generation that explicitly encode our prior knowledge about the task. The main ingredients of the new framework, called DEtection TRansformer or DETR, are a set-based global loss that forces unique predictions via bipartite matching, and a transformer encoder-decoder architecture. Given a fixed small set of learned object queries, DETR reasons about the relations of the objects and the global image context to directly output the final set of predictions in parallel. The new model is conceptually simple and does not require a specialized library, unlike many other modern detectors. DETR demonstrates accuracy and run-time performance on par with the well-established and highly-optimized Faster RCNN baseline on the challenging COCO object detection dataset. Moreover, DETR can be easily generalized to produce panoptic segmentation in a unified manner. We show that it significantly outperforms competitive baselines. Training code and pretrained models are available at https://github.com/facebookresearch/detr.\",\r\n    //         authors: [\"Nicolas Carion\", \"Francisco Massa\", \"Gabriel Synnaeve\", \"Nicolas Usunier\", \"Alexander Kirillov, Sergey Zagoruyko\"],\r\n    //         paper: \"https://arxiv.org/abs/2005.12872v3\",\r\n    //         published_date: \"28 May 2020\",\r\n    //         conference: {\r\n    //             name: \"ECCV 2020\",\r\n    //             paper: \"https://www.ecva.net/papers/eccv_2020/papers_ECCV/papers/123460205.pdf\",\r\n    //             abstract: \"https://www.ecva.net/papers/eccv_2020/papers_ECCV/html/832_ECCV_2020_paper.php\",\r\n    //         }\r\n    //     },\r\n    //     code: {\r\n    //         url: \"https://github.com/facebookresearch/detr\",\r\n    //         lib: \"torch\",\r\n    //         official: true,\r\n    //         colab: \"https://colab.research.google.com/github/facebookresearch/detr/blob/colab/notebooks/detr_demo.ipynb\",\r\n    //     },\r\n    //     task: {\r\n    //         featured: \"Ranked #7 on Panoptic Segmentation on COCO minival\",\r\n    //         tasks: [\"Object Detection\", \"Panoptic Segmentation\"],\r\n    //         datasets: [\"COCO\"],\r\n    //         paperswithcode: \"https://paperswithcode.com/paper/end-to-end-object-detection-with-transformers\",\r\n    //     }\r\n    // }\r\n]\r\n\r\nexport default models;","import image from './image';\r\nimport saltandpepper from './saltandpepper';\r\n\r\nimport models from './models';\r\n\r\nexport const Denoising = {\r\n    title: 'Denoising',\r\n    img: \"https://production-media.paperswithcode.com/thumbnails/task/task-0000000813-398eae41_lgoZLWN.jpg\",\r\n    imgcredit: {\r\n      name: \"Beyond a Gaussian Denoiser\",\r\n      url: \"https://arxiv.org/pdf/1608.03981v1.pdf\",\r\n    },\r\n    description: \"Denoising is the task of removing noise from an image.\",\r\n    datasets: [\"SIDD\", \"CBSD68\", \"BirdSong\", \"PolyU Dataset\", \"FMD\", \"Raider\", \"CRVD\", \"NIND\", \"TTS-Portuguese Corpus\", \"PointDenoisingBenchmark\"],\r\n    subtasks: [\r\n        image,\r\n        saltandpepper,\r\n    ],\r\n    models: models.concat(\r\n      image.models,\r\n      saltandpepper.models,\r\n    )\r\n}\r\n\r\nexport default Denoising;","export const _3d = {\r\n    title: '3D Depth Estimation',\r\n    img: \"https://production-media.paperswithcode.com/thumbnails/task/task-0000000603-3510e464.jpg\",\r\n    imgcredit: {\r\n        name: \"Monodepth2\",\r\n        url: \"https://github.com/nianticlabs/monodepth2\",\r\n    },\r\n    description: \"\",\r\n    datasets: [\"Pano3D\", \"EUEN17037_Daylight_and_View_Standard_TestDataSet\", \"DurLAR\"],\r\n    models: [\r\n        \r\n    ]\r\n}\r\n\r\nexport default _3d;","import cameramotion from './imgs/cameramotion.png';\r\n\r\nexport const DomainGeneralization = {\r\n    title: 'Depth And Camera Motion',\r\n    img: cameramotion,\r\n    imgcredit: {\r\n        name: \"Depth Prediction Without the Sensors: Leveraging Structure for Unsupervised Learning from Monocular Videos\",\r\n        url: \"https://arxiv.org/pdf/1811.06152v1.pdf\",\r\n    },\r\n    description: \"\",\r\n    datasets: [\"Face Anti-Spoofing\"],\r\n    models: [\r\n        \r\n    ]\r\n}\r\n\r\nexport default DomainGeneralization;","export const Moncular = {\r\n    title: 'Monocular Depth Estimation',\r\n    img: \"https://production-media.paperswithcode.com/thumbnails/task/task-0000000893-e0a158a0.gif\",\r\n    imgcredit: {\r\n        name: \"Defocus Deblurring Using Dual-Pixel Data\",\r\n        url: \"https://arxiv.org/abs/2005.00305\",\r\n    },\r\n    description: \"The Monocular Depth Estimation is the task of estimating scene depth using a single image.\",\r\n    datasets: [\"KITTI\", \"NYUv2\", \"Make3D\", \"Middlebury 2014\", \"DIODE\", \"ReDWeb\", \"MannequinChallenge\", \"IBims-1\", \"WSVD\", \"3D60\"],\r\n    subtasks: [\r\n\r\n    ],\r\n    models: [\r\n\r\n    ],\r\n}\r\n\r\nexport default Moncular;","export const Stereo = {\r\n    title: 'Stereo Depth Estimation',\r\n    img: \"https://production-media.paperswithcode.com/thumbnails/task/task-0000000605-d9849a91.jpg\",\r\n    imgcredit: {\r\n        name: \"DIODE: A Dense Indoor and Outdoor DEpth Dataset\",\r\n        url: \"https://arxiv.org/abs/1908.00463\",\r\n    },\r\n    descriptioncredit: {\r\n        name: \"Depth Estimation using Monocular and Stereo Cues\",\r\n        url: \"https://www.cs.cornell.edu/~asaxena/learningdepth/DepthEstimation_Saxena_IJCAI.pdf\",\r\n    },\r\n    description: \"Depth estimation in computer vision and robotics is most commonly done via stereo vision (stereop- sis), in which images from two cameras are used to triangulate and estimate distances.\",\r\n    datasets: [\"KITTI\"],\r\n    models: [\r\n        \r\n    ]\r\n}\r\n\r\nexport default Stereo;","export const StereoLidar = {\r\n    title: 'Stereo-LiDAR Fusion',\r\n    img: \"https://zswang666.github.io/Stereo-LiDAR-CCVNorm-Project-Page/resources/teaser_gif.gif\",\r\n    imgcredit: {\r\n        name: \"3D LiDAR and Stereo Fusion using Stereo Matching Network with Conditional Cost Volume Normalization\",\r\n        url: \"https://zswang666.github.io/Stereo-LiDAR-CCVNorm-Project-Page/\",\r\n    },\r\n    description: \"Depth estimation using stereo cameras and a LiDAR sensor.\",\r\n    datasets: [],\r\n    models: [\r\n        \r\n    ]\r\n}\r\n\r\nexport default StereoLidar;","export const models = [\r\n    // {\r\n    //     writer_id: 'Neuralverse',\r\n    //     title: \"DETR\",\r\n    //     subtitle: \"End-to-End Object Detection with Transformers\",\r\n    //     img: \"https://alcinos.github.io/detr_page/assets/elephants.png\",\r\n    //     imgcredit: {\r\n    //         name: \"DETR: End-to-End Object Detection With Transformers\",\r\n    //         url: \"https://alcinos.github.io/detr_page/\",\r\n    //     },\r\n    //     demo: true,\r\n    //     benchmark: true,\r\n    //     studio: true,\r\n    //     paper: {\r\n    //         name: \"End-to-End Object Detection with Transformers\",\r\n    //         img: \"https://alcinos.github.io/detr_page/assets/overview.jpg\",\r\n    //         description: \"We present a new method that views object detection as a direct set prediction problem. Our approach streamlines the detection pipeline, effectively removing the need for many hand-designed components like a non-maximum suppression procedure or anchor generation that explicitly encode our prior knowledge about the task. The main ingredients of the new framework, called DEtection TRansformer or DETR, are a set-based global loss that forces unique predictions via bipartite matching, and a transformer encoder-decoder architecture. Given a fixed small set of learned object queries, DETR reasons about the relations of the objects and the global image context to directly output the final set of predictions in parallel. The new model is conceptually simple and does not require a specialized library, unlike many other modern detectors. DETR demonstrates accuracy and run-time performance on par with the well-established and highly-optimized Faster RCNN baseline on the challenging COCO object detection dataset. Moreover, DETR can be easily generalized to produce panoptic segmentation in a unified manner. We show that it significantly outperforms competitive baselines. Training code and pretrained models are available at https://github.com/facebookresearch/detr.\",\r\n    //         authors: [\"Nicolas Carion\", \"Francisco Massa\", \"Gabriel Synnaeve\", \"Nicolas Usunier\", \"Alexander Kirillov, Sergey Zagoruyko\"],\r\n    //         paper: \"https://arxiv.org/abs/2005.12872v3\",\r\n    //         published_date: \"28 May 2020\",\r\n    //         conference: {\r\n    //             name: \"ECCV 2020\",\r\n    //             paper: \"https://www.ecva.net/papers/eccv_2020/papers_ECCV/papers/123460205.pdf\",\r\n    //             abstract: \"https://www.ecva.net/papers/eccv_2020/papers_ECCV/html/832_ECCV_2020_paper.php\",\r\n    //         }\r\n    //     },\r\n    //     code: {\r\n    //         url: \"https://github.com/facebookresearch/detr\",\r\n    //         lib: \"torch\",\r\n    //         official: true,\r\n    //         colab: \"https://colab.research.google.com/github/facebookresearch/detr/blob/colab/notebooks/detr_demo.ipynb\",\r\n    //     },\r\n    //     task: {\r\n    //         featured: \"Ranked #7 on Panoptic Segmentation on COCO minival\",\r\n    //         tasks: [\"Object Detection\", \"Panoptic Segmentation\"],\r\n    //         datasets: [\"COCO\"],\r\n    //         paperswithcode: \"https://paperswithcode.com/paper/end-to-end-object-detection-with-transformers\",\r\n    //     }\r\n    // }\r\n]\r\n\r\nexport default models;","import _3d from './3d';\r\nimport cameramotion from './cameramotion';\r\nimport monocular from './monocular';\r\nimport stereo from './stereo';\r\nimport stereolidar from './stereolidar';\r\n\r\nimport models from './models';\r\n\r\nexport const DepthEstimation = {\r\n    title: 'Depth Estimation',\r\n    img: \"https://production-media.paperswithcode.com/thumbnails/task/task-0000000605-d9849a91.jpg\",\r\n    imgcredit: {\r\n        name: \"DIODE: A Dense Indoor and Outdoor DEpth Dataset\",\r\n        url: \"https://arxiv.org/abs/1908.00463\",\r\n    },\r\n    description: \"Depth Estimation is a crucial step towards inferring scene geometry from 2D images. The goal in monocular Depth Estimation is to predict the depth value of each pixel, given only a single RGB image as input.\",\r\n    datasets: [\"Cityscapes\", \"KITTI\", \"NYUv2\", \"ScanNet\", \"Matterport3D\", \"SUNCG\", \"Middlebury\", \"TUM RGB-D\", \"Make3D\", \"Virtual KITTI\"],\r\n    subtasks: [\r\n        stereo,\r\n        monocular,\r\n        _3d,\r\n        cameramotion,\r\n        stereolidar,\r\n    ],\r\n    models: models.concat(\r\n        stereo.models,\r\n        monocular.models,\r\n        _3d.models,\r\n        cameramotion.models,\r\n        stereolidar.models,\r\n    )\r\n}\r\n\r\nexport default DepthEstimation;","export const FewShotImageClassification = {\r\n    title: 'Few-Shot Image Classification', \r\n    img: \"https://production-media.paperswithcode.com/thumbnails/task/ba39ea79-54cf-4ea2-9158-457ddebaa108.jpg\",\r\n    imgcredit: {\r\n        name: \"Learning Embedding Adaptation for Few-Shot Learning\",\r\n        url: \"https://github.com/Sha-Lab/FEAT\",\r\n    },\r\n    description: \"Few-shot image classification is the task of doing image classification with only a few examples for each category (typically < 6 examples).\",\r\n    datasets: [\"ImageNet\", \"CIFAR-100\", \"CUB-200-2011\", \"Oxford 102 Flower\", \"Caltech-256\", \"Stanford Cars\", \"AwA\", \"tieredImageNet\", \"iNaturalist\", \"AwA2\"],\r\n    models: [\r\n        \r\n    ]\r\n}\r\n\r\nexport default FewShotImageClassification;","import fewshotsegmentation from './imgs/fewshotsegmentation.png';\r\n\r\nexport const FewShotSegmentation = {\r\n    title: 'Few-Shot Semantic Segmentation',\r\n    img: fewshotsegmentation,\r\n    imgcredit: {\r\n        name: \"Cost Aggregation Is All You Need for Few-Shot Segmentation\",\r\n        url: \"https://arxiv.org/pdf/2112.11685v1.pdf\",\r\n    },\r\n    descriptioncredit: {\r\n        name: \"Cost Aggregation Is All You Need for Few-Shot Segmentation\",\r\n        url: \"https://arxiv.org/pdf/2112.11685v1.pdf\",\r\n    },\r\n    description: \"few-shot segmentation task has been introduced to address this, where only a handful of support samples are provided to make a mask prediction for a query, which mitigates the reliance on the labeled data.\",\r\n    datasets: [\"PASCAL-5i\", \"FSS-1000\"],\r\n    models: [\r\n        \r\n    ]\r\n}\r\n\r\nexport default FewShotSegmentation;","export const OneShotLearning = {\r\n    title: 'One-Shot Learning',\r\n    img: \"https://production-media.paperswithcode.com/thumbnails/task/task-0000000154-e322d1df.jpg\",\r\n    imgcredit: {\r\n        name: \"Siamese Neural Networks for One-shot Image Recognition\",\r\n        url: \"https://www.cs.cmu.edu/~rsalakhu/papers/oneshot1.pdf\",\r\n    },\r\n    description: \"One-shot learning is the task of learning information about object categories from a single training example.\",\r\n    datasets: [\"MNIST\", \"TopLogo-10\", \"TACO\"],\r\n    models: [\r\n        \r\n    ]\r\n}\r\n\r\nexport default OneShotLearning;","export const models = [\r\n    // {\r\n    //     writer_id: 'Neuralverse',\r\n    //     title: \"DETR\",\r\n    //     subtitle: \"End-to-End Object Detection with Transformers\",\r\n    //     img: \"https://alcinos.github.io/detr_page/assets/elephants.png\",\r\n    //     imgcredit: {\r\n    //         name: \"DETR: End-to-End Object Detection With Transformers\",\r\n    //         url: \"https://alcinos.github.io/detr_page/\",\r\n    //     },\r\n    //     demo: true,\r\n    //     benchmark: true,\r\n    //     studio: true,\r\n    //     paper: {\r\n    //         name: \"End-to-End Object Detection with Transformers\",\r\n    //         img: \"https://alcinos.github.io/detr_page/assets/overview.jpg\",\r\n    //         description: \"We present a new method that views object detection as a direct set prediction problem. Our approach streamlines the detection pipeline, effectively removing the need for many hand-designed components like a non-maximum suppression procedure or anchor generation that explicitly encode our prior knowledge about the task. The main ingredients of the new framework, called DEtection TRansformer or DETR, are a set-based global loss that forces unique predictions via bipartite matching, and a transformer encoder-decoder architecture. Given a fixed small set of learned object queries, DETR reasons about the relations of the objects and the global image context to directly output the final set of predictions in parallel. The new model is conceptually simple and does not require a specialized library, unlike many other modern detectors. DETR demonstrates accuracy and run-time performance on par with the well-established and highly-optimized Faster RCNN baseline on the challenging COCO object detection dataset. Moreover, DETR can be easily generalized to produce panoptic segmentation in a unified manner. We show that it significantly outperforms competitive baselines. Training code and pretrained models are available at https://github.com/facebookresearch/detr.\",\r\n    //         authors: [\"Nicolas Carion\", \"Francisco Massa\", \"Gabriel Synnaeve\", \"Nicolas Usunier\", \"Alexander Kirillov, Sergey Zagoruyko\"],\r\n    //         paper: \"https://arxiv.org/abs/2005.12872v3\",\r\n    //         published_date: \"28 May 2020\",\r\n    //         conference: {\r\n    //             name: \"ECCV 2020\",\r\n    //             paper: \"https://www.ecva.net/papers/eccv_2020/papers_ECCV/papers/123460205.pdf\",\r\n    //             abstract: \"https://www.ecva.net/papers/eccv_2020/papers_ECCV/html/832_ECCV_2020_paper.php\",\r\n    //         }\r\n    //     },\r\n    //     code: {\r\n    //         url: \"https://github.com/facebookresearch/detr\",\r\n    //         lib: \"torch\",\r\n    //         official: true,\r\n    //         colab: \"https://colab.research.google.com/github/facebookresearch/detr/blob/colab/notebooks/detr_demo.ipynb\",\r\n    //     },\r\n    //     task: {\r\n    //         featured: \"Ranked #7 on Panoptic Segmentation on COCO minival\",\r\n    //         tasks: [\"Object Detection\", \"Panoptic Segmentation\"],\r\n    //         datasets: [\"COCO\"],\r\n    //         paperswithcode: \"https://paperswithcode.com/paper/end-to-end-object-detection-with-transformers\",\r\n    //     }\r\n    // }\r\n]\r\n\r\nexport default models;","import React from 'react';\r\nimport fewshotsegmentation from './imgs/fewshotsegmentation.png';\r\n\r\nimport fewshotimageclassification from './few-shot image classification';\r\nimport fewshotsemanticsegmentation from './few-shot semantic segmentation';\r\nimport oneshotlearning from './one-shot learning';\r\n\r\nimport models from './models';\r\n\r\n\r\nexport const FewShotLearning = {\r\n    title: 'Few Shot Learning',\r\n    img: fewshotsegmentation,\r\n    imgcredit: {\r\n        name: \"Cost Aggregation Is All You Need for Few-Shot Segmentation\",\r\n        url: \"https://arxiv.org/pdf/2112.11685v1.pdf\",\r\n    },\r\n    datasets: [\"ImageNet\", \"GLUE\", \"CUB-200-2011\", \"SST\", \"MRPC\", \"PASCAL-5i\", \"Meta-Dataset\", \"MR\", \"Paris-Lille-3D\", \"SUN397\"],\r\n    description: <p><strong>Few-Shot Learning</strong> is an example of meta-learning, where a learner is trained on several related tasks, during the meta-training phase, so that it can generalize well to unseen (but related) tasks with just few examples, during the meta-testing phase. An effective approach to the Few-Shot Learning problem is to learn a common representation for various tasks and train task specific classifiers on top of this representation.</p>,\r\n    descriptioncredit: {\r\n        name: \"Penalty Method for Inversion-Free Deep Bilevel Optimization\",\r\n        url: \"https://arxiv.org/abs/1911.03432\",\r\n    },\r\n    subtasks: [\r\n        fewshotimageclassification,\r\n        fewshotsemanticsegmentation,\r\n        oneshotlearning,\r\n    ],\r\n    models: models.concat(\r\n        fewshotimageclassification.models,\r\n        fewshotsemanticsegmentation.models,\r\n        oneshotlearning.models,\r\n    )\r\n}\r\n\r\nexport default FewShotLearning;","export const KnowledgeDistillation = {\r\n    title: 'Knowledge Distillation',\r\n    img: \"https://production-media.paperswithcode.com/thumbnails/task/task-0000000951-52325f45_O0tAMly.jpg\",\r\n    description: \"Knowledge distillation is the process of transferring knowledge from a large model to a smaller one. While large models (such as very deep neural networks or ensembles of many models) have higher knowledge capacity than small models, this capacity might not be fully utilized.\",\r\n    datasets: [\"ImageNet\"],\r\n    models: [\r\n        \r\n    ]\r\n}\r\n\r\nexport default KnowledgeDistillation;","import React from 'react';\r\n\r\nexport const SelfSupervised = {\r\n    title: 'Self-Supervised Image Classification',\r\n    img: \"https://production-media.paperswithcode.com/thumbnails/task/task-0000001822-74049cbf_Ww04ZD0.jpg\",\r\n    description: <p>\r\n        This is the task of image classification using representations learnt with self-supervised learning. Self-supervised methods generally involve a pretext task that is solved to learn a good representation and a loss function to learn with. One example of a loss function is an autoencoder based loss where the goal is reconstruction of an image pixel-by-pixel. A more popular recent example is a contrastive loss, which measure the similarity of sample pairs in a representation space, and where there can be a varying target instead of a fixed target to reconstruct (as in the case of autoencoders).\r\n        <br></br>\r\n        {/* A common evaluation protocol is to train a linear classifier on top of (frozen) representations learnt by self-supervised methods. The leaderboards for the linear evaluation protocol can be found below. In practice, it is more common to fine-tune features on a downstream task. An alternative evaluation protocol therefore uses semi-supervised learning and finetunes on a % of the labels. The leaderboards for the finetuning protocol can be accessed <a href=\"https://www.neuralverse.us/neuralspace/semi-supervised-image-classification\">here</a>.\r\n        <br></br>\r\n        You may want to read some blog posts before reading the papers and checking the leaderboards:\r\n\r\n        <ul>\r\n            <li>\r\n                <a href=\"https://ankeshanand.com/blog/2020/01/26/contrative-self-supervised-learning.html\">\r\n                    Contrastive Self-Supervised Learning \r\n                </a>- Ankesh Anand\r\n            </li>\r\n            <li>\r\n                <a href=\"https://amitness.com/2020/02/illustrated-self-supervised-learning/\">\r\n                    The Illustrated Self-Supervised Learning\r\n                </a> - Amit Chaudhary</li>\r\n            <li>\r\n                <a href=\"https://www.fast.ai/2020/01/13/self_supervised/\">\r\n                    Self-supervised learning and computer vision\r\n                </a> - Jeremy Howard</li>\r\n            <li>\r\n                <a href=\"https://lilianweng.github.io/lil-log/2019/11/10/self-supervised-learning.html\">\r\n                    Self-Supervised Representation Learning\r\n                </a> - Lilian Weng\r\n            </li>\r\n        </ul>\r\n        There is also Yann LeCun's talk at AAAI-20 which you can watch <a href=\"https://vimeo.com/390347111\">here</a> (35:00+). */}\r\n    </p>,\r\n    datasets: [\"ImageNet\"],\r\n    models: [\r\n        \r\n    ]\r\n}\r\n\r\nexport default SelfSupervised;","export const Sequential = {\r\n    title: 'Sequential Image Classification',\r\n    img: \"https://production-media.paperswithcode.com/thumbnails/task/task-0000000961-6da1b793_turJtnf.jpg\",\r\n    description: \"Sequential image classification is the task of classifying a sequence of images.\",\r\n    datasets: [\"CIFAR-10\",\"MNIST\"],\r\n    models: [\r\n        \r\n    ]\r\n}\r\n\r\nexport default Sequential;","import React from 'react';\r\n\r\nexport const SemiSupervised = {\r\n    title: 'Semi-Supervised Image Classification',\r\n    img: \"https://production-media.paperswithcode.com/thumbnails/task/task-0000001329-ea5992e0_Tmg8Zxv.jpg\",\r\n    description: <p>\r\n        Semi-supervised image classification leverages unlabelled data as well as labelled data to increase classification performance. <br></br>\r\n        You may want to read some blog posts to get an overview before reading the papers and checking the leaderboards:\r\n        <ul>\r\n            <li>\r\n                <a href=\"https://ruder.io/semi-supervised/\">An overview of proxy-label approaches for semi-supervised learning</a> - Sebastian Ruder\r\n            </li>\r\n            <li>\r\n                <a href=\"https://amitness.com/2020/07/semi-supervised-learning/\">Semi-Supervised Learning in Computer Vision</a> - Amit Chaudhary\r\n            </li>\r\n        </ul>\r\n    </p>,\r\n    datasets: [\"CIFAR-10\", \"ImageNet\", \"MNIST\", \"CIFAR-100\", \"SVHN\", \"CelebA\", \"Fashion-MNIST\", \"CUB-200-2011\", \"STL-10\", \"Places\"],\r\n    models: [\r\n        \r\n    ]\r\n}\r\n\r\nexport default SemiSupervised;","export const FineGrained = {\r\n    title: 'Fine-Grained Image Classification',\r\n    img: \"https://production-media.paperswithcode.com/thumbnails/task/92cea4dd-25d0-4478-a4de-e17f4bebb32d.jpg\",\r\n    description: \"The Fine-Grained Image Classification task focuses on differentiating between hard-to-distinguish object classes, such as species of birds, flowers, or animals; and identifying the makes or models of vehicles.\",\r\n    datasets: [\"MNIST\", \"CUB-200-2011\", \"STL-10\", \"Oxford 102 Flower\", \"Caltech-101\", \"Stanford Cars\", \"Food-101\", \"iNaturalist\", \"EMNIST\", \"FGVC-Aircraft\"],\r\n    models: [\r\n        \r\n    ]\r\n}\r\n\r\nexport default FineGrained;","export const SmallData = {\r\n    title: 'Small Data Image Classification',\r\n    img: \"https://production-media.paperswithcode.com/thumbnails/task/task-0000000951-52325f45_O0tAMly.jpg\",\r\n    description: \"Supervised image classification with tens to hundreds of labeled training examples.\",\r\n    datasets: [\"CIFAR-10\", \"ImageNet\", \"CIFAR-100\", \"CUB-200-2011\", \"UCF-Crime\", \"Ecoli\", \"DEIC Benchmark\", \"TMED\", \"WikiChurches\", \"ImageNet 50 samples per class\"],\r\n    models: [\r\n        \r\n    ]\r\n}\r\n\r\nexport default SmallData;","export const FewShot = {\r\n    title: 'Few-Shot Image Classification',\r\n    img: \"https://production-media.paperswithcode.com/thumbnails/task/ba39ea79-54cf-4ea2-9158-457ddebaa108.jpg\",\r\n    description: \"Few-shot image classification is the task of doing image classification with only a few examples for each category (typically < 6 examples).\",\r\n    datasets: [\"ImageNet\", \"CIFAR-100\", \"CUB-200-2011\", \"Oxford 102 Flower\", \"Caltech-256\", \"Stanford Cars\", \"AwA\", \"tieredImageNet\", \"iNaturalist\", \"AwA2\"],\r\n    models: [\r\n        \r\n    ]\r\n}\r\n\r\nexport default FewShot;","export const models = [\r\n    {\r\n        writer_id: 'Neuralverse',\r\n        title: \"ConvNeXt\",\r\n        subtitle: \"A ConvNet for the 2020s\",\r\n        img: \"https://production-media.paperswithcode.com/thumbnails/papergithubrepo/f50e5cde-ed50-4c24-96c0-656a1abb227a.jpg\",\r\n        demo: {\r\n            type: \"classification\",\r\n            api: \"https://hf.space/gradioiframe/akhaliq/convnext/+/api/predict/\",\r\n            defaultSec: 3,\r\n        },\r\n        benchmark: true,\r\n        studio: true,\r\n        paper: {\r\n            name: \"A ConvNet for the 2020s\",\r\n            img: \"https://production-media.paperswithcode.com/thumbnails/papergithubrepo/f50e5cde-ed50-4c24-96c0-656a1abb227a.jpg\",\r\n            description: 'The \"Roaring 20s\" of visual recognition began with the introduction of Vision Transformers (ViTs), which quickly superseded ConvNets as the state-of-the-art image classification model. A vanilla ViT, on the other hand, faces difficulties when applied to general computer vision tasks such as object detection and semantic segmentation. It is the hierarchical Transformers (e.g., Swin Transformers) that reintroduced several ConvNet priors, making Transformers practically viable as a generic vision backbone and demonstrating remarkable performance on a wide variety of vision tasks. However, the effectiveness of such hybrid approaches is still largely credited to the intrinsic superiority of Transformers, rather than the inherent inductive biases of convolutions. In this work, we reexamine the design spaces and test the limits of what a pure ConvNet can achieve. We gradually \"modernize\" a standard ResNet toward the design of a vision Transformer, and discover several key components that contribute to the performance difference along the way. The outcome of this exploration is a family of pure ConvNet models dubbed ConvNeXt. Constructed entirely from standard ConvNet modules, ConvNeXts compete favorably with Transformers in terms of accuracy and scalability, achieving 87.8% ImageNet top-1 accuracy and outperforming Swin Transformers on COCO detection and ADE20K segmentation, while maintaining the simplicity and efficiency of standard ConvNets.',\r\n            authors: [\"Zhuang Liu\", \"Hanzi Mao\", \"Chao-yuan Wu\", \"Christoph Feichtenhofer\", \"Trevor Darrell\", \"Saining Xie\"],\r\n            paper: \"https://arxiv.org/abs/2201.03545v1\",\r\n            published_date: \"10 Jan 2022\",\r\n            conference: {\r\n               \r\n            }\r\n        },\r\n        code: {\r\n            url: \"https://github.com/facebookresearch/ConvNeXt\",\r\n            lib: \"pytorch\",\r\n            official: true,\r\n            colab: \"https://colab.research.google.com/drive/1CBYTIZ4tBMsVL5cqu9N_-Q3TBprqsfEO?usp=sharing\",\r\n        },\r\n        task: {\r\n            featured: \"Ranked #1 on Domain Generalization on ImageNet-Sketch (using extra training data)\",\r\n            tasks: [\"Domain Generalization\", \"Image Classification\", \"Object Detection\", \"Semantic Segmentation\"],\r\n            datasets: [\"ImageNet\", \"COCO\", \"ADE20K\", \"ImageNet-C\", \"ImageNet-A\", \"ImageNet-R\", \"ImageNet-Sketch\"],\r\n            paperswithcode: \"https://paperswithcode.com/paper/a-convnet-for-the-2020s\",\r\n        }\r\n    },\r\n    {\r\n        writer_id: 'Neuralverse',\r\n        title: \"ViT\",\r\n        subtitle: \"Transformers for Image Recognition at Scale\",\r\n        img: \"https://1.bp.blogspot.com/-_mnVfmzvJWc/X8gMzhZ7SkI/AAAAAAAAG24/8gW2AHEoqUQrBwOqjhYB37A7OOjNyKuNgCLcBGAsYHQ/s1600/image1.gif\",\r\n        imgcredit: {\r\n            name: \"Vision Transformer\",\r\n            url: \"https://ai.googleblog.com/2020/12/transformers-for-image-recognition-at.html\",\r\n        },\r\n        demo: {\r\n            type: \"classification\",\r\n            api: \"https://hf.space/gradioiframe/abidlabs/vision-transformer/+/api/predict/\",\r\n            defaultSec: 3,\r\n        },\r\n        benchmark: true,\r\n        studio: true,\r\n        paper: {\r\n            name: \"An Image is Worth 16x16 Words: Transformers for Image Recognition at Scale\",\r\n            img: \"https://1.bp.blogspot.com/-_mnVfmzvJWc/X8gMzhZ7SkI/AAAAAAAAG24/8gW2AHEoqUQrBwOqjhYB37A7OOjNyKuNgCLcBGAsYHQ/s1600/image1.gif\",\r\n            description: \"While the Transformer architecture has become the de-facto standard for natural language processing tasks, its applications to computer vision remain limited. In vision, attention is either applied in conjunction with convolutional networks, or used to replace certain components of convolutional networks while keeping their overall structure in place. We show that this reliance on CNNs is not necessary and a pure transformer applied directly to sequences of image patches can perform very well on image classification tasks. When pre-trained on large amounts of data and transferred to multiple mid-sized or small image recognition benchmarks (ImageNet, CIFAR-100, VTAB, etc.), Vision Transformer (ViT) attains excellent results compared to state-of-the-art convolutional networks while requiring substantially fewer computational resources to train.\",\r\n            authors: [\"Alexey Dosovitskiy\", \"Lucas Beyer\", \"Alexander Kolesnikov\", \"Dirk Weissenborn\", \"Xiaohua Zhai\", \"Thomas Unterthiner\", \"Mostafa Dehghani\", \"Matthias Minderer\", \"Georg Heigold\", \"Sylvain Gelly\", \"Jakob Uszkoreit, Neil Houlsby\"],\r\n            paper: \"https://arxiv.org/abs/2010.11929v2\",\r\n            published_date: \"22 Oct 2020\",\r\n            conference: {\r\n                name: \"ICLR 2021\",\r\n                paper: \"https://openreview.net/pdf?id=YicbFdNTTy\",\r\n                abstract: \"https://openreview.net/forum?id=YicbFdNTTy\",\r\n            }\r\n        },\r\n        code: {\r\n            url: \"https://github.com/google-research/vision_transformer\",\r\n            lib: \"tensorflow\",\r\n            official: true,\r\n            colab: \"https://colab.research.google.com/github/google-research/vision_transformer/blob/master/vit_jax.ipynb\",\r\n        },\r\n        task: {\r\n            featured: \"Ranked #1 on Fine-Grained Image Classification on Oxford 102 Flowers (Top 1 Accuracy metric, using extra training data)\",\r\n            tasks: [\"Document Image Classification\", \"Fine-Grained Image Classification\", \"Image Classification\"],\r\n            datasets: [\"CIFAR-10\", \"ImageNet\", \"CIFAR-100\", \"Oxford 102 Flower\", \"Tiny ImageNet\", \"JFT-300M\", \"Oxford-IIIT Pets\"],\r\n            paperswithcode: \"https://paperswithcode.com/paper/an-image-is-worth-16x16-words-transformers-1\",\r\n        }\r\n    }\r\n]\r\n\r\nexport default models;","import React from 'react';\r\nimport imageclassificationimg from './imgs/image classification.jpeg';\r\nimport knowledgeDistillation from './knowledge_distillation';\r\nimport selfsupervised from './self-supervised';\r\nimport sequentail from './sequential';\r\nimport semisupervised from './semi-supervised';\r\nimport finegrained from './finegrained';\r\nimport smalldata from './smallData';\r\nimport fewshot from './few-shot';\r\n\r\nimport models from './models';\r\n\r\n\r\nexport const ImageClassification = {\r\n    title: 'Image Classification',\r\n    img: imageclassificationimg,\r\n    description: <p><strong>Image Classification</strong> is a fundamental task that attempts to comprehend an entire image as a whole. The goal is to classify the image by assigning it to a specific label. Typically, Image Classification refers to images in which only one object appears and is analyzed. In contrast, object detection involves both classification and localization tasks, and is used to analyze more realistic cases in which multiple objects may exist in an image.</p>,\r\n    datasets: [\"CIFAR-10\", \"ImageNet\", \"MNIST\", \"CIFAR-100\", \"SVHN\", \"CelebA\", \"Fashion-MNIST\", \"CUB-200-2011\", \"STL-10\", \"Places\"],\r\n    subtasks: [\r\n        knowledgeDistillation,\r\n        selfsupervised,\r\n        sequentail,\r\n        semisupervised,\r\n        finegrained,\r\n        smalldata,\r\n        fewshot,\r\n    ],\r\n    models: models.concat(\r\n        knowledgeDistillation.models,\r\n        selfsupervised.models,\r\n        sequentail.models,\r\n        semisupervised.models,\r\n        finegrained.models,\r\n        smalldata.models,\r\n        fewshot.models,\r\n    )\r\n}\r\n\r\nexport default ImageClassification;","export const Conditional = {\r\n    title: 'Conditional Image Generation',\r\n    img: \"https://raw.githubusercontent.com/openai/pixel-cnn/master/data/pixelcnn_samples.png\",\r\n    imgcredit: {\r\n        name: \"PixelCNN++\",\r\n        url: \"https://github.com/openai/pixel-cnn\",\r\n    },\r\n    description: \"Conditional image generation is the task of generating new images from a dataset conditional on their class.\",\r\n    datasets: [\"CIFAR-10\", \"ImageNet\", \"COCO\", \"CIFAR-100\", \"Large Labelled Logo Dataset (L3D)\"],\r\n    models: [\r\n        \r\n    ]\r\n}\r\n\r\nexport default Conditional;","import React from 'react';\r\n\r\nexport const Face = {\r\n    title: 'Face Generation',\r\n    img: \"https://production-media.paperswithcode.com/thumbnails/task/task-0000000990-2d591218_2jUWb8G.jpg\",\r\n    imgcredit: {\r\n        name: \"Progressive Growing of GANs for Improved Quality, Stability, and Variation\",\r\n        url: \"https://arxiv.org/pdf/1710.10196v3.pdf\",\r\n    },\r\n    description: <p>Face generation is the task of generating (or interpolating) new faces from an existing dataset. <br></br>The state-of-the-art results for this task are located in the Image Generation parent.</p>,\r\n    datasets: [\"iFakeFaceDB\", \"VGGFace2 HQ\"],\r\n    models: [\r\n        \r\n    ]\r\n}\r\n\r\nexport default Face;","export const ImageToImageTranslation = {\r\n    title: 'Image-to-Image Translation',\r\n    img: \"https://production-media.paperswithcode.com/thumbnails/task/task-0000000007-8f43e9db_P7gy9yG.jpg\",\r\n    imgcredit: {\r\n        name: \"Unpaired Image-to-Image Translation using Cycle-Consistent Adversarial Networks\",\r\n        url: \"https://arxiv.org/pdf/1703.10593v6.pdf\",\r\n    },\r\n    description: \"Image-to-image translation is the task of taking images from one domain and transforming them so they have the style (or characteristics) of images from another domain.\",\r\n    datasets: [\"Cityscapes\", \"KITTI\", \"CelebA-HQ\", \"ADE20K\", \"SYNTHIA\", \"GTA5\", \"DeepFashion\", \"Perceptual Similarity\", \"COCO-Stuff\", \"Foggy Cityscapes\"],\r\n    models: [\r\n        \r\n    ]\r\n}\r\n\r\nexport default ImageToImageTranslation;","import models from './models';\r\n\r\nexport const TextToImage = {\r\n    title: 'Text-to-Image Generation',\r\n    img: \"https://production-media.paperswithcode.com/thumbnails/task/2689c63a-5442-4934-861a-a1d76e2a0838.jpg\",\r\n    imgcredit: {\r\n        name: \"StackGAN++: Realistic Image Synthesis with Stacked Generative Adversarial Networks\",\r\n        url: \"https://arxiv.org/pdf/1710.10916v3.pdf\",\r\n    },\r\n    descriptioncredit: {\r\n        name: \"FuseDream: A Hands-On Tutorial on This Text-to-Image Generation Tool\",\r\n        url: \"https://analyticsindiamag.com/fusedream-a-hands-on-tutorial-on-this-text-to-image-generation-tool/#:~:text=Text%2Dto%2Dimage%20generation%2C,they%20should%20be%20semantically%20related.\",\r\n    },\r\n    description: \"Text-to-image generation, which generates realistic images that are semantically related to a given text input, is a landmark task in multi-modal machine learning. This is a difficult task because the generative model must comprehend the text, image and how they should be semantically related.\",\r\n    datasets: [\"COCO\", \"CUB-200-2011\", \"Oxford 102 Flower\", \"100DOH\", \"Multi-Modal CelebA-HQ\"],\r\n    models: models\r\n}\r\n\r\nexport default TextToImage;","import articles from './articles';\r\n\r\nexport const models = [\r\n    {\r\n        writer_id: 'Neuralverse',\r\n        title: \"DALL_E\",\r\n        subtitle: \"Creating Images from Text\",\r\n        img: \"https://cdn.openai.com/research-covers/dall-e/2x-no-mark.jpg\",\r\n        imgcredit: {\r\n            name: \"DALL·E: Creating Images from Text\",\r\n            url: \"https://openai.com/blog/dall-e/\",\r\n        },\r\n        // demo: {\r\n        //     title: \"DALL·E mini\",\r\n        //     subtitle: \"Generate images from text\",\r\n        //     querytitle: \"What do you want to see?\",\r\n        //     type: \"image-generation/texttoimage\",\r\n        //     api: \"https://hf.space/streamlitiframe/flax-community/dalle-mini/+\",\r\n        //     defaultSec: 10,\r\n        // },\r\n        paper: {\r\n            name: \"Zero-Shot Text-to-Image Generation\",\r\n            paper: \"https://arxiv.org/abs/2102.12092\",\r\n            img: \"https://cdn.openai.com/research-covers/dall-e/2x-no-mark.jpg\",\r\n            description: \"Text-to-image generation has traditionally focused on finding better modeling assumptions for training on a fixed dataset. These assumptions might involve complex architectures, auxiliary losses, or side information such as object part labels or segmentation masks supplied during training. We describe a simple approach for this task based on a transformer that autoregressively models the text and image tokens as a single stream of data. With sufficient data and scale, our approach is competitive with previous domain-specific models when evaluated in a zero-shot fashion.\",\r\n            authors: [\"Aditya Ramesh, Mikhail Pavlov, Gabriel Goh, Scott Gray, Chelsea Voss, Alec Radford, Mark Chen, Ilya Sutskever\"],\r\n            published_date: \"24 Feb 2021\",\r\n        },\r\n        benchmark: false,\r\n        studio: false,\r\n        code: {\r\n            url: \"https://github.com/openai/DALL-E\",\r\n            lib: \"pytorch\",\r\n            official: true,\r\n            colab: \"https://colab.research.google.com/gist/afiaka87/b29213684a1dd633df20cab49d05209d/train_dalle_pytorch.ipynb\",\r\n        },\r\n        task: {\r\n            tasks: [\"Image Generation\", \"Text-to-Image Generation\", \"Zero-Shot Text-to-Image Generation\"],\r\n            datasets: [\"ImageNet\", \"COCO\", \"Conceptual Captions\", \"YFCC100M\"],\r\n        },\r\n        articles: articles,\r\n    },\r\n]\r\n\r\nexport default models;","export const articles = [\r\n    {\r\n        title: \"Title\",\r\n    }\r\n]\r\n\r\nexport default articles;","import React from 'react';\r\n\r\nexport const ImageImpainting = {\r\n    title: 'Image Inpainting',\r\n    img: \"https://production-media.paperswithcode.com/thumbnails/task/task-0000000709-54774675.jpg\",\r\n    imgcredit: {\r\n        name: \"High-Resolution Image Inpainting with Iterative Confidence Feedback and Guided Upsampling\",\r\n        url: \"https://arxiv.org/pdf/2005.11742.pdf\",\r\n    },\r\n    description: <p><strong>Image Inpainting</strong> is a task of reconstructing missing regions in an image. It is an important problem in computer vision and an essential functionality in many imaging and graphics applications, e.g. object removal, image restoration, manipulation, re-targeting, compositing, and image-based rendering.</p>,\r\n    datasets: [\"ImageNet\", \"Places\", \"FFHQ\", \"CelebA-HQ\", \"ApolloScape\", \"Places365\", \"Fashion-Gen\", \"CASIA V2\", \"FVI\", \"FDF\"],\r\n    models: [\r\n        \r\n    ]\r\n}\r\n\r\nexport default ImageImpainting;","import jojo from './imgs/jojo.png';\r\n\r\nexport const models = [\r\n    {\r\n        writer_id: 'Neuralverse',\r\n        title: \"ArcaneGAN\",\r\n        img: \"https://user-images.githubusercontent.com/11751592/144984243-6387263b-0827-478a-ac1e-1ee93f9ddec6.jpg\",\r\n        imgcredit: {\r\n            name: \"https://github.com/Sxela/ArcaneGAN\",\r\n            url: \"https://github.com/Sxela/ArcaneGAN\",\r\n        },\r\n        demo: {\r\n            type: \"image-generation/imagetoimage\",\r\n            api: \"https://hf.space/gradioiframe/akhaliq/ArcaneGAN/+/api/predict/\",\r\n            defaultSec: 10,\r\n            models: ['version 0.2', 'version 0.3', 'version 0.4']\r\n        },\r\n        paper: {\r\n            type: \"nopaper\",\r\n            name: \"ArcaneGAN\",\r\n            description: \"\",\r\n            authors: [\"Alex Spirin\"],\r\n        },\r\n        benchmark: false,\r\n        studio: false,\r\n        code: {\r\n            url: \"https://github.com/Sxela/ArcaneGAN\",\r\n            lib: \"pytorch\",\r\n            official: true,\r\n            colab: \"https://colab.research.google.com/drive/1r1hhciakk5wHaUn1eJk7TP58fV9mjy_W\",\r\n        },\r\n        task: {\r\n            tasks: [\"Image Generation\"],\r\n            datasets: [],\r\n        }\r\n    },\r\n    {\r\n        writer_id: 'Neuralverse',\r\n        title: \"JoJoGAN\",\r\n        subtitle: \"One Shot Face Stylization\",\r\n        img: jojo,\r\n        demo: {\r\n            type: \"image-generation/imagetoimage\",\r\n            api: \"https://hf.space/gradioiframe/akhaliq/JoJoGAN/+/api/predict/\",\r\n            defaultSec: 10,\r\n            models: ['JoJo', 'Disney', 'Jinx', 'Caitlyn', 'Yasuho', 'Arcane Multi', 'Art', 'Spider-Verse']\r\n        },\r\n        benchmark: false,\r\n        studio: false,\r\n        paper: {\r\n            name: \"JoJoGAN: One Shot Face Stylization\",\r\n            img: jojo,\r\n            description: \"A style mapper applies some fixed style to its input images (so, for example, taking faces to cartoons). This paper describes a simple procedure -- JoJoGAN -- to learn a style mapper from a single example of the style. JoJoGAN uses a GAN inversion procedure and StyleGAN's style-mixing property to produce a substantial paired dataset from a single example style. The paired dataset is then used to fine-tune a StyleGAN. An image can then be style mapped by GAN-inversion followed by the fine-tuned StyleGAN. JoJoGAN needs just one reference and as little as 30 seconds of training time. JoJoGAN can use extreme style references (say, animal faces) successfully. Furthermore, one can control what aspects of the style are used and how much of the style is applied. Qualitative and quantitative evaluation show that JoJoGAN produces high quality high resolution images that vastly outperform the current state-of-the-art.\",\r\n            authors: [\"Min Jin Chong\", \"David Forsyth\"],\r\n            paper: \"https://arxiv.org/abs/2112.11641v2\",\r\n            published_date: \"22 Dec 2021\",\r\n        },\r\n        code: {\r\n            url: \"https://github.com/mchong6/JoJoGAN\",\r\n            lib: \"pytorch\",\r\n            official: true,\r\n            colab: \"https://colab.research.google.com/github/mchong6/JoJoGAN/blob/main/stylize.ipynb\",\r\n        },\r\n        task: {\r\n            tasks: [\"Image Stylization\", \"One-Shot Face Stylization\"],\r\n            datasets: [],\r\n            paperswithcode: \"https://paperswithcode.com/paper/jojogan-one-shot-face-stylization-1\",\r\n        }\r\n    }\r\n]\r\n\r\nexport default models;","import React from 'react';\r\nimport conditional from './conditional';\r\nimport face from './face';\r\nimport imagetoimagetranslation from \"./imagetoimagetranslation\";\r\nimport texttoimage from './texttoimage';\r\nimport imageinpaiting from './image_inpainting';\r\n\r\nimport models from './models';\r\n\r\nexport const ImageGeneration = {\r\n    title: 'Image Generation',\r\n    img: \"https://raw.githubusercontent.com/openai/pixel-cnn/master/data/pixelcnn_samples.png\",\r\n    imgcredit: {\r\n        name: \"PixelCNN++\",\r\n        url: \"https://github.com/openai/pixel-cnn\",\r\n    },\r\n    description: <p>Image generation (synthesis) is the task of generating new images from an existing dataset.\r\n    <ul>\r\n    <li>Unconditional generation refers to generating samples unconditionally from the dataset, i.e. </li>\r\n    <li><a href=\"https://neuralverse.us/space/conditional-image-generation\">Conditional image generation</a> (subtask) refers to generating samples conditionally from the dataset, based on a label, i.e. .</li>\r\n    </ul>\r\n    In this section, you can find state-of-the-art leaderboards for unconditional generation. For conditional generation, and other types of image generations, refer to the subtasks.</p>,\r\n    datasets: [\"CIFAR-10\", \"ImageNet\", \"MNIST\", \"CIFAR-100\", \"Cityscapes\", \"CelebA\", \"Fashion-MNIST\", \"CUB-200-2011\", \"STL-10\", \"LSUN\"],\r\n    subtasks: [\r\n        imagetoimagetranslation,\r\n        imageinpaiting,\r\n        conditional,\r\n        face,\r\n        texttoimage\r\n    ],\r\n    models: models.concat(\r\n        imagetoimagetranslation.models,\r\n        imageinpaiting.models,\r\n        conditional.models,\r\n        face.models,\r\n        texttoimage.models\r\n    )\r\n}\r\n\r\nexport default ImageGeneration;","import models from \"./models\";\r\n\r\nexport const RealTime = {\r\n    title: 'Real-Time Object Detection',\r\n    img: \"https://miro.medium.com/max/3600/1*QOGcvHbrDZiCqTG6THIQ_w.png\",\r\n    imgcredit: \"https://jonathan-hui.medium.com/real-time-object-detection-with-yolo-yolov2-28b1b93e2088\",\r\n    description: \"Real-time object detection is the task of doing object detection in real-time with fast inference while maintaining a base level of accuracy.\",\r\n    datasets: [\"COCO\", \"PASCAL VOC\", \"PASCAL VOC 2007\", \"Kvasir-SEG\", \"Kvasir\", \"Kvasir-Instrument\", \"Endotect Polyp Segmentation Challenge Dataset\", \"Hyper-Kvasir Dataset\"],\r\n    models: models,\r\n}\r\n\r\nexport default RealTime;","import yolov3img from './imgs/yolov3.png';\r\n\r\nexport const models = [\r\n    {\r\n        title: \"YOLOv3\",\r\n        subtitle: \"An Incremental Improvement\",\r\n        img: yolov3img,\r\n        demo: {\r\n            type: \"object-detection\",\r\n            api: \"https://hf.space/gradioiframe/akhaliq/yolov3/+/api/predict/\",\r\n            defaultSec: 5,\r\n        },\r\n        benchmark: false,\r\n        studio: false,\r\n        paper: {\r\n            name: \"YOLOv3: An Incremental Improvement\",\r\n            img: \"\",\r\n            description: \"We present some updates to YOLO! We made a bunch of little design changes to make it better. We also trained this new network that's pretty swell. It's a little bigger than last time but more accurate. It's still fast though, don't worry. At 320x320 YOLOv3 runs in 22 ms at 28.2 mAP, as accurate as SSD but three times faster. When we look at the old .5 IOU mAP detection metric YOLOv3 is quite good. It achieves 57.9 mAP@50 in 51 ms on a Titan X, compared to 57.5 mAP@50 in 198 ms by RetinaNet, similar performance but 3.8x faster. As always, all the code is online at https://pjreddie.com/yolo/\",\r\n            authors: [\"Joseph Redmon\", \"Ali Farhadi\"],\r\n            paper: \"https://arxiv.org/pdf/1804.02767v1\",\r\n            published_date: \"8 Apr 2018\",\r\n        },\r\n        code: {\r\n            url: \"https://github.com/AlexeyAB/darknet\",\r\n            official: true,\r\n            lib: \"\",\r\n        },\r\n        task:{\r\n            tasks: [\"Object Detection\", \"Real-Time Object Detection\"],\r\n            datasets: [\"COCO\"],\r\n            paperswithcode: \"\",\r\n        },\r\n    }\r\n];\r\n\r\nexport default models;","export const Fewshot = {\r\n    title: 'Few-Shot Object Detection',\r\n    img: \"https://production-media.paperswithcode.com/thumbnails/task/79abe44f-f4d3-493a-a585-479607196833.jpg\",\r\n    imgcredit: \"https://jonathan-hui.medium.com/real-time-object-detection-with-yolo-yolov2-28b1b93e2088\",\r\n    description: 'Target: To detect objects of novel categories with just a few training samples. A clear explanation of the few-shot object detection task and its differences with few-shot classification can be found in \"A Survey of Self-Supervised and Few-Shot Object Detection\": https://gabrielhuang.github.io/fsod-survey/',\r\n    datasets: [\"COCO\", \"LVIS\", \"FSOD\", \"LOGO-Net\"],\r\n    models: [\r\n       \r\n    ]\r\n}\r\n\r\nexport default Fewshot;","export const RGBSalient = {\r\n    title: 'RGB-D Salient Object Detection',\r\n    img: \"https://production-media.paperswithcode.com/thumbnails/task/task-0000000742-bab03b67.jpg\",\r\n    imgcredit: {\r\n        name: \"Attentive Feedback Network for Boundary-Aware Salient Object Detection\",\r\n        url: \"https://openaccess.thecvf.com/content_CVPR_2019/papers/Feng_Attentive_Feedback_Network_for_Boundary-Aware_Salient_Object_Detection_CVPR_2019_paper.pdf\",\r\n    },\r\n    description: \"RGB Salient object detection is a task-based on a visual attention mechanism, in which algorithms aim to explore objects or regions more attentive than the surrounding areas on the scene or RGB images.\",\r\n    datasets: [\"PASCAL-S\", \"HKU-IS\", \"DUTS\", \"DUT-OMRON\", \"ISTD\", \"SOC\", \"ECSSD\", \"HS-SOD\", \"VT5000\", \"Salient Object Subitizing Dataset\"],\r\n    models: [\r\n        \r\n    ]\r\n}\r\n\r\nexport default RGBSalient;","export const RGBDSalient = {\r\n    title: 'RGB Salient Object Detection',\r\n    img: \"https://production-media.paperswithcode.com/thumbnails/task/task-0000001687-6a8a8e68_pk6rhSI.jpg\",\r\n    imgcredit: {\r\n        name: \"Rethinking RGB-D Salient Object Detection: Models, Data Sets, and Large-Scale Benchmarks, TNNLS20\",\r\n        url: \"https://ieeexplore.ieee.org/abstract/document/9107477\",\r\n    },\r\n    description: \"RGB-D Salient object detection (SOD) aims at distinguishing the most visually distinctive objects or regions in a scene from the given RGB and Depth data. It has a wide range of applications, including video/image segmentation, object recognition, visual tracking, foreground maps evaluation, image retrieval, content-aware image editing, information discovery, photosynthesis, and weakly supervised semantic segmentation. Here, depth information plays an important complementary role in finding salient objects. Online benchmark: http://dpfan.net/d3netbenchmark.\",\r\n    datasets: [\"NLPR\", \"LFSD\", \"NJU2K\", \"SIP\", \"DES\", \"ReDWeb-S\"],\r\n    models: [\r\n        \r\n    ]\r\n}\r\n\r\nexport default RGBDSalient;","export const Video = {\r\n    title: 'Video Object Detection',\r\n    img: \"https://production-media.paperswithcode.com/thumbnails/task/task-0000000745-802706d9.jpg\",\r\n    imgcredit: {\r\n        name: \"Learning Motion Priors for Efficient Video Object Detection\",\r\n        url: \"https://arxiv.org/pdf/1911.05253v1.pdf\",\r\n    },\r\n    description: \"Video object detection is the task of detecting objects from a video as opposed to images.\",\r\n    datasets: [\"DAVIS\", \"DAVIS 2017\", \"YT-BB\", \"SYNTHIA-AL\", \"OAK\", \"THGP\"],\r\n    models: [\r\n    \r\n    ]\r\n}\r\n\r\nexport default Video;","import models from './models';\r\n\r\nexport const _3d = {\r\n    title: '3D Object Detection',\r\n    img: \"https://production-media.paperswithcode.com/thumbnails/task/task-0000000785-645bd197.jpg\",\r\n    imgcredit: {\r\n        name: \"AVOD\",\r\n        url: \"https://github.com/kujason/avod\",\r\n    },\r\n    description: \"2D object detection classifies the object category and estimates oriented 2D bounding boxes of physical objects from 3D sensor data.\",\r\n    datasets: [\"KITTI\", \"NYUv2\", \"ScanNet\", \"nuScenes\", \"SUN RGB-D\", \"S3DIS\", \"Argoverse\", \"Waymo Open Dataset\", \"H3D\", \"A*3D\"],\r\n    models: models\r\n}\r\n\r\nexport default _3d;","export const models = [\r\n    {\r\n        writer_id: 'Neuralverse',\r\n        title: \"Objectron\",\r\n        subtitle: \"A Large Scale Dataset of Object-Centric Videos in the Wild with Pose Annotations\",\r\n        img: \"https://github.com/google-research-datasets/Objectron/blob/master/docs/images/objectron_samples.gif?raw=true\",\r\n        imgcredit: {\r\n            name: \"Objectron\",\r\n            url: \"https://github.com/google-research-datasets/Objectron\",\r\n        },\r\n        demo: false,\r\n        benchmark: true,\r\n        studio: true,\r\n        paper: {\r\n            name: \"Objectron: A Large Scale Dataset of Object-Centric Videos in the Wild with Pose Annotations\",\r\n            img: \"https://github.com/google-research-datasets/Objectron/blob/master/docs/images/objectron_samples.gif?raw=true\",\r\n            description: \"3D object detection has recently become popular due to many applications in robotics, augmented reality, autonomy, and image retrieval. We introduce the Objectron dataset to advance the state of the art in 3D object detection and foster new research and applications, such as 3D object tracking, view synthesis, and improved 3D shape representation. The dataset contains object-centric short videos with pose annotations for nine categories and includes 4 million annotated images in 14,819 annotated videos. We also propose a new evaluation metric, 3D Intersection over Union, for 3D object detection. We demonstrate the usefulness of our dataset in 3D object detection tasks by providing baseline models trained on this dataset. Our dataset and evaluation source code are available online at http://www.objectron.dev\",\r\n            authors: [\"Adel Ahmadyan\", \"Liangkai Zhang\", \"Jianing Wei\", \"Artsiom Ablavatski\", \"Matthias Grundmann\"],\r\n            paper: \"https://arxiv.org/abs/2012.09988v1\",\r\n            published_date: \"18 Dec 2020\",\r\n            conference: {\r\n                name: \"CVPR 2021\",\r\n                paper: \"https://openaccess.thecvf.com/content/CVPR2021/papers/Ahmadyan_Objectron_A_Large_Scale_Dataset_of_Object-Centric_Videos_in_the_CVPR_2021_paper.pdf\",\r\n                abstract: \"https://openaccess.thecvf.com/content/CVPR2021/html/Ahmadyan_Objectron_A_Large_Scale_Dataset_of_Object-Centric_Videos_in_the_CVPR_2021_paper.html\",\r\n            }\r\n        },\r\n        code: {\r\n            url: \"https://github.com/google-research-datasets/Objectron\",\r\n            lib: \"tensorflow\",\r\n            official: true,\r\n            colab: \"\",\r\n        },\r\n        task: {\r\n            featured: \"Ranked #2 on Monocular 3D Object Detection on Google Objectron\",\r\n            tasks: [\"3D Object Detection\", \"3D Object Tracking\", \"3D Shape Representation\", \"Image Retrieval\", \"Monocular 3D Object Detection\", \"Object Detection\", \"Object Tracking\"],\r\n            datasets: [\" Objectron\", \"ImageNet\", \"ShapeNet\", \"LINEMOD\"],\r\n            paperswithcode: \"https://paperswithcode.com/paper/objectron-a-large-scale-dataset-of-object\",\r\n        }\r\n    }\r\n]\r\n\r\nexport default models;","export const models = [\r\n    {\r\n        writer_id: 'Neuralverse',\r\n        title: \"DETR\",\r\n        subtitle: \"End-to-End Object Detection with Transformers\",\r\n        img: \"https://alcinos.github.io/detr_page/assets/elephants.png\",\r\n        imgcredit: {\r\n            name: \"DETR: End-to-End Object Detection With Transformers\",\r\n            url: \"https://alcinos.github.io/detr_page/\",\r\n        },\r\n        demo: {\r\n            type: \"object-detection\",\r\n            api: \"https://hf.space/gradioiframe/akhaliq/DETR/+/api/predict/\",\r\n            defaultSec: 3,\r\n        },\r\n        benchmark: true,\r\n        studio: true,\r\n        paper: {\r\n            name: \"End-to-End Object Detection with Transformers\",\r\n            img: \"https://alcinos.github.io/detr_page/assets/overview.jpg\",\r\n            description: \"We present a new method that views object detection as a direct set prediction problem. Our approach streamlines the detection pipeline, effectively removing the need for many hand-designed components like a non-maximum suppression procedure or anchor generation that explicitly encode our prior knowledge about the task. The main ingredients of the new framework, called DEtection TRansformer or DETR, are a set-based global loss that forces unique predictions via bipartite matching, and a transformer encoder-decoder architecture. Given a fixed small set of learned object queries, DETR reasons about the relations of the objects and the global image context to directly output the final set of predictions in parallel. The new model is conceptually simple and does not require a specialized library, unlike many other modern detectors. DETR demonstrates accuracy and run-time performance on par with the well-established and highly-optimized Faster RCNN baseline on the challenging COCO object detection dataset. Moreover, DETR can be easily generalized to produce panoptic segmentation in a unified manner. We show that it significantly outperforms competitive baselines. Training code and pretrained models are available at https://github.com/facebookresearch/detr.\",\r\n            authors: [\"Nicolas Carion\", \"Francisco Massa\", \"Gabriel Synnaeve\", \"Nicolas Usunier\", \"Alexander Kirillov, Sergey Zagoruyko\"],\r\n            paper: \"https://arxiv.org/abs/2005.12872v3\",\r\n            published_date: \"28 May 2020\",\r\n            conference: {\r\n                name: \"ECCV 2020\",\r\n                paper: \"https://www.ecva.net/papers/eccv_2020/papers_ECCV/papers/123460205.pdf\",\r\n                abstract: \"https://www.ecva.net/papers/eccv_2020/papers_ECCV/html/832_ECCV_2020_paper.php\",\r\n            }\r\n        },\r\n        code: {\r\n            url: \"https://github.com/facebookresearch/detr\",\r\n            lib: \"torch\",\r\n            official: true,\r\n            colab: \"https://colab.research.google.com/github/facebookresearch/detr/blob/colab/notebooks/detr_demo.ipynb\",\r\n        },\r\n        task: {\r\n            featured: \"Ranked #7 on Panoptic Segmentation on COCO minival\",\r\n            tasks: [\"Object Detection\", \"Panoptic Segmentation\"],\r\n            datasets: [\"COCO\"],\r\n            paperswithcode: \"https://paperswithcode.com/paper/end-to-end-object-detection-with-transformers\",\r\n        }\r\n    }\r\n]\r\n\r\nexport default models;","import objectdetectionimg from './imgs/objectdetection.jpg';\r\n\r\nimport real_time from './real-time';\r\nimport fewshot from './fewshot';\r\nimport rgbsailent from './rgb-salient';\r\nimport rgbdsalient from './rgb-d_sailent';\r\nimport video from './video';\r\nimport _3d from './3d';\r\n\r\nimport models from './models';\r\n\r\nexport const ObjectDetection = {\r\n    title: 'Object Detection',\r\n    img: objectdetectionimg,\r\n    description: \"Object detection is the task of detecting instances of objects of a certain class within an image. The state-of-the-art methods can be categorized into two main types: one-stage methods and two stage-methods. One-stage methods prioritize inference speed, and example models include YOLO, SSD and RetinaNet. Two-stage methods prioritize detection accuracy, and example models include Faster R-CNN, Mask R-CNN and Cascade R-CNN. The most popular benchmark is the MSCOCO dataset. Models are typically evaluated according to a Mean Average Precision metric.\",\r\n    datasets: [\"COCO\", \"KITTI\", \"Visual Genome\", \"nuScenes\", \"MPII\", \"SUN RGB-D\", \"PASCAL VOC\", \"PASCAL3D+\", \"DAVIS 2016\", \"LabelMe\"],\r\n    subtasks: [\r\n        real_time,\r\n        _3d,\r\n        fewshot,\r\n        rgbsailent, \r\n        rgbdsalient,\r\n        video,\r\n    ],\r\n    models: models.concat(\r\n        real_time.models,\r\n        _3d.models,\r\n        fewshot.models,\r\n        rgbsailent.models,\r\n        rgbdsalient.models,\r\n        video.models,\r\n    )\r\n}\r\n\r\nexport default ObjectDetection;","export const _3dSegmentation = {\r\n    title: '3D Segmentation',\r\n    img: \"https://production-media.paperswithcode.com/thumbnails/task/task-0000001516-2ef108ab_EO6cyBl.jpg\",\r\n    description: 'With 3D image segmentation, data acquired from 3D imaging modalities such as Computed Tomography (CT), Micro-Computed Tomography (micro-CT or X-ray) or Magnetic Resonance Imaging (MRI) scanners is labelled to isolate regions of interest. These regions represent any subject or sub-region within the scan that will later be scrutinized. This could facilitate analysis of part of the human body, or a specific feature within an industrial component or assembly.',\r\n    datasets: [\"nuScenes\", \"S3DIS\", \"SemanticKITTI\", \"PartNet\", \"SensatUrban\", \"SemanticPOSS\", \"Paris-Lille-3D\", \"RELLIS-3D\", \"3RScan\", \"KiTS19\"],\r\n    models: [\r\n\r\n    ]\r\n}\r\n\r\n//description from https://www.synopsys.com/glossary/what-is-3d-image-segmentation.html#:~:text=With%203D%20image%20segmentation%2C%20data,to%20isolate%20regions%20of%20interest.\r\n\r\nexport default _3dSegmentation;","export const PanopticSegmentation = {\r\n    title: 'Panoptic Segmentation',\r\n    img: \"https://production-media.paperswithcode.com/thumbnails/task/task-0000000895-b36c6778.jpg\",\r\n    description: 'Panoptic segmentation unifies the typically distinct tasks of semantic segmentation (assign a class label to each pixel) and instance segmentation (detect and segment each object instance).',\r\n    datasets: [\r\n      \"COCO\", \"Cityscapes\", \"KITTI\", \"ScanNet\", \"SemanticKITTI\", \"BDD100K\", \"Mapillary Vistas Dataset\", \"Cityscapes Panoptic Parts\", \"Pascal Panoptic Parts\", \"Panoptic nuScenes\"],\r\n    models: [\r\n        \r\n    ]\r\n}\r\n\r\nexport default PanopticSegmentation;","export const SceneSegmentation = {\r\n    title: 'Scene Segmentation',\r\n    img: \"https://production-media.paperswithcode.com/thumbnails/task/task-0000000883-587b0e4d.jpg\",\r\n    description: 'Scene segmentation is the task of splitting a scene into its various object components.',\r\n    datasets: [\"NYUv2\", \"ScanNet\", \"SUN RGB-D\", \"Berkeley DeepDrive Video\", \"Mila Simulated Floods\"],\r\n    models: [\r\n    ]\r\n}\r\n\r\nexport default SceneSegmentation;","export const MedicalSegmentation = {\r\n    title: 'Medical Segmentation',\r\n    img: \"https://production-media.paperswithcode.com/thumbnails/task/task-0000000876-6fbe75a2_gBlYteG.jpg\",\r\n    description: 'Semantic segmentation, or image segmentation, is the task of clustering parts of an image together which belong to the same object class. It is a form of pixel-level prediction because each pixel in an image is classified according to a category. Some example benchmarks for this task are Cityscapes, PASCAL VOC and ADE20K. Models are usually evaluated with the Mean Intersection-Over-Union (Mean IoU) and Pixel Accuracy metrics.',\r\n    datasets: [\"DRIVE\", \"Medical Segmentation Decathlon\", \"PROMISE12\", \"GlaS\", \"Kvasir-SEG\", \"2018 Data Science Bowl\", \"CHASE_DB1\", \"Kvasir\", \"CVC-ClinicDB\", \"ACDC\"],\r\n    models: [\r\n\r\n    ]\r\n}\r\n\r\nexport default MedicalSegmentation;","export const WeaklySupervised = {\r\n    title: 'Weakly-Supervised Semantic Segmentation',\r\n    img: \"https://production-media.paperswithcode.com/thumbnails/task/task-0000000378-6571e9af.jpg\",\r\n    description: 'The semantic segmentation task is to assign a label from a label set to each pixel in an image. In the case of fully supervised setting, the dataset consists of images and their corresponding pixel-level class-specific annotations (expensive pixel-level annotations). However, in the weakly-supervised setting, the dataset consists of images and corresponding annotations that are relatively easy to obtain, such as tags/labels of objects present in the image.',\r\n    datasets: [\"PASCAL VOC\", \"ScribbleSup\", \"SEN12MS\", \"ACDC Scribbles\"],\r\n    models: [\r\n    ]\r\n}\r\n\r\nexport default WeaklySupervised;","import models from './models';\r\n\r\nexport const backgroundRemover = {\r\n    title: 'Background Remove',\r\n    img: \"https://raw.githubusercontent.com/xuebinqin/DIS/main/figures/peacock.jpg\",\r\n    description: 'Semantic segmentation, or image segmentation, is the task of clustering parts of an image together which belong to the same object class. It is a form of pixel-level prediction because each pixel in an image is classified according to a category. Some example benchmarks for this task are Cityscapes, PASCAL VOC and ADE20K. Models are usually evaluated with the Mean Intersection-Over-Union (Mean IoU) and Pixel Accuracy metrics.',\r\n    datasets: [\"Cityscapes\", \"KITTI\", \"ShapeNet\", \"NYUv2\", \"ScanNet\", \"ADE20K\", \"DAVIS\", \"SYNTHIA\", \"SUN RGB-D\", \"GTA5\"],\r\n    models: models\r\n}\r\n\r\nexport default backgroundRemover;","export const models = [\r\n    {\r\n        title: \"DIS\",\r\n        subtitle: \"Highly Accurate Dichotomous Image Segmentation\",\r\n        img: 'https://raw.githubusercontent.com/xuebinqin/DIS/main/figures/dis5k-v1-sailship.jpeg',\r\n        demo: {\r\n            type: \"object-detection\",\r\n            api: \"https://hf.space/embed/ECCV2022/dis-background-removal/+/api/predict\",\r\n            defaultSec: 5,\r\n        },\r\n        benchmark: false,\r\n        studio: false,\r\n        paper: {\r\n            name: \"DIS: Highly Accurate Dichotomous Image Segmentation\",\r\n            img: \"\",\r\n            description: \"We present a systematic study on a new task called dichotomous image segmentation (DIS) , which aims to segment highly accurate objects from natural images. To this end, we collected the first large-scale DIS dataset, called DIS5K, which contains 5,470 high-resolution (e.g., 2K, 4K or larger) images covering camouflaged, salient, or meticulous objects in various backgrounds. DIS is annotated with extremely fine-grained labels. Besides, we introduce a simple intermediate supervision baseline (IS-Net) using both feature-level and mask-level guidance for DIS model training. IS-Net outperforms various cutting-edge baselines on the proposed DIS5K, making it a general self-learned supervision network that can facilitate future research in DIS. Further, we design a new metric called human correction efforts (HCE) which approximates the number of mouse clicking operations required to correct the false positives and false negatives. HCE is utilized to measure the gap between models and real-world applications and thus can complement existing metrics. Finally, we conduct the largest-scale benchmark, evaluating 16 representative segmentation models, providing a more insightful discussion regarding object complexities, and showing several potential applications (e.g., background removal, art design, 3D reconstruction). Hoping these efforts can open up promising directions for both academic and industries.\",\r\n            authors: [\"Xuebin Qin\", \"Luc Van Gool\"],\r\n            paper: \"https://arxiv.org/pdf/1804.02767v1\",\r\n            published_date: \"6 Mar 2022\",\r\n            conference: {\r\n                name: \"ECCV 2022\",\r\n                paper: \"https://arxiv.org/pdf/2203.03041.pdf\",\r\n                abstract: \"https://arxiv.org/abs/2203.03041v4\",\r\n            }\r\n        },\r\n        code: {\r\n            url: \"https://github.com/xuebinqin/DIS\",\r\n            official: true,\r\n            lib: \"\",\r\n        },\r\n        task:{\r\n            tasks: [\"3D Reconstruction\", \"Image Segmentation\", \"Semantic Segmentation\"],\r\n            datasets: [\"PASCAL-S\"],\r\n            paperswithcode: \"https://paperswithcode.com/paper/highly-accurate-dichotomous-image\",\r\n        },\r\n    }\r\n];\r\n\r\nexport default models;","export const models = [\r\n    {\r\n        writer_id: 'Neuralverse',\r\n        title: \"U-Net\",\r\n        subtitle: \"Convolutional Networks for Biomedical Image Segmentation\",\r\n        img: \"https://www.researchgate.net/profile/Yanfeng-Liu-5/publication/338531111/figure/fig3/AS:846138370433024@1578746516002/Semantic-segmentation-on-a-street-view-in-the-CityScape-dataset-3.jpg\",\r\n        demo: false,\r\n        benchmark: true,\r\n        studio: true,\r\n        paper: {\r\n            name: \"U-Net: Convolutional Networks for Biomedical Image Segmentation\",\r\n            img: \"https://production-media.paperswithcode.com/thumbnails/paper/1505.04597.jpg\",\r\n            description: 'There is large consent that successful training of deep networks requires many thousand annotated training samples. In this paper, we present a network and training strategy that relies on the strong use of data augmentation to use the available annotated samples more efficiently. The architecture consists of a contracting path to capture context and a symmetric expanding path that enables precise localization. We show that such a network can be trained end-to-end from very few images and outperforms the prior best method (a sliding-window convolutional network) on the ISBI challenge for segmentation of neuronal structures in electron microscopic stacks. Using the same network trained on transmitted light microscopy images (phase contrast and DIC) we won the ISBI cell tracking challenge 2015 in these categories by a large margin. Moreover, the network is fast. Segmentation of a 512x512 image takes less than a second on a recent GPU. The full implementation (based on Caffe) and the trained networks are available at http://lmb.informatik.uni-freiburg.de/people/ronneber/u-net .',\r\n            authors: [\"Olaf Ronneberger\", \"Philipp Fischer\", \"Thomas Brox\"],\r\n            paper: \"https://arxiv.org/abs/1505.04597v1\",\r\n            published_date: \"18 May 2015\",\r\n        },\r\n        code: {\r\n            url: \"https://github.com/labmlai/annotated_deep_learning_paper_implementations\",\r\n            lib: \"torch\",\r\n            official: false\r\n        },\r\n        task: {\r\n            featured: \"Ranked #1 on Colorectal Gland Segmentation: on CRAG (DiceOC metric)\",\r\n            tasks: [\"Cell Segmentation\", \"Medical Image Segmentation\", \"Multi-tissue Nucleus Segmentation\", \"Pancreas Segmentation\", \"Retinal Vessel Segmentation\", \"Semantic Segmentation\", \"Skin Cancer Segmentation\"],\r\n            datasets: [\"DRIVE\", \"STARE\", \"LUNA\", \"Kvasir-SEG\", \"CHASE_DB1\", \"Kvasir\", \"CVC-ClinicDB\", \"Kumar\", \"Kvasir-Instrument\", \"RITE\", \"PhC-U373\"],\r\n            paperswithcode: \"https://paperswithcode.com/paper/u-net-convolutional-networks-for-biomedical\",\r\n        }\r\n    }\r\n]\r\n\r\nexport default models;","import segmentationimg from './imgs/segmentation.jpg';\r\nimport _3dSegmentation from './3d';\r\nimport panopticsegmentation from './panoptic';\r\nimport scenesegmentation from './scene';\r\nimport medicalsegmentation from './medical';\r\nimport weaklysegmentation from './weakly-supervised';\r\nimport backgroundRemover from './background_remover';\r\n\r\nimport models from './models';\r\n\r\nexport const SemanticSegmentation = {\r\n    title: 'Semantic Segmentation',\r\n    img: segmentationimg,\r\n    description: 'Semantic segmentation, or image segmentation, is the task of clustering parts of an image together which belong to the same object class. It is a form of pixel-level prediction because each pixel in an image is classified according to a category. Some example benchmarks for this task are Cityscapes, PASCAL VOC and ADE20K. Models are usually evaluated with the Mean Intersection-Over-Union (Mean IoU) and Pixel Accuracy metrics.',\r\n    datasets: [\"Cityscapes\", \"KITTI\", \"ShapeNet\", \"NYUv2\", \"ScanNet\", \"ADE20K\", \"DAVIS\", \"SYNTHIA\", \"SUN RGB-D\", \"GTA5\"],\r\n    subtasks: [\r\n        _3dSegmentation,\r\n        panopticsegmentation,\r\n        scenesegmentation,\r\n        medicalsegmentation, \r\n        weaklysegmentation,\r\n        backgroundRemover,\r\n    ],\r\n    models: models.concat(\r\n        _3dSegmentation.models,\r\n        panopticsegmentation.models,\r\n        scenesegmentation.models,\r\n        medicalsegmentation.models,\r\n        weaklysegmentation.models,\r\n        backgroundRemover.models\r\n    )\r\n}\r\n\r\nexport default SemanticSegmentation;","export const models = [\r\n    {\r\n        writer_id: 'Neuralverse',\r\n        title: \"Adain\",\r\n        subtitle: \"Real-time with Adaptive Instance Normalization\",\r\n        img: \"https://miro.medium.com/max/1050/1*-O7XstBEW-miUNtPGsKw7A.png\",\r\n        imgcredit: {\r\n            name: \"Adain : A Machine Learning Model for Style Transfer\",\r\n            url: \"https://medium.com/axinc-ai/adain-a-machine-learning-model-for-style-transfer-341b242c554b\",\r\n        },\r\n        demo: {\r\n            type: \"style-transfer\",\r\n            api: \"https://hf.space/gradioiframe/aravinds1811/neural-style-transfer/+/api/predict/\",\r\n            defaultSec: 10,\r\n        },\r\n        benchmark: true,\r\n        studio: true,\r\n        paper: {\r\n            name: \"Arbitrary Style Transfer in Real-time with Adaptive Instance Normalization\",\r\n            img: \"https://medium.com/axinc-ai/adain-a-machine-learning-model-for-style-transfer-341b242c554b\",\r\n            description: \"Gatys et al. recently introduced a neural algorithm that renders a content image in the style of another image, achieving so-called style transfer. However, their framework requires a slow iterative optimization process, which limits its practical application. Fast approximations with feed-forward neural networks have been proposed to speed up neural style transfer. Unfortunately, the speed improvement comes at a cost: the network is usually tied to a fixed set of styles and cannot adapt to arbitrary new styles. In this paper, we present a simple yet effective approach that for the first time enables arbitrary style transfer in real-time. At the heart of our method is a novel adaptive instance normalization (AdaIN) layer that aligns the mean and variance of the content features with those of the style features. Our method achieves speed comparable to the fastest existing approach, without the restriction to a pre-defined set of styles. In addition, our approach allows flexible user controls such as content-style trade-off, style interpolation, color & spatial controls, all using a single feed-forward neural network.\",\r\n            authors: [\"Xun Huang\", \"Serge Belongie\"],\r\n            paper: \"https://arxiv.org/abs/1703.06868v2\",\r\n            published_date: \"20 Mar 2017\",\r\n            conference: {\r\n                name: \"ICCV 2017\",\r\n                paper: \"https://openaccess.thecvf.com/content_ICCV_2017/papers/Huang_Arbitrary_Style_Transfer_ICCV_2017_paper.pdf\",\r\n                abstract: \"https://openaccess.thecvf.com/content_iccv_2017/html/Huang_Arbitrary_Style_Transfer_ICCV_2017_paper.html\",\r\n            }\r\n        },\r\n        code: {\r\n            url: \"https://github.com/xunhuang1995/AdaIN-style\",\r\n            lib: \"torch\",\r\n            official: true,\r\n            colab: \"\",\r\n        },\r\n        task: {\r\n            featured: \"\",\r\n            tasks: [\"Style Transfer\"],\r\n            datasets: [\"COCO\"],\r\n            paperswithcode: \"https://paperswithcode.com/paper/arbitrary-style-transfer-in-real-time-with\",\r\n        }\r\n    }\r\n]\r\n\r\nexport default models;","import styletransferimg from './imgs/style transfer.jpg';\r\nimport models from './models';\r\n\r\nexport const StyleTransfer =  {\r\n    title: 'Style Transfer',\r\n    img: styletransferimg,\r\n    imgcredit: {\r\n        name: \" A Neural Algorithm of Artistic Style\",\r\n        url: \"https://arxiv.org/pdf/1508.06576v2.pdf\",\r\n    },\r\n    description: \"Style transfer is the task of changing the style of an image in one domain to the style of an image in another domain.\",\r\n    datasets: [\"DukeMTMC-reID\", \"MPI Sintel\", \"MPIIGaze\", \"iKala\", \"LaMem\", \"Touchdown Dataset\", \"POP909\", \"WebCaricature Dataset\", \"PASTEL\", \"DeepWriting\"],\r\n    subtasks: [\r\n        \r\n    ],\r\n    models: models\r\n}\r\n\r\nexport default StyleTransfer;","export const models = [\r\n    // {\r\n    //     writer_id: 'Neuralverse',\r\n    //     title: \"DETR\",\r\n    //     subtitle: \"End-to-End Object Detection with Transformers\",\r\n    //     img: \"https://alcinos.github.io/detr_page/assets/elephants.png\",\r\n    //     imgcredit: {\r\n    //         name: \"DETR: End-to-End Object Detection With Transformers\",\r\n    //         url: \"https://alcinos.github.io/detr_page/\",\r\n    //     },\r\n    //     demo: true,\r\n    //     benchmark: true,\r\n    //     studio: true,\r\n    //     paper: {\r\n    //         name: \"End-to-End Object Detection with Transformers\",\r\n    //         img: \"https://alcinos.github.io/detr_page/assets/overview.jpg\",\r\n    //         description: \"We present a new method that views object detection as a direct set prediction problem. Our approach streamlines the detection pipeline, effectively removing the need for many hand-designed components like a non-maximum suppression procedure or anchor generation that explicitly encode our prior knowledge about the task. The main ingredients of the new framework, called DEtection TRansformer or DETR, are a set-based global loss that forces unique predictions via bipartite matching, and a transformer encoder-decoder architecture. Given a fixed small set of learned object queries, DETR reasons about the relations of the objects and the global image context to directly output the final set of predictions in parallel. The new model is conceptually simple and does not require a specialized library, unlike many other modern detectors. DETR demonstrates accuracy and run-time performance on par with the well-established and highly-optimized Faster RCNN baseline on the challenging COCO object detection dataset. Moreover, DETR can be easily generalized to produce panoptic segmentation in a unified manner. We show that it significantly outperforms competitive baselines. Training code and pretrained models are available at https://github.com/facebookresearch/detr.\",\r\n    //         authors: [\"Nicolas Carion\", \"Francisco Massa\", \"Gabriel Synnaeve\", \"Nicolas Usunier\", \"Alexander Kirillov, Sergey Zagoruyko\"],\r\n    //         paper: \"https://arxiv.org/abs/2005.12872v3\",\r\n    //         published_date: \"28 May 2020\",\r\n    //         conference: {\r\n    //             name: \"ECCV 2020\",\r\n    //             paper: \"https://www.ecva.net/papers/eccv_2020/papers_ECCV/papers/123460205.pdf\",\r\n    //             abstract: \"https://www.ecva.net/papers/eccv_2020/papers_ECCV/html/832_ECCV_2020_paper.php\",\r\n    //         }\r\n    //     },\r\n    //     code: {\r\n    //         url: \"https://github.com/facebookresearch/detr\",\r\n    //         lib: \"torch\",\r\n    //         official: true,\r\n    //         colab: \"https://colab.research.google.com/github/facebookresearch/detr/blob/colab/notebooks/detr_demo.ipynb\",\r\n    //     },\r\n    //     task: {\r\n    //         featured: \"Ranked #7 on Panoptic Segmentation on COCO minival\",\r\n    //         tasks: [\"Object Detection\", \"Panoptic Segmentation\"],\r\n    //         datasets: [\"COCO\"],\r\n    //         paperswithcode: \"https://paperswithcode.com/paper/end-to-end-object-detection-with-transformers\",\r\n    //     }\r\n    // }\r\n]\r\n\r\nexport default models;","import selfsupervbimg from './imgs/selfsupervb.png';\r\n\r\nimport models from './models';\r\n\r\nexport const SelfSupervisedLearning = {\r\n    title: \"Self-Supervised Learning\",\r\n    img: selfsupervbimg,\r\n    description: \"Self-Supervised Learning is proposed for utilizing unlabeled data with the success of supervised learning. Producing a dataset with good labels is expensive, while unlabeled data is being generated all the time. The motivation of Self-Supervised Learning is to make use of the large amount of unlabeled data. The main idea of Self-Supervised Learning is to generate the labels from unlabeled data, according to the structure or characteristics of the data itself, and then train on this unsupervised data in a supervised manner. Self-Supervised Learning is wildly used in representation learning to make a model learn the latent features of the data. This technique is often employed in computer vision, video processing and robot control.\",\r\n    datasets: [\"STL-10\", \"NSynth\", \"AVA\", \"2D-3D-S\", \"CATER\", \"AVA-ActiveSpeaker\", \"MotionSense\"],\r\n    subtasks: [\r\n\r\n    ],\r\n    models: models,\r\n}\r\n\r\nexport default SelfSupervisedLearning;","export const Image = {\r\n    title: 'Image Super-Resolution',\r\n    img: \"https://production-media.paperswithcode.com/thumbnails/task/task-0000000005-775e7af9_NTfuPF6.jpg\",\r\n    description: \"In this task, we try to upsample the image and create the high resolution image with help of a low resolution image.\",\r\n    datasets: [\"KITTI\", \"FFHQ\", \"BSD\", \"CelebA-HQ\", \"VGGFace2\", \"Set14\", \"CASIA-WebFace\", \"Urban100\", \"Set5\", \"DIV2K\"],\r\n    models: [\r\n        \r\n    ]\r\n}\r\n\r\nexport default Image;","export const Video = {\r\n    title: 'Video Super-Resolution',\r\n    img: \"https://production-media.paperswithcode.com/thumbnails/task/task-0000000036-ea3a7f70_voXPYb4.jpg\",\r\n    imgcredit: {\r\n        name: \"Detail-revealing Deep Video Super-Resolution\",\r\n        url: \"https://github.com/jiangsutx/SPMC_VideoSR\",\r\n    },\r\n    description: \"Video super-resolution is the task of upscaling a video from a low-resolution to a high-resolution.\",\r\n    datasets: [\"Vimeo90K\", \"MSU Video Super Resolution Benchmark\", \"TbD-3D\", \"TbD\", \"Falling Objects\", \"Inter4K\", \"QST\"],\r\n    models: [\r\n        \r\n    ]\r\n}\r\n\r\nexport default Video;","export const _3dObject = {\r\n    title: '3D Object Super-Resolution',\r\n    img: \"https://production-media.paperswithcode.com/thumbnails/task/task-0000001066-4a2c47ae.jpg\",\r\n    imgcredit: {\r\n        name: \"Multi-View Silhouette and Depth Decomposition for High Resolution 3D Object Representation\",\r\n        url: \"https://github.com/EdwardSmith1884/Multi-View-Silhouette-and-Depth-Decomposition-for-High-Resolution-3D-Object-Representation\",\r\n    },\r\n    description: \"3D object super-resolution is the task of up-sampling 3D objects.\",\r\n    datasets: [\"CAMELS Multifield Dataset\"],\r\n    models: [\r\n        \r\n    ]\r\n}\r\n\r\nexport default _3dObject;","export const models = [\r\n    {\r\n        writer_id: 'Neuralverse',\r\n        title: \"VRT\",\r\n        subtitle: \"A Video Restoration Transformer\",\r\n        img: \"https://production-media.paperswithcode.com/thumbnails/papergithubrepo/b012d908-8a55-4b67-8fb4-9215663651d6.gif\",\r\n        imgcredit: {\r\n            name: \"VRT: A Video Restoration Transformer\",\r\n            url: \"https://paperswithcode.com/paper/vrt-a-video-restoration-transformer\",\r\n        },\r\n        demo: {\r\n            type: \"object-detection\",\r\n            api: \"https://hf.space/embed/SuwoE/SuperResolution/+/api/predict/\",\r\n            defaultSec: 10,\r\n        },\r\n        benchmark: true,\r\n        studio: true,\r\n        paper: {\r\n            name: \"VRT: A Video Restoration Transformer\",\r\n            img: \"https://raw.githubusercontent.com/JingyunLiang/VRT/main/assets/framework.jpeg\",\r\n            description: \"Video restoration (e.g., video super-resolution) aims to restore high-quality frames from low-quality frames. Different from single image restoration, video restoration generally requires to utilize temporal information from multiple adjacent but usually misaligned video frames. Existing deep methods generally tackle with this by exploiting a sliding window strategy or a recurrent architecture, which either is restricted by frame-by-frame restoration or lacks long-range modelling ability. In this paper, we propose a Video Restoration Transformer (VRT) with parallel frame prediction and long-range temporal dependency modelling abilities. More specifically, VRT is composed of multiple scales, each of which consists of two kinds of modules: temporal mutual self attention (TMSA) and parallel warping. TMSA divides the video into small clips, on which mutual attention is applied for joint motion estimation, feature alignment and feature fusion, while self attention is used for feature extraction. To enable cross-clip interactions, the video sequence is shifted for every other layer. Besides, parallel warping is used to further fuse information from neighboring frames by parallel feature warping. Experimental results on three tasks, including video super-resolution, video deblurring and video denoising, demonstrate that VRT outperforms the state-of-the-art methods by large margins () on nine benchmark datasets.\",\r\n            authors: [\"Jingyun Liang\", \"JieZhang Cao\", \"Yuchen Fan\", \"Kai Zhang\", \"Rakesh Ranjan\", \"Yawei Li\", \"Radu Timofte\", \"Luc van Gool\"],\r\n            paper: \"https://arxiv.org/abs/2005.12872v3\",\r\n            published_date: \"28 Jan 2022\",\r\n            conference: {}\r\n        },\r\n        code: {\r\n            url: \"https://github.com/jingyunliang/vrt\",\r\n            lib: \"torch\",\r\n            official: true,\r\n            colab: \"https://colab.research.google.com/gist/JingyunLiang/deb335792768ad9eb73854a8efca4fe0#file-vrt-demo-on-video-restoration-ipynb=\",\r\n        },\r\n        task: {\r\n            featured: \"Ranked #7 on Panoptic Segmentation on COCO minival\",\r\n            tasks: [\"Deblurring\", \"Denoising\", \"Image Restoration\", \"Motion Estimation\", \"Super-Resolution\", \"Video Denoising\", \"Video Restoration\", \"Video Super-Resolution\"],\r\n            datasets: [\"GoPro\"],\r\n            paperswithcode: \"https://paperswithcode.com/paper/vrt-a-video-restoration-transformer\",\r\n        }\r\n    },\r\n]\r\n\r\nexport default models;","import superresolutionimg from './imgs/super resolution.jpg';\r\n\r\nimport image from './image';\r\nimport video from './video';\r\nimport _3dObject from './3dobject';\r\n\r\nimport models from './models';\r\n\r\nexport const SuperResolution = {\r\n    title: 'Super Resolution',\r\n    img: superresolutionimg,\r\n    imgcredit: {\r\n        name: \"MemNet\",\r\n        url: \"https://github.com/tyshiwo/MemNet\",\r\n    },\r\n    description: \"Super resolution is the task of taking an input of a low resolution (LR) and upscaling it to that of a high resolution.\",\r\n    datasets: [\"Perceptual Similarity\", \"Vimeo90K\", \"xView\", \"PIRM\", \"General-100\", \"Flickr1024\", \"Stanford Light Field\", \"QMUL-SurvFace\", \"CATS\", \"TextZoom\"],\r\n    subtasks: [\r\n       image,\r\n       video,\r\n      _3dObject, \r\n    ],\r\n    models: models.concat(\r\n        image.models,\r\n        video.models,\r\n        _3dObject.models,\r\n    )\r\n}\r\n\r\nexport default SuperResolution;","import React from 'react';\r\nimport generalization from './imgs/generalization.png';\r\n\r\nexport const DomainGeneralization = {\r\n    title: 'Domain Generalization',\r\n    img: generalization,\r\n    imgcredit: {\r\n        name: \"CutMix: Regularization Strategy to Train Strong Classifiers with Localizable Features\",\r\n        url: \"https://arxiv.org/pdf/1905.04899v2.pdf\",\r\n    },\r\n    descriptioncredit: {\r\n        name: \"Diagram Image Retrieval using Sketch-Based Deep Learning and Transfer Learning\",\r\n        url: \"https://arxiv.org/abs/2004.10780\",\r\n    },\r\n    description: <p>The idea of <strong>Domain Generalization</strong> is to learn from one or multiple training domains, to extract a domain-agnostic model which can be applied to an unseen domain</p>,\r\n    datasets: [\"ImageNet\", \"Fashion-MNIST\", \"Office-Home\", \"PACS\", \"ImageNet-C\", \"DomainNet\", \"ImageNet-A\", \"ImageNet-R\", \"Stylized ImageNet\", \"ImageNet-Sketch\"],\r\n    models: [\r\n        \r\n    ]\r\n}\r\n\r\nexport default DomainGeneralization;","import React from 'react';\r\nimport unsupervised from './imgs/unsupervised.png';\r\n\r\nexport const Unsupervised = {\r\n    title: 'Unsupervised Domain Adaptation',\r\n    img: unsupervised,\r\n    imgcredit: {\r\n        name: \"Adversarial Discriminative Domain Adaptation\",\r\n        url: \"https://arxiv.org/pdf/1702.05464v1.pdf\",\r\n    },\r\n    descriptioncredit: {\r\n        name: \"Domain-Specific Batch Normalization for Unsupervised Domain Adaptation\",\r\n        url: \"https://arxiv.org/abs/1906.03950\",\r\n    },\r\n    description: <p><strong>Unsupervised Domain Adaptation</strong> is a learning framework to transfer knowledge learned from source domains with a large number of annotated training examples to target domains with unlabeled data only.</p>,\r\n    datasets: [\"ImageNet\", \"KITTI\", \"Market-1501\", \"Office-Home\", \"Office-31\", \"SYNTHIA\", \"GTA5\", \"ImageNet-C\", \"VisDA-2017\", \"Foggy Cityscapes\"],\r\n    models: [\r\n        \r\n    ]\r\n}\r\n\r\nexport default Unsupervised;","import React from 'react';\r\nimport partial from './imgs/partial.png';\r\n\r\nexport const Partial = {\r\n    title: 'Partial Domain Adaptation',\r\n    img: partial,\r\n    imgcredit: {\r\n        name: \"Importance Weighted Adversarial Nets for Partial Domain Adaptation\",\r\n        url: \"https://arxiv.org/pdf/1702.05464v1.pdf\",\r\n    },\r\n    descriptioncredit: {\r\n        name: \"Deep Residual Correction Network for Partial Domain Adaptation\",\r\n        url: \"https://arxiv.org/abs/2004.04914\",\r\n    },\r\n    description: <p><strong>Partial Domain Adaptation</strong> is a transfer learning paradigm, which manages to transfer relevant knowledge from a large-scale source domain to a small-scale target domain.</p>,\r\n    datasets: [\"ImageNet\", \"Office-Home\", \"Office-31\", \"DomainNet\", \"VisDA-2017\"],\r\n    models: [\r\n        \r\n    ]\r\n}\r\n\r\nexport default Partial;","import generalization from './generalization';\r\nimport unsupervised from './unsupervised';\r\nimport partial from './partial'\r\n\r\nimport models from './models';\r\n\r\nexport const DomainAdaptation = {\r\n    title: 'Domain Adaptation',\r\n    img: \"https://production-media.paperswithcode.com/thumbnails/task/task-0000000588-823db955.jpg\",\r\n    imgcredit: {\r\n        name: \"Unsupervised Image-to-Image Translation Networks\",\r\n        url: \"https://arxiv.org/pdf/1703.00848v6.pdf\",\r\n    },\r\n    description: \"Domain adaptation is the task of adapting models across domains. This is motivated by the challenge where the test and training datasets fall from different data distributions due to some factor. Domain adaptation aims to build machine learning models that can be generalized into a target domain and dealing with the discrepancy across domain distributions.\",\r\n    datasets: [\"MNIST\", \"SVHN\", \"HMDB51\", \"Office-Home\", \"Office-31\", \"USPS\", \"SYNTHIA\", \"GTA5\", \"GTSRB\", \"OpenSubtitles\"],\r\n    subtasks: [\r\n        unsupervised,\r\n        generalization,\r\n        partial,\r\n    ],\r\n    models: models.concat(\r\n        unsupervised.models,\r\n        generalization.models,\r\n        partial.models,\r\n    )\r\n}\r\n\r\nexport default DomainAdaptation;","export const models = [\r\n    // {\r\n    //     writer_id: 'Neuralverse',\r\n    //     title: \"DETR\",\r\n    //     subtitle: \"End-to-End Object Detection with Transformers\",\r\n    //     img: \"https://alcinos.github.io/detr_page/assets/elephants.png\",\r\n    //     imgcredit: {\r\n    //         name: \"DETR: End-to-End Object Detection With Transformers\",\r\n    //         url: \"https://alcinos.github.io/detr_page/\",\r\n    //     },\r\n    //     demo: true,\r\n    //     benchmark: true,\r\n    //     studio: true,\r\n    //     paper: {\r\n    //         name: \"End-to-End Object Detection with Transformers\",\r\n    //         img: \"https://alcinos.github.io/detr_page/assets/overview.jpg\",\r\n    //         description: \"We present a new method that views object detection as a direct set prediction problem. Our approach streamlines the detection pipeline, effectively removing the need for many hand-designed components like a non-maximum suppression procedure or anchor generation that explicitly encode our prior knowledge about the task. The main ingredients of the new framework, called DEtection TRansformer or DETR, are a set-based global loss that forces unique predictions via bipartite matching, and a transformer encoder-decoder architecture. Given a fixed small set of learned object queries, DETR reasons about the relations of the objects and the global image context to directly output the final set of predictions in parallel. The new model is conceptually simple and does not require a specialized library, unlike many other modern detectors. DETR demonstrates accuracy and run-time performance on par with the well-established and highly-optimized Faster RCNN baseline on the challenging COCO object detection dataset. Moreover, DETR can be easily generalized to produce panoptic segmentation in a unified manner. We show that it significantly outperforms competitive baselines. Training code and pretrained models are available at https://github.com/facebookresearch/detr.\",\r\n    //         authors: [\"Nicolas Carion\", \"Francisco Massa\", \"Gabriel Synnaeve\", \"Nicolas Usunier\", \"Alexander Kirillov, Sergey Zagoruyko\"],\r\n    //         paper: \"https://arxiv.org/abs/2005.12872v3\",\r\n    //         published_date: \"28 May 2020\",\r\n    //         conference: {\r\n    //             name: \"ECCV 2020\",\r\n    //             paper: \"https://www.ecva.net/papers/eccv_2020/papers_ECCV/papers/123460205.pdf\",\r\n    //             abstract: \"https://www.ecva.net/papers/eccv_2020/papers_ECCV/html/832_ECCV_2020_paper.php\",\r\n    //         }\r\n    //     },\r\n    //     code: {\r\n    //         url: \"https://github.com/facebookresearch/detr\",\r\n    //         lib: \"torch\",\r\n    //         official: true,\r\n    //         colab: \"https://colab.research.google.com/github/facebookresearch/detr/blob/colab/notebooks/detr_demo.ipynb\",\r\n    //     },\r\n    //     task: {\r\n    //         featured: \"Ranked #7 on Panoptic Segmentation on COCO minival\",\r\n    //         tasks: [\"Object Detection\", \"Panoptic Segmentation\"],\r\n    //         datasets: [\"COCO\"],\r\n    //         paperswithcode: \"https://paperswithcode.com/paper/end-to-end-object-detection-with-transformers\",\r\n    //     }\r\n    // }\r\n]\r\n\r\nexport default models;","// images\r\nimport computervisionimg from './imgs/computer vision.jpg';\r\n\r\n// tasks\r\n\r\nimport denoising from './computervision/denoising';\r\nimport depthEstimation from './computervision/depth_estimation';\r\nimport fewShotLearning from './computervision/few-shot_learning';\r\nimport imageClassification from './computervision/image_classification';\r\nimport imageGeneration from './computervision/image_generation';\r\nimport objectDetection from './computervision/object_detection';\r\nimport semanticsegmentation from './computervision/semanticsegmentation';\r\nimport styleTransfer from './computervision/style_transfer';\r\nimport selfSupervisedLearning from './computervision/self-supervised_learning';\r\nimport superResolution from './computervision/super_resolution';\r\nimport domainAdaptation from './computervision/domain_adaptation';\r\n\r\n// benchmarks / paperswithcode / demos should be counted by lengths of databases by querying the hashtags of each\r\n\r\nexport const data = [\r\n    {\r\n        title: \"Computer Vision\",\r\n        demoNum: 20,\r\n        benchmarkNum: 100,\r\n        paperswithcodeNum: 100,\r\n        img: \"https://miro.medium.com/max/1400/1*8gmgaAkFdI-9OHY5cA93xQ.png\",\r\n        imgcredit: {\r\n            name: \"MEDIUM\",\r\n            url: \"https://medium.com/mlearning-ai/open-cv-computer-vision-ai-how-does-it-work-801d4cdec462\",\r\n        },\r\n        description: \"Computer vision is a field of artificial intelligence (AI) that enables computers and systems to derive meaningful information from digital images, videos and other visual inputs — and take actions or make recommendations based on that information. If AI enables computers to think, computer vision enables them to see, observe and understand.\",\r\n        datasets: [\"Cityscapes\", \"KITTI\", \"ShapeNet\", \"NYUv2\", \"ScanNet\", \"ADE20K\", \"DAVIS\", \"SYNTHIA\", \"SUN RGB-D\", \"GTA5\"],  \r\n        subtasks: [\r\n           \r\n        ],\r\n        models: imageClassification.models.concat(\r\n                superResolution.models,\r\n                objectDetection.models,\r\n                styleTransfer.models,\r\n                imageGeneration.models,\r\n                semanticsegmentation.models, \r\n                selfSupervisedLearning.models,\r\n                depthEstimation.models,\r\n                fewShotLearning.models,\r\n                domainAdaptation.models,\r\n                denoising.models,\r\n            )\r\n    },\r\n    {\r\n        title: \"Natural Language Processing\",\r\n        demoNum: 20,\r\n        benchmarkNum: 100,\r\n        paperswithcodeNum: 100,\r\n        img: \"https://miro.medium.com/max/1400/1*8gmgaAkFdI-9OHY5cA93xQ.png\",\r\n        imgcredit: {\r\n            name: \"MEDIUM\",\r\n            url: \"https://medium.com/mlearning-ai/open-cv-computer-vision-ai-how-does-it-work-801d4cdec462\",\r\n        },\r\n        description: \"Computer vision is a field of artificial intelligence (AI) that enables computers and systems to derive meaningful information from digital images, videos and other visual inputs — and take actions or make recommendations based on that information. If AI enables computers to think, computer vision enables them to see, observe and understand.\",\r\n        datasets: [\"Cityscapes\", \"KITTI\", \"ShapeNet\", \"NYUv2\", \"ScanNet\", \"ADE20K\", \"DAVIS\", \"SYNTHIA\", \"SUN RGB-D\", \"GTA5\"],  \r\n        subtasks: [\r\n           \r\n        ],\r\n        models: [],\r\n    },\r\n    imageClassification,\r\n    semanticsegmentation, \r\n    objectDetection,\r\n    imageGeneration,\r\n    styleTransfer,\r\n    selfSupervisedLearning,\r\n    depthEstimation,\r\n    fewShotLearning,\r\n    domainAdaptation,\r\n    superResolution,\r\n    denoising,\r\n]\r\n\r\nexport default data;","import React, {useState} from 'react';\r\nimport {Flex, Row, Col, Text, Image, Box, Input} from '../../components/common/base';\r\nimport { SearchIcon, CloseIcon, DemoIcon, PaperswithCodeIcon, BenchMarkIcon, BackIcon } from '../../icons/utilities';\r\nimport {Height} from '../../hooks/getWindow';\r\nimport tasks from '../../data/tasks';\r\nimport styled from 'styled-components';\r\nimport { bgStyler, blueColor } from '../../styles';\r\n\r\nconst CategoryWrap = styled(Col)`\r\n    height: 100%;\r\n    overflow: hidden;\r\n    overflow-y: scroll;\r\n    display: block;\r\n    padding-bottom: 100px;\r\n    transition: all 300ms;\r\n`;\r\n\r\nconst TaskWrap = styled(Box)`\r\n    &:first-child {\r\n      margin-top: 0px;  \r\n    };\r\n    height: 130px; \r\n    border-radius: 20px;\r\n    position: relative;\r\n    align-items: center;\r\n    justify-content: center;\r\n    overflow: hidden;\r\n    margin-bottom: 20px;\r\n    cursor: pointer;\r\n    margin: 15px;\r\n`;\r\n\r\nexport const Task = ({setAbove, darkMode, content, setTask, setSubTask, type, setModel}) => {\r\n    const tasker = () => {\r\n        setModel(null);\r\n        if (type == \"task\"){\r\n            if (content.subtasks.length > 0){\r\n                setAbove(true);\r\n            }\r\n            setSubTask(null);\r\n            setTask(content);\r\n        } else {\r\n            setAbove(true);\r\n            setSubTask(content);\r\n        }\r\n    }\r\n    return (\r\n        <TaskWrap onClick={() => tasker()}>\r\n            <Col justify=\"center\" align=\"flex-start\" position=\"absolute\" zIndex={101} \r\n                style={{left: 0, backdropFilter: 'blur(5px)', bottom: 0}}\r\n                padding=\"padding: 20px;\"\r\n                width=\"70%\" height=\"100%\" bg={bgStyler(darkMode)}>\r\n                <Text className=\"light\" margin=\"margin-bottom: 10px;\">{content.title.toUpperCase()}</Text>\r\n                <Col>\r\n                    <Row align=\"center\">\r\n                        <DemoIcon stroke={darkMode ? \"#00B3DA\" : blueColor} width={12.8} height={12.8} />\r\n                        <Text className=\"light\" weight=\"400\" margin=\"margin-left: 10px;\" size=\"11\">20 Demos</Text>\r\n                    </Row>\r\n                    <Row margin=\"margin: 5px 0px;\" align=\"center\">\r\n                        <BenchMarkIcon stroke={darkMode ? \"#00B3DA\" : blueColor} width={12.8} height={12.8} />\r\n                        <Text className=\"light\" weight=\"400\" margin=\"margin-left: 10px;\" size=\"11\">{content.benchmarkNum} Benchmarks</Text>\r\n                    </Row>\r\n                    <Row align=\"center\">\r\n                        <PaperswithCodeIcon stroke={darkMode ? \"#00B3DA\" : blueColor} width={12.8} height={12.8} />\r\n                        <Text className=\"light\" weight=\"400\" margin=\"margin-left: 10px;\" size=\"11\">{content.paperswithcodeNum} Papers with Code</Text>\r\n                    </Row>\r\n                </Col>\r\n            </Col>\r\n            <Image src={content.img} zIndex={100} style={{marginLeft: 50}} position=\"absolute\" of=\"cover\" width=\"100%\" height=\"100%\" />\r\n        </TaskWrap>\r\n    )\r\n}\r\n\r\nexport const CategoryBar = ({setModel, task, setTask, setSubTask, categoryBar, setCategoryBar, darkMode}) => {\r\n    const [above, setAbove] = useState(false);\r\n    return (\r\n        <Box position=\"fixed\" zIndex={100} width=\"21%;\"\r\n            height={Height - 80 + 'px'} style={{right: categoryBar ? 0 : -380, top: 80, transition: 'all 300ms'}}>\r\n            <Flex height=\"35px;\" margin=\"margin: 15px; margin-bottom: 20px;\" position=\"relative\">\r\n                <Flex style={{position: 'absolute', left: 0, bottom: 12}}>\r\n                    <SearchIcon width={16} height={16} stroke=\"rgb(100, 100, 100)\" />\r\n                </Flex>\r\n                <Input height=\"35px;\" placeholder=\"Search\" color={darkMode ? \"white\" : \"black\"} width=\"85%\" bg=\"rgba(0,0,0,0)\" padding=\"padding-left: 28px;\" style={{border: 0, borderBottomWidth: 1, borderBottomColor: 'rgb(100, 100, 100)', letterSpacing: 0.4, borderBottomStyle: 'solid'}} />\r\n            </Flex>\r\n            <Flex to=\"cursor\" onClick={() => setCategoryBar(!categoryBar)} position=\"absolute\" zIndex={100} style={{right: 15, top: 15}}>\r\n                <CloseIcon width={30} height={30} bg={darkMode ? \"rgb(35, 35, 35)\" : \"rgb(245, 245, 245)\"} stroke={darkMode ? \"rgb(100, 100, 100)\" : \"rgb(120, 120, 120)\"} />\r\n            </Flex>\r\n            {above && <Flex to=\"cursor\" onClick={() => setAbove(false)} position=\"absolute\" style={{left: -5, top: 82}}>\r\n                <BackIcon height={20} stroke={darkMode ? \"white\" : \"black\"} />\r\n            </Flex>}\r\n            <Text size=\"20\" className='bold' margin={above ? \"margin: 10px 45px; margin-bottom: 20px;\" : \"margin: 10px 15px; margin-bottom: 20px;\"} style={{transition: 'all 300ms'}}>{above ? task.title : \"TASKS\"}</Text>\r\n            <CategoryWrap scrollbarFalse={true}>\r\n                {tasks.map((item) => <Task type=\"task\" setAbove={setAbove} setModel={setModel} setSubTask={setSubTask} setTask={setTask} darkMode={darkMode} key={item.title} content={item} />)}\r\n            </CategoryWrap>\r\n            <CategoryWrap bg={darkMode ? \"rgb(15, 15, 15)\" : \"white\"} position=\"absolute\" zIndex=\"1000\" width=\"100%\" style={{height: '85%', top: 124, right: above ? 0 : '-100%', transition: 'all 300ms'}} scrollbarFalse={true}>\r\n                <Task type=\"subtask\" setAbove={setAbove} setModel={setModel} setSubTask={setSubTask} darkMode={darkMode} content={task} />\r\n                {task.subtasks.map((item) => <Task type=\"subtask\" setAbove={setAbove} setSubTask={setSubTask} setModel={setModel} darkMode={darkMode} key={item.title} content={item} />)}\r\n            </CategoryWrap>\r\n        </Box>\r\n    )\r\n};\r\n\r\nexport default CategoryBar;","import React, { useState } from 'react';\r\nimport {Col} from '../../components/common/base';\r\nimport Main from './main';\r\nimport CategoryBar from './categorybar';\r\nimport { GlobalBgStyler } from '../../styles';\r\nimport { ThemeEvent } from '../../contexts/GlobalContext';\r\nimport tasks from '../../data/tasks';\r\n\r\nexport const NeuralSpace = ({route}) => {\r\n    const {darkMode} = ThemeEvent();\r\n    const [task, setTask] = useState(tasks[0]);\r\n    const [subTask, setSubTask] = useState(null);\r\n    const [model, setModel] = useState(null);\r\n    const [categoryBar, setCategoryBar] = useState(true);\r\n    return (\r\n        <Col align=\"center\" bg={GlobalBgStyler(darkMode)} style={{display: route == 3 ? 'flex': 'none', paddingTop: 170}}>\r\n            <Main model={model} setModel={setModel} categoryBar={categoryBar} setCategoryBar={setCategoryBar} task={task} setTask={setTask} setSubTask={setSubTask} subTask={subTask} darkMode={darkMode} />\r\n            <CategoryBar task={task} setTask={setTask} setSubTask={setSubTask} subTask={subTask} setModel={setModel} darkMode={darkMode} categoryBar={categoryBar} setCategoryBar={setCategoryBar} />\r\n        </Col>\r\n    )\r\n};\r\n\r\nexport default NeuralSpace;","import React from 'react';\r\n\r\nexport const ImageIcon = ({width = 270, height = 270, stroke = \"black\"}) => (\r\n    <svg width={width} height={height} viewBox=\"0 0 270 270\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n        <path d=\"M50 10H220C242.091 10 260 27.9086 260 50V220C260 242.091 242.091 260 220 260H50C27.9086 260 10 242.091 10 220V50C10 27.9086 27.9086 10 50 10Z\" stroke={stroke} stroke-width=\"20\"/>\r\n        <circle cx=\"202.5\" cy=\"65.5\" r=\"19.5\" stroke={stroke} stroke-width=\"10\"/>\r\n        <path d=\"M13 250L74.3886 130.371C81.5891 116.339 101.44 115.774 109.428 129.373L144.685 189.398C148.08 195.178 156.089 196.046 160.644 191.129L176.245 174.287C185.635 164.15 202.231 166.362 208.638 178.605L246 250\" stroke={stroke} stroke-width=\"20\"/>\r\n    </svg>\r\n);\r\n\r\nexport const VideoIcon = ({width = 270, height = 270, stroke = \"black\"}) => (\r\n    <svg width={width} height={height} viewBox=\"0 0 270 270\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n        <path d=\"M50 10H220C242.091 10 260 27.9086 260 50V220C260 242.091 242.091 260 220 260H50C27.9086 260 10 242.091 10 220V50C10 27.9086 27.9086 10 50 10Z\" stroke={stroke} stroke-width=\"20\"/>\r\n        <path d=\"M192 135L106.5 184.363L106.5 85.6366L192 135Z\" stroke={stroke} stroke-width=\"20\"/>\r\n    </svg>\r\n);\r\n\r\nexport const DocumentIcon = ({width = 270, height = 270, stroke = \"black\"}) => (\r\n    <svg width={width} height={height} viewBox=\"0 0 270 270\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n        <path d=\"M50 10H220C242.091 10 260 27.9086 260 50V220C260 242.091 242.091 260 220 260H50C27.9086 260 10 242.091 10 220V50C10 27.9086 27.9086 10 50 10Z\" stroke={stroke} stroke-width=\"20\"/>\r\n        <line x1=\"43\" y1=\"67\" x2=\"170\" y2=\"67\" stroke={stroke} stroke-width=\"20\"/>\r\n        <line x1=\"93\" y1=\"113\" x2=\"220\" y2=\"113\" stroke={stroke} stroke-width=\"20\"/>\r\n        <line x1=\"47\" y1=\"160\" x2=\"174\" y2=\"160\" stroke={stroke} stroke-width=\"20\"/>\r\n        <line x1=\"93\" y1=\"204\" x2=\"220\" y2=\"204\" stroke={stroke} stroke-width=\"20\"/>\r\n    </svg>\r\n);\r\n  \r\nexport const EventIcon = ({width = 270, height = 270, stroke = \"black\"}) => (\r\n    <svg width={width} height={height} viewBox=\"0 0 270 270\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n        <path d=\"M50 10H220C242.091 10 260 27.9086 260 50V220C260 242.091 242.091 260 220 260H50C27.9086 260 10 242.091 10 220V50C10 27.9086 27.9086 10 50 10Z\" stroke={stroke} stroke-width=\"20\"/>\r\n        <path d=\"M21 18L33.494 37.1768C37.5934 43.4689 46.9067 43.1659 50.5884 36.6206L55.9813 27.0333C59.868 20.1235 69.8658 20.2682 73.551 27.2876L77.8153 35.41C81.4229 42.2818 91.143 42.6032 95.1968 35.9848L101.794 25.2142C105.737 18.7762 115.119 18.8624 118.943 25.3718L125.378 36.3241C129.243 42.9034 138.757 42.9034 142.622 36.3241L148.689 25.9967C152.597 19.3455 162.245 19.4362 166.027 26.1596L171.186 35.3308C175.03 42.1646 184.885 42.1175 188.664 35.2473L193.137 27.1148C196.957 20.169 206.954 20.2172 210.707 27.1996L216.203 37.4241C219.632 43.8039 228.495 44.5354 232.924 38.8042L249 18\" stroke={stroke} stroke-width=\"10\"/>\r\n    </svg>\r\n);","import React from 'react';\r\nimport {Flex, Col, Row, Text, CirclePic} from '../../../components/common/base';\r\nimport {LikeIcon, CommentIcon, ShareIcon, RePostIcon} from '../../../icons/utilities';\r\n\r\nexport const FeedTop = ({darkMode, user, Components}) => {\r\n    return (\r\n        <Col>\r\n\r\n            <Row align=\"center\" justify=\"space-between\" margin=\"margin: 5px 0px\">\r\n                <a href={'/' + user.userId}>\r\n                    <Row align=\"center\">\r\n                        <CirclePic image={user.avatar} size={40} of=\"cover\" />\r\n                        <Col margin=\"margin-left: 10px;\">\r\n                            <Text weight=\"500\">{user.name}</Text>\r\n                            <Text color={darkMode ? \"rgb(200, 200, 200)\" : \"rgb(30, 30, 30)\"} size=\"12\">{user.briefIntroduction}</Text>\r\n                        </Col>\r\n                    </Row>\r\n                </a>\r\n                {Components}\r\n            </Row>\r\n        </Col>\r\n    )\r\n}\r\n\r\nexport const Bottom = ({darkMode, Components}) => {\r\n    return (\r\n        <Row align=\"center\" justify=\"space-between\" padding=\"padding-top: 15px\" style={{borderTopWidth: 0.3, borderTopColor: darkMode ? \"rgb(50, 50, 50)\" : \"rgb(200, 200, 200)\", borderTopStyle: \"solid\"}}>\r\n            <Row to=\"cursor\" cursorOpaFalse={true} align=\"center\">\r\n                <LikeIcon stroke={darkMode ? \"rgb(230, 230, 230)\" : \"black\"} height={18} width={18} />\r\n                <Text margin=\"margin-left: 10px; margin-bottom: 3px;\" size=\"12.8\" color={darkMode ? \"rgb(230, 230, 230)\" : \"rgb(25, 25, 25)\"} weight=\"500\">Upvote</Text>\r\n            </Row>\r\n            <Row to=\"cursor\" cursorOpaFalse={true} align=\"center\">\r\n                <CommentIcon stroke={darkMode ? \"rgb(230, 230, 230)\" : \"black\"} height={18} width={18} />\r\n                <Text margin=\"margin-left: 10px; margin-bottom: 3px;\" size=\"12.8\" color={darkMode ? \"rgb(230, 230, 230)\" : \"rgb(25, 25, 25)\"} weight=\"500\">Comment</Text>\r\n            </Row>\r\n            <Row to=\"cursor\" cursorOpaFalse={true} align=\"center\">\r\n                <RePostIcon stroke={darkMode ? \"rgb(230, 230, 230)\" : \"black\"} height={18} width={18} />\r\n                <Text margin=\"margin-left: 10px; margin-bottom: 3px;\" size=\"12.8\" color={darkMode ? \"rgb(230, 230, 230)\" : \"rgb(25, 25, 25)\"} weight=\"500\">Repost</Text>\r\n            </Row>\r\n            <Row to=\"cursor\" cursorOpaFalse={true} align=\"center\">\r\n                <Flex margin=\"margin-bottom: 2px;\">\r\n                    <ShareIcon stroke={darkMode ? \"rgb(230, 230, 230)\" : \"black\"} height={16} width={18} />\r\n                </Flex>\r\n                <Text margin=\"margin-left: 10px; margin-bottom: 3px;\" size=\"12.8\" color={darkMode ? \"rgb(230, 230, 230)\" : \"rgb(25, 25, 25)\"} weight=\"500\">Share</Text>\r\n            </Row>\r\n            {Components}\r\n        </Row>\r\n    )\r\n}","import React from 'react';\r\nimport {Flex, Col, Row, Text, Image, Box} from '../../../components/common/base';\r\nimport {PaperIcon, CodeIcon} from '../../../icons/utilities';\r\nimport {bgStyler} from '../../../styles';\r\nimport {StudioLight} from '../../../icons/headericons';\r\nimport { VisualizerEvent } from '../../../contexts/GlobalContext';\r\nimport {Bottom, FeedTop} from './common'\r\n\r\nexport const ModelConfig = ({model, darkMode, setVisualizer, visualizer}) => {\r\n    return (\r\n        <Row justify=\"space-between\" width=\"230px\">\r\n            <Row padding=\"padding: 3px\" to=\"cursor\" cursorOpaFalse={true} align=\"center\">\r\n                <Flex margin=\"margin-bottom: 2px;\">\r\n                    <PaperIcon stroke={darkMode ? \"white\" : \"black\"} height={15} width={15} />\r\n                </Flex>\r\n                <Text className=\"light\" margin=\"margin-left: 10px; margin-bottom: 3px;\" size=\"11\" weight=\"500\">\r\n                    <a style={{color: darkMode ? \"white\" : \"black\"}} href={model.paper} target=\"_blank\">\r\n                        Paper\r\n                    </a>\r\n                </Text>\r\n            </Row>\r\n            <Row padding=\"padding: 3px\" to=\"cursor\" cursorOpaFalse={true} align=\"center\">\r\n                <CodeIcon stroke={darkMode ? \"white\" : \"black\"} height={18} width={18} />\r\n                <Text className=\"light\" margin=\"margin-left: 10px; margin-bottom: 3px;\" size=\"11\" weight=\"500\">\r\n                    <a style={{color: darkMode ? \"white\" : \"black\"}} href={model.code} target=\"_blank\">\r\n                        Code\r\n                    </a>\r\n                </Text>\r\n            </Row>\r\n            <Row onClick={() => setVisualizer(!visualizer)} padding=\"padding: 3px\" to=\"cursor\" cursorOpaFalse={true} align=\"center\">\r\n                <StudioLight stroke1={darkMode ? \"white\" : \"black\"} stroke2={darkMode ? \"white\" : \"black\"} height={18} width={18} />\r\n                <Text className=\"light\" margin=\"margin-left: 10px; margin-bottom: 3px;\" size=\"11\" weight=\"500\">Studio</Text>\r\n            </Row>\r\n        </Row>\r\n    )\r\n}\r\n\r\nexport const Hashtags = ({darkMode, hashtags}) => {\r\n    return (\r\n        <Row width=\"500px\" margin=\"margin-bottom: 5px;\" style={{overflow: \"hidden\"}}>\r\n            {hashtags.map(item => <a href={'/hashtags/'+item.toLowerCase().replace(\" \", \"-\")} style={{lineHeight: '18px'}}>\r\n                <Text size=\"14\" style={{whiteSpace: \"nowrap\"}} key={item} color={\"white\"} margin=\"margin-right: 8px;\">#{item}</Text>\r\n            </a>)}\r\n        </Row>\r\n    )\r\n}\r\n\r\nexport const Model = ({content, darkMode}) => {\r\n    const {visualizer, setVisualizer} = VisualizerEvent();\r\n    return (\r\n        <Box margin=\"margin: 15px 30px 15px 30px\" padding=\"padding: 10px 15px\" style={{width: 650}} bg={bgStyler(darkMode)} br=\"20px;\">\r\n            <FeedTop user={content.writer_id} darkMode={darkMode} Components={<ModelConfig model={content} darkMode={darkMode} visualizer={visualizer} setVisualizer={setVisualizer} />} />\r\n            <Row margin=\"margin: 10px 0px;\">\r\n                <Col>\r\n                    <Text weight=\"600\">\r\n                        {content.title}\r\n                    </Text>\r\n                    <Text margin=\"margin: 10px 0px;\" lh={21} size=\"14\" style={{maxHeight: 125, overflow: 'hidden'}}>{/*105 125*/}\r\n                        {content.description}\r\n                    </Text>\r\n                </Col>\r\n            </Row>\r\n            <Flex style={{height: '100%', width: '100%', maxHeight: 619}} align=\"center\" justify=\"center\">\r\n                <Image src={content.thumbnail} style={{height: '100%', width: '100%'}} of=\"cover\" />\r\n            </Flex>\r\n            <Bottom darkMode={darkMode} />\r\n        </Box>\r\n    )\r\n}\r\n\r\nexport default Model;","import React from 'react';\r\nimport {Flex, Col ,Row, Text, Image, CirclePic} from './base';\r\nimport FollowButton from '../buttons/folllowButton';\r\n\r\nexport const Friend = ({user}) => {\r\n    return (\r\n        <Col padding=\"padding: 5px 10px\">\r\n            <Row margin=\"margin-bottom: 7px;\">\r\n                <a href={'/'+user.userId} style={{marginTop: 3}}>\r\n                    <CirclePic size={40} of=\"cover\" image={user.avatar}/>\r\n                </a>\r\n                <Col margin=\"margin-left: 15px;\" flex={1}>\r\n                    <Row justify=\"space-between\" align=\"center\" margin=\"margin-bottom: 3px;\">\r\n                        <a href={'/'+user.userId} style={{marginBottom: 2.5}}>\r\n                            <Text size=\"13\" weight=\"600\" style={{overflow: 'hidden'}}>\r\n                                {user.name}\r\n                            </Text>\r\n                        </a>\r\n                        <Flex margin=\"margin-top: 1px;\">\r\n                            <FollowButton scale={0.9} />\r\n                        </Flex>\r\n                    </Row>\r\n                    <a href={'/'+user.userId} style={{lineHeight: 1}}>\r\n                        <Text weight=\"400\" size=\"11\" style={{overflow: 'hidden', maxHeight: 47}}>\r\n                            {user.briefIntroduction}\r\n                        </Text>\r\n                    </a>\r\n                </Col>\r\n            </Row>\r\n        </Col>\r\n    )\r\n};\r\n\r\nexport default Friend;","//following keys are expected to be the table of users collection.\r\nimport me from './avatars/me.jpeg';\r\nimport kaiming from './avatars/kaiminghe.jpg';\r\nimport rohit from './avatars/rohit.png';\r\nimport thomas from './avatars/thomas.jpg';\r\n\r\nexport default [\r\n    {\r\n        id: \"00001\",\r\n        userId: \"jonychoi\",\r\n        name: \"Su Hyung Choi\",\r\n        avatar: me,\r\n        briefIntroduction: \"Undergraduate student researching in Artificial Intelligence, Computer Vision\",\r\n        fullIntroduction: \"\",\r\n        workingPlace: \"CVLAB @ Korea University\",\r\n        location: \"Seoul, South Korea\",\r\n        position: \"Research Intern\",\r\n        contact: {\r\n            email: \"thesky7@korea.ac.kr\",\r\n            phone: \"\",\r\n            homepage: \"jonychoi.github.io\",\r\n            github: \"jonychoi\",\r\n            twitter: \"\",\r\n        },\r\n        activities: [],\r\n        googleScholar: \"\",\r\n        awards: \"\",\r\n        researchInterests: [\"Computer Vision\", \"Deep Learning\"],\r\n    },\r\n    {\r\n        id: \"00004\",\r\n        userId: \"rohit\",\r\n        name: \"Rohit Girdhar\",\r\n        avatar: rohit,\r\n        briefIntroduction: \"Research Scientist at Facebook AI\",\r\n        fullIntroduction: \"I am a research scientist at Facebook AI Research (FAIR) working on computer vision and machine learning. My current research focuses on modeling people and scenes over (3D) space and time, with applications including 3D recognition, video understanding and physical reasoning. I obtained a PhD from Carnegie Mellon University (CMU) where I worked with Deva Ramanan (here's a link to my dissertation). Earlier I graduated with a masters from CMU as well, working with Martial Hebert, Abhinav Gupta, Kris Kitani and David Fouhey as a Siebel Scholar. Even before I was a CS undergrad at IIIT, Hyderabad, working with C. V. Jawahar. I have also been fortunate to work with some amazing people through internships, at DeepMind (with Andrew Zisserman, João Carreira and Carl Doersch), Adobe Research (with Josef Sivic and Bryan Russell) and Facebook AI (with Lorenzo Torresani, Georgia Gkioxari and Du Tran).\",\r\n        workingPlace: \"Facebook AI Research (FAIR)\",\r\n        location: \"Newyork\",\r\n        position: \"Research Scientist\",\r\n        contact: {\r\n            email: \"rgirdhar@alumni.cmu.edu\",\r\n            phone: \"\",\r\n            homepage: \"https://rohitgirdhar.github.io/\",\r\n            github: \"rohitgirdhar\",\r\n            twitter: \"_rohitgirdhar_\",\r\n        },\r\n        activities: [],\r\n        googleScholar: \"https://scholar.google.co.in/citations?user=7cuwdr8AAAAJ&hl=en\",\r\n        awards: [],\r\n        researchInterests: [\"3D recognition\", \"Video Understanding\", \"Physical Reasoning\"]\r\n    },\r\n    {\r\n        id: \"00002\",\r\n        userId: \"kaiminghe\",\r\n        name: \"Kaming He\",\r\n        avatar: kaiming,\r\n        briefIntroduction: \"Research Scientist at Facebook AI\",\r\n        fullIntroduction: \"I am a Research Scientist at Facebook AI Research (FAIR) as of 2016. Before that I was with Microsoft Research Asia (MSRA), which I joined in 2011 after receiving my PhD. My research interests are in computer vision and deep learning. I am a recipient of the PAMI Young Researcher Award in 2018, the Best Paper Award in CVPR 2009, CVPR 2016, ICCV 2017, the Best Student Paper Award in ICCV 2017, the Best Paper Honorable Mention in ECCV 2018, CVPR 2021, and the Everingham Prize in ICCV 2021. My paper on Deep Residual Networks (ResNets) is the most cited paper in all areas in Google Scholar Metrics 2020. Applications of ResNets also include language, speech, and AlphaGo.\",\r\n        workingPlace: \"Facebook AI Research (FAIR)\",\r\n        location: \"Menlo Park, CA\",\r\n        position: \"Research Scientist\",\r\n        contact: {\r\n            email: \"kaiminghe@fb.com\",\r\n            phone: \"\",\r\n            homepage: \"http://kaiminghe.com\",\r\n            github: \"\",\r\n            twitter: \"\",\r\n        },\r\n        activities: [\r\n            \"Program Chair: ICCV 2023\",\r\n            \"Area Chair: CVPR 2016, ICCV 2017, CVPR 2018, ECCV 2018, CVPR 2020, CVPR 2021\",\r\n            \"Associate Editor: IJCV 2016 - 2019\",\r\n            \"Co-organize a tutorial on Visual Recognition at ECCV 2018.\",\r\n            \"Co-organize a tutorial on Visual Recognition at CVPR 2018.\",\r\n            \"Co-organize a tutorial on Instance-level Recognition at ICCV 2017.\",\r\n            \"Co-organize a tutorial on Deep Learning for Objects and Scenes at CVPR 2017.\",\r\n            \"Invited to give a tutorial on Deep Residual Networks at ICML 2016.\",\r\n            \"Co-organize a tutorial on Object Detection at ICCV 2015.\",\r\n        ],\r\n        googleScholar: \"https://scholar.google.com/citations?user=DhtAFkwAAAAJ&hl=en\",\r\n        awards: [\"PAMI Everingham Prize, 2021\", \"CVPR Best Paper Honorable Mention, 2021\", \"ECCV Best Paper Honorable Mention, 2018\", \"PAMI Young Researcher Award, 2018\", \"ICCV Best Paper Award (Marr Prize), 2017\", \"ICCV Best Student Paper Award, 2017\", \"CVPR Best Paper Award, 2016\", \"CVPR Best Paper Award, 2009\", \"Outstanding Reviewer: CVPR 2015, ICCV 2015, CVPR 2017\", \"Microsoft Research Asia Fellowship, 2009\", \"Microsoft Research Asia Young Fellowship, 2006\"],\r\n        researchInterests: [\"Computer Vision\", \"Deep Learning\"],\r\n    },\r\n    {\r\n        id: \"00005\",\r\n        userId: \"mannat\",\r\n        name: \"Mannat Singh\",\r\n        avatar: \"https://scholar.googleusercontent.com/citations?view_op=medium_photo&user=QOO8OCcAAAAJ&citpid=4\",\r\n        briefIntroduction: \"Research Engineer at Facebook AI\",\r\n        fullIntroduction: \"\",\r\n        workingPlace: \"Facebook AI Research (FAIR)\",\r\n        location: \"Greater Newyork City Area\",\r\n        position: \"Research Engineer\",\r\n        contact: {\r\n            email: \"\",\r\n            phone: \"\",\r\n            homepage: \"https://github.com/mannatsingh\",\r\n            github: \"mannatsingh\",\r\n            twitter: \"\",\r\n        },\r\n        activities: [],\r\n        googleScholar: \"https://scholar.google.com/citations?user=QOO8OCcAAAAJ&hl=en\",\r\n        awards: [],\r\n        researchInterests: [\"Computer Vision\", \"Machine Learning\"]\r\n    },\r\n    {\r\n        id: \"00006\",\r\n        userId: \"thomas\",\r\n        name: \"Thomas Müller\",\r\n        avatar: thomas,\r\n        briefIntroduction: \"Senior Research Scientist at NVIDIA\",\r\n        fullIntroduction: \"Hi there, I'm Thomas! I'm passionate about all kinds of nerdy things like AI, physics, space travel, computers, music, etc. I am also a senior research scientist at NVIDIA where I work on machine learning and computer graphics. Before that, I received a PhD from ETH and Disney Research, where I had the pleasure to integrate some of my work into Disney's Hyperion Renderer. In my free time, I am most notably involved in developing the online rhythm game osu!. I also enjoy working on all kinds of pet projects. Drop me an email if you would like to chat!\",\r\n        workingPlace: \"NVIDIA\",\r\n        location: \"\",\r\n        position: \"Senior Research Scientist\",\r\n        contact: {\r\n            email: \"thomas94@gmx.net\",\r\n            phone: \"\",\r\n            homepage: \"https://tom94.net/\",\r\n            github: \"\",\r\n            twitter: \"\",\r\n        },\r\n        activities: [],\r\n        googleScholar: \"https://scholar.google.ch/citations?user=csrnbFYAAAAJ&hl=en\",\r\n        awards: [],\r\n        researchInterests: [\"Artificial Intelligence\", \"Machine Learning\", \"Real-Time Rendering\"]\r\n    },\r\n]","import React from 'react';\r\nimport {Flex, Col, Row, Text, Image, CirclePic, Box} from '../../../components/common/base';\r\nimport me from '../../../imgs/me.jpeg';\r\nimport bg from '../../../imgs/background.jpeg';\r\nimport Friend from '../../../components/common/friend';\r\nimport {bgStyler} from '../../../styles';\r\nimport users from '../../../data/users';\r\n\r\nexport const ProfileBox = ({darkMode}) => {\r\n    return (\r\n        <Box width=\"280px\" margin=\"margin-bottom: 20px;\" position=\"relative\" bg={bgStyler(darkMode)} style={{overflow: 'hidden'}} br=\"10px\">\r\n            <a href={'/' + 'jonychoi'}>\r\n                <Col>\r\n                    <Flex>\r\n                        <Image width=\"100%\" of=\"cover\" height=\"100px\" src={bg} />\r\n                    </Flex>\r\n                    <Flex style={{alignSelf: \"center\", top: 50}} align=\"center\" justify=\"center\" position=\"absolute\">\r\n                        <CirclePic image={me} size={80} />\r\n                    </Flex>\r\n                </Col>\r\n                <Col margin=\"margin-top: 35px;\" padding=\"padding: 15px\">\r\n                    <Flex style={{alignSelf: \"center\"}} margin=\"margin-bottom: 10px;\">\r\n                        <Text className=\"bold\" weight=\"700\" size=\"14\" margin=\"margin-bottom: 3px;\">Su Hyung Choi</Text>\r\n                    </Flex>\r\n                    <Flex>\r\n                        <Text size=\"13\" weight=\"400\">Undergraduate student researching in Artificial Intelligence, Computer Vision</Text>\r\n                    </Flex>\r\n                </Col>\r\n            </a>\r\n            <Col padding=\"padding: 5px 15px;padding-bottom: 20px;\" >\r\n                <Row align=\"center\" justify=\"space-between\">\r\n                    <Col>\r\n                        <Row>\r\n                            <Text size=\"10.8\" weight=\"500\" className=\"light\" margin=\"margin-right: 5px\">12</Text>\r\n                            <Text size=\"10.8\" weight=\"500\" className=\"light\">MODELS</Text>\r\n                        </Row>\r\n                    </Col>\r\n                    <Col>\r\n                        <Row>\r\n                            <Text size=\"10.8\" weight=\"500\" className=\"light\" margin=\"margin-right: 5px\">12</Text>\r\n                            <Text size=\"10.8\" weight=\"500\" className=\"light\">BADGES</Text>\r\n                        </Row>\r\n                    </Col>\r\n                    <Col>\r\n                        <Row>\r\n                            <Text size=\"10.8\" weight=\"500\" className=\"light\" margin=\"margin-right: 5px\">12</Text>\r\n                            <Text size=\"10.8\" weight=\"500\" className=\"light\">NFTS</Text>\r\n                        </Row>\r\n                    </Col>\r\n                </Row>\r\n            </Col>\r\n        </Box>\r\n    )\r\n}\r\n\r\nexport const RecommendFriends = ({darkMode}) => {\r\n    return (\r\n        <Box width=\"280px\" padding=\"padding: 5px;\" bg={bgStyler(darkMode)} style={{overflow: 'hidden'}} br=\"10px\">\r\n            <Text className=\"light\" size=\"14\" weight=\"600\" margin=\"margin: 10px; margin-top: 5px;\">Recommend Friends</Text>\r\n            <Col>\r\n                {users.slice(1, 8).map(item => <Friend key={item.name} user={item} />)}\r\n            </Col>\r\n            <Text className=\"light\" weight=\"600\" margin=\"margin: 10px;\" size=\"12.8\">View all Recommendations</Text>\r\n        </Box>\r\n    )\r\n}\r\n\r\nexport const Lefts = ({darkMode}) => {\r\n    return (\r\n        <Col width=\"280px\">\r\n            <Col>\r\n                <ProfileBox darkMode={darkMode} />\r\n                <RecommendFriends darkMode={darkMode} />\r\n            </Col>\r\n        </Col>\r\n    )\r\n}\r\n\r\nexport default Lefts;","import React, {useState, useEffect} from 'react';\r\nimport useInput from '../../../hooks/useInput';\r\nimport {Flex, Col, Row, Text, Image, CirclePic, Input, Box} from '../../../components/common/base';\r\nimport { SearchIcon } from '../../../icons/utilities';\r\nimport {bgStyler, blueLowColor, extremehueBlue} from '../../../styles';\r\nimport styled from 'styled-components';\r\n\r\nexport const Search = ({darkMode}) => {\r\n    return (\r\n        <Row align=\"center\" position=\"relative\" width=\"100%\">\r\n            <Input color={darkMode ? \"white\" : \"black\"} width=\"100%\" padding=\"padding: 10px 0px; padding-right: 20px;\" className=\"light\" weight=\"400\" margin=\"margin: 5px 0px;\" size=\"14\" bg=\"rgba(0,0,0,0)\" placeholder=\"Search\" style={{border: 0, borderBottomWidth: 1, borderBottomColor:\"rgb(100, 100, 100)\", borderBottomStyle: \"solid\"}} />\r\n            <Flex position=\"absolute\" style={{right: 0}}>\r\n                <SearchIcon stroke={\"rgb(100, 100, 100)\"} width={18} height={18} />\r\n            </Flex>\r\n        </Row>\r\n    )\r\n}\r\n\r\nconst data = [\r\n    \"StyleGAN3\",\r\n    \"VRT\",\r\n    \"moolib\",\r\n    \"Objectron\",\r\n    \"A ConvNet for the 2020s\",\r\n    \"Learning Super-Features for Image Retrieval\",\r\n    \"Instant Neural Graphics Primitives\",\r\n]\r\n\r\nconst Hashtag = styled(Flex)`\r\n    display: inline-block;\r\n    cursor: pointer;\r\n    margin-right: 10px;\r\n    margin-bottom: 10px;\r\n    padding: 5px 15px;\r\n    padding-bottom: 7px;\r\n    border-radius: 20px;\r\n    background-color: ${props => props.darkMode ? \"rgb(18, 18, 18)\" : \"rgb(255, 255, 255)\"}\r\n`;\r\n\r\nexport const Trendings = ({darkMode}) => {\r\n    return (\r\n        <Box width=\"280px\" padding=\"padding: 15px;\" margin=\"margin-bottom: 10px;\" bg={bgStyler(darkMode)} style={{overflow: 'hidden'}} br=\"10px\">\r\n            <Text className=\"bold\" size=\"15\">Trendings</Text>\r\n            <Search darkMode={darkMode} />\r\n            <Flex style={{display: 'block'}} margin=\"margin-top: 15px;\">\r\n                {data.map(item => <Hashtag shadow={true} darkMode={darkMode}>\r\n                    <Text size=\"13\" className=\"light\" weight=\"500\"># {item}</Text>\r\n                </Hashtag>)}\r\n            </Flex>\r\n            <Text className=\"light\" weight=\"600\" margin=\"margin: 10px 0px;\" size=\"12.8\">View all trendings</Text>\r\n        </Box>\r\n    )\r\n}\r\n\r\nexport const Trendingsa = ({darkMode}) => {\r\n    return (\r\n        <Box width=\"280px\" padding=\"padding: 15px;\" height=\"600px\" bg={bgStyler(darkMode)} style={{overflow: 'hidden'}} br=\"10px\">\r\n            <Text className=\"bold\" size=\"15\" margin=\"margin-bottom: 5px;\">ToDos Trendings</Text>\r\n            <Col>\r\n                <Text color=\"rgb(150, 150, 150)\">follow btn color change</Text>\r\n                <Text color=\"rgb(150, 150, 150)\">Hashtag color</Text>\r\n                <Text color=\"rgb(150, 150, 150)\">To Do</Text>\r\n                <Text color=\"rgb(150, 150, 150)\">Done minor things first and do gradually</Text>\r\n                <Text color=\"rgb(150, 150, 150)\">- Premium user have neural logo right name with circle</Text>\r\n                <Text color=\"rgb(150, 150, 150)\">- Trendings (Expand when click bottom)</Text>\r\n                <Text color=\"rgb(150, 150, 150)\">- Model section and dataset section</Text>\r\n                <Text color=\"rgb(150, 150, 150)\">- Paper & Code & Studio</Text>\r\n                <Text color=\"rgb(150, 150, 150)\">- Datasets</Text>\r\n                <Text color=\"rgb(150, 150, 150)\">- get user papers from google scholar (paper click, get specific data)</Text>\r\n                <Text color=\"rgb(150, 150, 150)\">- hashtags inside paragraph</Text>\r\n                <Text>- my saved papers</Text>\r\n                <Text>- Paper I read</Text>\r\n                <Text>- Paper I'm going to read</Text>\r\n                <Text>- Team workspace - creating models, papers, read papers</Text>\r\n                <Text>- Team members' saved papers</Text>\r\n                <Text>Add comparision between models ex) resnet의 각 분포 convnet의 각 분포</Text>\r\n                <Text>Model save btn</Text>\r\n            </Col>\r\n            <Text className=\"light\" margin=\"margin: 10px 0px;\" size=\"12.8\">View all Recommendations</Text>\r\n        </Box>\r\n    )\r\n}\r\n\r\n\r\nexport const Rights = ({darkMode}) => {\r\n    return (\r\n        <Col width=\"280px\">\r\n            <Col>\r\n                <Trendings darkMode={darkMode} />\r\n            </Col>\r\n        </Col>\r\n    )\r\n}\r\n\r\nexport default Rights;","import logo from './avatars/logocircle.png';\r\n\r\nexport default [\r\n    {\r\n        id: \"team-00001\",\r\n        userId: \"neuralverse\",\r\n        name: \"Neuralverse\",\r\n        avatar: logo,\r\n        briefIntroduction: \"Beyond the State of the Arts\",\r\n        fullIntroudction: \"Neuralverse's mission aims to express the infinite creativity of humans and to pursue truth within the universe.\",\r\n        workingPlace: \"NEURALVERSE\",\r\n        location: \"\",\r\n        members: [],\r\n        manager: [],\r\n        vice_manager: [],\r\n        contact: {\r\n            email: \"team-neuralverse@neuralverse.us\",\r\n            phone: \"\",\r\n            homepage: \"https://www.neuralverse.us\",\r\n            github: \"neuralverse\",\r\n            twitter: \"\",\r\n        },\r\n        activities: [],\r\n        papers: [],\r\n        researchInterests: [\"Artificial Intelligence\", \"Deep Learning\", \"Neural Ops\"]\r\n    },\r\n]","import users from '../users';\r\nimport teams from '../teams';\r\n\r\nexport default [\r\n    {\r\n        writer_id: users[2],\r\n        title: \"Omnivore: A Single Model for Many Visual Modalities\",\r\n        description: \"Prior work has studied different visual modalities in isolation and developed separate architectures for recognition of images, videos, and 3D data. Instead, in this paper, we propose a single model which excels at classifying images, videos, and single-view 3D data using exactly the same model parameters. Our 'Omnivore' model leverages the flexibility of transformer-based architectures and is trained jointly on classification tasks from different modalities. Omnivore is simple to train, uses off-the-shelf standard datasets, and performs at-par or better than modality-specific models of the same size. A single Omnivore model obtains 86.0% on ImageNet, 84.1% on Kinetics, and 67.1% on SUN RGB-D. After finetuning, our models outperform prior work on a variety of vision tasks and generalize across modalities. Omnivore's shared visual representation naturally enables cross-modal recognition without access to correspondences between modalities. We hope our results motivate researchers to model visual modalities together.\",\r\n        date: \"20 Jan 2022\",\r\n        authors: [\"Rohit Girdhar\", \"Mannat Singh\", \"Nikhila Ravi\", \"Laurens van der Maaten\", \"Armand Joulin\", \"Ishan Misra\"],\r\n        paper: \"https://arxiv.org/abs/2201.08377v1\",\r\n        code: \"https://github.com/facebookresearch/omnivore\",\r\n        thumbnail: \"https://raw.githubusercontent.com/facebookresearch/omnivore/main/.github/fig1.jpg\",\r\n        feautred: \"Ranked #1 on Semantic Segmentation on NYU Depth v2\",\r\n        tasks: [\"Action Classification\", \"Action Recognition\", \"Image Classification\", \"Scene Recognition\", \"Semantic Segmentation\",],\r\n        datasets: [\"Kinetics\", \"Places\", \"NYUv2\", \"SUN RGB-D\", \"Kinetics 400\", \"iNaturalist\", \"Something-Something V2\", \"Oxford-IIIT Pets\", \"EPIC-KITCHENS-100\"],\r\n        paperswithcode: \"https://paperswithcode.com/paper/omnivore-a-single-model-for-many-visual\",\r\n    },\r\n    {\r\n        writer_id: users[4],\r\n        title: \"Revisiting Weakly Supervised Pre-Training of Visual Perception Models\", \r\n        description: \"Model pre-training is a cornerstone of modern visual recognition systems. Although fully supervised pre-training on datasets like ImageNet is still the de-facto standard, recent studies suggest that large-scale weakly supervised pre-training can outperform fully supervised approaches. This paper revisits weakly-supervised pre-training of models using hashtag supervision with modern versions of residual networks and the largest-ever dataset of images and corresponding hashtags. We study the performance of the resulting models in various transfer-learning settings including zero-shot transfer. We also compare our models with those obtained via large-scale self-supervised learning. We find our weakly-supervised models to be very competitive across all settings, and find they substantially outperform their self-supervised counterparts. We also include an investigation into whether our models learned potentially troubling associations or stereotypes. Overall, our results provide a compelling argument for the use of weakly supervised learning in the development of visual recognition systems. Our models, Supervised Weakly through hashtAGs (SWAG), are available publicly.\",\r\n        date: \"20 Jan 2022\",\r\n        authors: [\"Mannat Singh\", \"Laura Gustafson\", \"Aaron Adcock\", \"Vinicius de Freitas Reis\", \"Bugra Gedik\", \"Raj Prateek Kosaraju\", \"Dhruv Mahajan\", \"Ross Girshick\", \"Piotr Dollár\", \"Laurens van der Maaten\"],\r\n        paper: \"https://arxiv.org/abs/2201.08371v1\",\r\n        code: \"https://github.com/facebookresearch/SWAG\",\r\n        thumbnail: 'https://production-media.paperswithcode.com/thumbnails/paper/2201.08371.jpg',\r\n        tasks: [\"Fine-Grained\", \"Image Classification\",\"mage Classification\", \"Self-Supervised Learning\" ,\"Transfer Learning\"],\r\n        featured: \"Ranked #1 on Image Classification on Places365-Standard (using extra training data)\",\r\n        datasets: [\"ImageNet\", \"CUB-200-2011\", \"Places\", \"iNaturalist\", \"ObjectNet\", \"Places365\", \"JFT-3B\"],\r\n        paperswithcode: \"https://paperswithcode.com/paper/revisiting-weakly-supervised-pre-training-of\",\r\n    },\r\n    {\r\n        writer_id: users[3],\r\n        title: \"Instant Neural Graphics Primitives with a Multiresolution Hash Encoding\", \r\n        description: \"Neural graphics primitives, parameterized by fully connected neural networks, can be costly to train and evaluate. We reduce this cost with a versatile new input encoding that permits the use of a smaller network without sacrificing quality, thus significantly reducing the number of floating point and memory access operations: a small neural network is augmented by a multiresolution hash table of trainable feature vectors whose values are optimized through stochastic gradient descent. The multiresolution structure allows the network to disambiguate hash collisions, making for a simple architecture that is trivial to parallelize on modern GPUs. We leverage this parallelism by implementing the whole system using fully-fused CUDA kernels with a focus on minimizing wasted bandwidth and compute operations. We achieve a combined speedup of several orders of magnitude, enabling training of high-quality neural graphics primitives in a matter of seconds, and rendering in tens of milliseconds at a resolution of 1920 X 1080.\",\r\n        date: \"16 Jan 2022\",\r\n        authors: [\"Thomas Müller\", \"Alex Evans\", \"Christoph Schied\", \"Alexander Keller\"],\r\n        paper: \"https://arxiv.org/abs/2201.05989v1\",\r\n        code: \"https://github.com/nvlabs/instant-ngp\",\r\n        thumbnail: \"https://raw.githubusercontent.com/NVlabs/instant-ngp/master/docs/assets_readme/fox.gif\",\r\n        tasks: [],\r\n        datasets: [],\r\n        paperswithcode: \"https://paperswithcode.com/paper/instant-neural-graphics-primitives-with-a\",\r\n    },\r\n    {\r\n        writer_id: teams[0],\r\n        title: \"A ConvNet for the 2020s\", \r\n        description: 'The \"Roaring 20s\" of visual recognition began with the introduction of Vision Transformers (ViTs), which quickly superseded ConvNets as the state-of-the-art image classification model. A vanilla ViT, on the other hand, faces difficulties when applied to general computer vision tasks such as object detection and semantic segmentation. It is the hierarchical Transformers (e.g., Swin Transformers) that reintroduced several ConvNet priors, making Transformers practically viable as a generic vision backbone and demonstrating remarkable performance on a wide variety of vision tasks. However, the effectiveness of such hybrid approaches is still largely credited to the intrinsic superiority of Transformers, rather than the inherent inductive biases of convolutions. In this work, we reexamine the design spaces and test the limits of what a pure ConvNet can achieve. We gradually \"modernize\" a standard ResNet toward the design of a vision Transformer, and discover several key components that contribute to the performance difference along the way. The outcome of this exploration is a family of pure ConvNet models dubbed ConvNeXt. Constructed entirely from standard ConvNet modules, ConvNeXts compete favorably with Transformers in terms of accuracy and scalability, achieving 87.8% ImageNet top-1 accuracy and outperforming Swin Transformers on COCO detection and ADE20K segmentation, while maintaining the simplicity and efficiency of standard ConvNets.',\r\n        date: \"10 Jan 2022\",\r\n        authors: [\"Zhuang Liu\", \"Hanzi Mao\", \"Chao-yuan Wu\", \"Christoph Feichtenhofer\", \"Trevor Darrell\", \"Saining Xie\"],\r\n        paper: \"https://arxiv.org/abs/2201.03545v1\",\r\n        code: \"https://github.com/facebookresearch/ConvNeXt\",\r\n        thumbnail: \"https://user-images.githubusercontent.com/8370623/148624004-e9581042-ea4d-4e10-b3bd-42c92b02053b.png\",\r\n        tasks: [\"Domain Generalization\", \"Image Classification\", \"Object Detection\", \"Semantic Segmentation\"],\r\n        datasets: [\"ImageNet\", \"COCO\", \"ADE20K\", \"ImageNet-C\", \"ImageNet-A\", \"ImageNet-R\", \"ImageNet-Sketch\"],\r\n        paperswithcode: \"https://paperswithcode.com/paper/a-convnet-for-the-2020s\",\r\n    },\r\n    {\r\n        writer_id: users[1],\r\n        title: \"Masked Autoencoders Are Scalable Vision Learners\",\r\n        description: \"Model pre-training is a cornerstone of modern visual recognition systems. Although fully supervised pre-training on datasets like ImageNet is still the de-facto standard, recent studies suggest that large-scale weakly supervised pre-training can outperform fully supervised approaches. This paper revisits weakly-supervised pre-training of models using hashtag supervision with modern versions of residual networks and the largest-ever dataset of images and corresponding hashtags. We study the performance of the resulting models in various transfer-learning settings including zero-shot transfer. We also compare our models with those obtained via large-scale self-supervised learning. We find our weakly-supervised models to be very competitive across all settings, and find they substantially outperform their self-supervised counterparts. We also include an investigation into whether our models learned potentially troubling associations or stereotypes. Overall, our results provide a compelling argument for the use of weakly supervised learning in the development of visual recognition systems. Our models, Supervised Weakly through hashtAGs (SWAG), are available publicly.\",\r\n        date: \"11 Nov 2021\",\r\n        authors: [\"Kaiming He\", \"Xinlei Chen\", \"Saining Xie\", \"Yanghao Li\", \"Piotr Dollár\", \"Ross Girshick\"],\r\n        paper: \"https://arxiv.org/abs/2111.06377v2\",\r\n        code: \"https://github.com/facebookresearch/mae\",\r\n        thumbnail: \"https://user-images.githubusercontent.com/11435359/146857310-f258c86c-fde6-48e8-9cee-badd2b21bd2c.png\",\r\n        tasks: [\"Domain Generalization\", \"Image Classification\", \"Object Detection\", \"Self-Supervised Image Classification\", \"Self-Supervised Learning\", \"Semantic Segmentation\"],\r\n        datasets: [\"ImageNet\", \"COCO\", \"Places\", \"Places205\", \"ADE20K\", \"ImageNet-C\", \"iNaturalist\", \"ImageNet-A\", \"ImageNet-R\", \"ImageNet-Sketch\", \"Places365\"],\r\n        paperswithcode: \"https://paperswithcode.com/paper/masked-autoencoders-are-scalable-vision\",\r\n    },\r\n    {\r\n        writer_id: teams[0],\r\n        title: \"Deep Learning Interviews: Hundreds of fully solved job interview questions from a wide range of key topics in AI\",\r\n        description: \"The second edition of Deep Learning Interviews is home to hundreds of fully-solved problems, from a wide range of key topics in AI. It is designed to both rehearse interview or exam specific topics and provide machine learning MSc / PhD. students, and those awaiting an interview a well-organized overview of the field. The problems it poses are tough enough to cut your teeth on and to dramatically improve your skills-but they're framed within thought-provoking questions and engaging stories. That is what makes the volume so specifically valuable to students and job seekers: it provides them with the ability to speak confidently and quickly on any relevant topic, to answer technical questions clearly and correctly, and to fully understand the purpose and meaning of interview questions and answers. Those are powerful, indispensable advantages to have when walking into the interview room. The book's contents is a large inventory of numerous topics relevant to DL job interviews and graduate level exams. That places this work at the forefront of the growing trend in science to teach a core set of practical mathematical and computational skills. It is widely accepted that the training of every computer scientist must include the fundamental theorems of ML, and AI appears in the curriculum of nearly every university. This volume is designed as an excellent reference for graduates of such programs.\",\r\n        authors: [\"Shlomo Kashani\", \"Amir Ivry\"],\r\n        paper: \"https://arxiv.org/abs/2201.00650v2\",\r\n        code: \"https://github.com/BoltzmannEntropy/interviews.ai\",\r\n        thumbnail: \"https://raw.githubusercontent.com/BoltzmannEntropy/interviews.ai/main/assets/cover-amazon-print2.png\",\r\n        tasks: [],\r\n        datasets: [],\r\n        paperswithcode: \"https://paperswithcode.com/paper/deep-learning-interviews-hundreds-of-fully\",\r\n    },\r\n    {\r\n        writer_id: teams[0],\r\n        title: \"Detecting Twenty-thousand Classes using Image-level Supervision\",\r\n        description: \"Current object detectors are limited in vocabulary size due to the small scale of detection datasets. Image classifiers, on the other hand, reason about much larger vocabularies, as their datasets are larger and easier to collect. We propose Detic, which simply trains the classifiers of a detector on image classification data and thus expands the vocabulary of detectors to tens of thousands of concepts. Unlike prior work, Detic does not assign image labels to boxes based on model predictions, making it much easier to implement and compatible with a range of detection architectures and backbones. Our results show that Detic yields excellent detectors even for classes without box annotations. It outperforms prior work on both open-vocabulary and long-tail detection benchmarks. Detic provides a gain of 2.4 mAP for all classes and 8.3 mAP for novel classes on the open-vocabulary LVIS benchmark. On the standard LVIS benchmark, Detic reaches 41.7 mAP for all classes and 41.7 mAP for rare classes. For the first time, we train a detector with all the twenty-one-thousand classes of the ImageNet dataset and show that it generalizes to new datasets without fine-tuning. Code is available at https://github.com/facebookresearch/Detic.\",\r\n        date: \"7 Jan 2022\",\r\n        authors: [\"Xingyi Zhou\", \"Rohit Girdhar\", \"Armand Joulin\", \"Phillip Krähenbühl\", \"Ishan Misra\"],\r\n        paper: \"https://arxiv.org/abs/2201.02605v2\",\r\n        code: \"https://github.com/facebookresearch/Detic\",\r\n        thumbnail: \"https://raw.githubusercontent.com/facebookresearch/Detic/main/docs/teaser.jpeg\",\r\n        tasks: [\"Image Classification\"],\r\n        datasets: [\"ImageNet\", \"COCO\", \"Conceptual Captions\", \"LVIS\", \"Objects365\"],\r\n        paperswithcode: \"https://paperswithcode.com/paper/detecting-twenty-thousand-classes-using-image\",\r\n    },\r\n]","import React, {useState, useEffect} from 'react';\r\nimport useInput from '../../../hooks/useInput';\r\nimport {Flex, Col, Row, Text, Image, CirclePic, Input, Box} from '../../../components/common/base';\r\nimport {ImageIcon, VideoIcon, EventIcon, DocumentIcon} from '../../../icons/createpost';\r\nimport {bgStyler, hueStyler} from '../../../styles';\r\nimport {ModelIcon} from '../../../icons/headericons';\r\nimport me from '../../../imgs/me.jpeg';\r\nimport Model from './modelFeed';\r\nimport Feed from './feed';\r\nimport Lefts from '../lefts';\r\nimport Rights from '../rights';\r\nimport feeds from '../../../data/feeds';\r\n\r\n//model 첨부하기\r\nexport const WriteFeed = ({darkMode}) => {\r\n    const {value, onChange} = useInput(\"\")\r\n    const d = new Date();\r\n    let day = String(d).split(\" \")[2]\r\n    return (\r\n        <Box justify=\"space-between\" margin=\"margin: 0px 30px 10px 30px\" padding=\"padding: 15px;\" bg={bgStyler(darkMode)} br=\"10px\" width=\"650px\" height=\"120px\">\r\n            <Row>\r\n                <CirclePic image={me} size={50} />\r\n                <Input \r\n                    margin=\"margin-left: 10px;\"\r\n                    placeholderTextColor={darkMode? \"white\" : \"black\"}\r\n                    padding=\"padding-left: 10px;\" \r\n                    color={darkMode ? \"white\" : \"black\"} \r\n                    bg=\"rgba(0,0,0,0)\" \r\n                    style={{borderTop: 0, borderLeft: 0, borderRight: 0, borderBottom: \"1px solid rgb(100, 100, 100)\", width: '100%'}} \r\n                    placeholder={\"Write a Verse\"} \r\n                    size=\"14\"\r\n                    value={value} onChange={onChange}  />\r\n            </Row>\r\n            <Row align=\"center\" justify=\"space-between\">\r\n                <Row to=\"cursor\" align=\"center\">\r\n                    <ImageIcon stroke={darkMode ? \"rgb(200, 200, 200)\" : \"rgb(100, 100, 100)\"} width={18} height={18} />\r\n                    <Text size=\"11\" className=\"light\" weight=\"700\" margin=\"margin-left: 10px;\">PHOTO</Text>\r\n                </Row>\r\n                <Row to=\"cursor\" align=\"center\">\r\n                    <VideoIcon stroke={darkMode ? \"rgb(200, 200, 200)\" : \"rgb(100, 100, 100)\"} width={18} height={18} />\r\n                    <Text size=\"11\" className=\"light\" weight=\"700\" margin=\"margin-left: 10px;\">VIDEO</Text>\r\n                </Row>\r\n                <Row to=\"cursor\" align=\"center\">    \r\n                    <ModelIcon stroke1={darkMode ? \"rgb(200, 200, 200)\" : \"rgb(100, 100, 100)\"} stroke2={darkMode ? \"rgb(200, 200, 200)\" : \"rgb(100, 100, 100)\"} width={20} height={20} />\r\n                    <Text size=\"11\" className=\"light\" weight=\"700\" margin=\"margin-left: 10px;\">MODEL</Text>\r\n                </Row>\r\n                <Row to=\"cursor\" align=\"center\">\r\n                    <DocumentIcon stroke={darkMode ? \"rgb(200, 200, 200)\" : \"rgb(100, 100, 100)\"} width={18} height={18} />\r\n                    <Text size=\"11\" className=\"light\" weight=\"700\" margin=\"margin-left: 10px;\">DOCUMENT</Text>\r\n                </Row>\r\n                <Row to=\"cursor\" align=\"center\">\r\n                    <Flex width=\"18px\" height=\"18px\" align=\"center\" justify=\"center\" position=\"relative\">\r\n                        <Text color={darkMode ? \"rgb(200, 200, 200)\" : \"rgb(100, 100, 100)\"} size=\"11\" className=\"light\" weight=\"700\" position=\"absolute\">{day}</Text>\r\n                        <Flex position=\"absolute\">\r\n                            <EventIcon stroke={darkMode ? \"rgb(200, 200, 200)\" : \"rgb(100, 100, 100)\"} width={18} height={18} />\r\n                        </Flex>\r\n                    </Flex>\r\n                    <Text size=\"11\" className=\"light\" weight=\"700\" margin=\"margin-left: 10px;\">EVENT</Text>\r\n                </Row>\r\n            </Row>\r\n        </Box>\r\n    )\r\n}\r\n\r\nexport const Main = ({darkMode}) => {\r\n    return (\r\n        <Row>\r\n            <Lefts darkMode={darkMode} />\r\n            <Col>\r\n                <WriteFeed darkMode={darkMode} />\r\n                {feeds.map(item => <Model key={item.title} content={item} darkMode={darkMode} />)}\r\n            </Col>\r\n            <Rights darkMode={darkMode} />\r\n        </Row>\r\n    )\r\n}\r\n\r\nexport default Main;","import React from 'react';\r\nimport {Row} from '../../components/common/base';\r\nimport {ThemeEvent} from '../../contexts/GlobalContext';\r\nimport { GlobalBgStyler } from '../../styles';\r\nimport Main from './main';\r\n\r\nexport const Trends = ({route}) => {\r\n    const {darkMode} = ThemeEvent();\r\n    return (\r\n        <Row bg={darkMode ? \"rgb(15, 15, 15)\" : \"rgb(240, 240, 240)\"} style={{display: route == 1 ? 'flex': 'none', paddingTop: 110}} justify=\"center\">\r\n            <Main darkMode={darkMode} />\r\n        </Row>\r\n    )\r\n};\r\n\r\nexport default Trends;","import React, {useState, useEffect} from 'react'\r\nimport {Flex, Col, Row, Text, CirclePic, Image, Input, Box} from '../../components/common/base';\r\nimport gan from '../../imgs/gan.png';\r\nimport Button from '../../components/buttons/button';\r\nimport {bgStyler, hueStyler, btnStyler, blueColor, redColor, purLowColor, purColor, blueLowColor} from '../../styles';\r\nimport {RightIcon, BenchmarkIcon, SearchIcon, CloseIcon} from '../../icons/utilities';\r\nimport styled from 'styled-components';\r\n\r\nexport const TopConfig = ({bar, setBar}) => {\r\n    return (\r\n        <Row>\r\n\r\n        </Row>\r\n    )\r\n}","import React from 'react';\r\nimport {Col, Row, Flex, Text, Image, Box} from '../../components/common/base';\r\nimport {bgStyler} from '../../styles';\r\n\r\nexport const DesignBar = ({darkMode}) => {\r\n    return (\r\n        <Col>\r\n        \r\n        </Col>   \r\n    )\r\n};\r\n\r\nexport default DesignBar;","import React, {useState, useEffect, useCallback} from 'react';\r\nimport {Col, Row, Flex, Text, Image, Box} from '../../components/common/base';\r\nimport { DragDropContext, Droppable, Draggable } from \"react-beautiful-dnd\";\r\nimport {TopConfig} from './components';\r\n\r\n// fake data generator\r\nconst getItems = (count, offset = 0) =>\r\n  Array.from({ length: count }, (v, k) => k).map(k => ({\r\n    id: `item-${k + offset}-${new Date().getTime()}`,\r\n    content: `item ${k + offset}`\r\n  }));\r\n\r\nconst reorder = (list, startIndex, endIndex) => {\r\n  const result = Array.from(list);\r\n  const [removed] = result.splice(startIndex, 1);\r\n  result.splice(endIndex, 0, removed);\r\n\r\n  return result;\r\n};\r\n\r\n/**\r\n * Moves an item from one list to another list.\r\n */\r\nconst move = (source, destination, droppableSource, droppableDestination) => {\r\n  const sourceClone = Array.from(source);\r\n  const destClone = Array.from(destination);\r\n  const [removed] = sourceClone.splice(droppableSource.index, 1);\r\n\r\n  destClone.splice(droppableDestination.index, 0, removed);\r\n\r\n  const result = {};\r\n  result[droppableSource.droppableId] = sourceClone;\r\n  result[droppableDestination.droppableId] = destClone;\r\n\r\n  return result;\r\n};\r\nconst grid = 8;\r\n\r\nconst getItemStyle = (isDragging, draggableStyle) => ({\r\n  // some basic styles to make the items look a bit nicer\r\n  userSelect: \"none\",\r\n  padding: grid * 2,\r\n  margin: `0 0 ${grid}px 0`,\r\n\r\n  // change background colour if dragging\r\n  background: isDragging ? \"lightgreen\" : \"grey\",\r\n\r\n  // styles we need to apply on draggables\r\n  ...draggableStyle\r\n});\r\nconst getListStyle = isDraggingOver => ({\r\n  background: isDraggingOver ? \"lightblue\" : \"lightgrey\",\r\n  padding: grid,\r\n  width: 250\r\n});\r\n\r\nexport const Test = () => {\r\n  const [state, setState] = useState([getItems(10), getItems(5, 10)]);\r\n\r\n  function onDragEnd(result) {\r\n    const { source, destination } = result;\r\n\r\n    // dropped outside the list\r\n    if (!destination) {\r\n      return;\r\n    }\r\n    const sInd = +source.droppableId;\r\n    const dInd = +destination.droppableId;\r\n\r\n    if (sInd === dInd) {\r\n      const items = reorder(state[sInd], source.index, destination.index);\r\n      const newState = [...state];\r\n      newState[sInd] = items;\r\n      setState(newState);\r\n    } else {\r\n      const result = move(state[sInd], state[dInd], source, destination);\r\n      const newState = [...state];\r\n      newState[sInd] = result[sInd];\r\n      newState[dInd] = result[dInd];\r\n\r\n      setState(newState.filter(group => group.length));\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <button\r\n        type=\"button\"\r\n        onClick={() => {\r\n          setState([...state, []]);\r\n        }}\r\n      >\r\n        Add new group\r\n      </button>\r\n      <button\r\n        type=\"button\"\r\n        onClick={() => {\r\n          setState([...state, getItems(1)]);\r\n        }}\r\n      >\r\n        Add new item\r\n      </button>\r\n      <div style={{ display: \"flex\" }}>\r\n        <DragDropContext onDragEnd={onDragEnd}>\r\n          {state.map((el, ind) => (\r\n            <Droppable key={ind} droppableId={`${ind}`}>\r\n              {(provided, snapshot) => (\r\n                <div\r\n                  ref={provided.innerRef}\r\n                  style={getListStyle(snapshot.isDraggingOver)}\r\n                  {...provided.droppableProps}\r\n                >\r\n                  {el.map((item, index) => (\r\n                    <Draggable\r\n                      key={item.id}\r\n                      draggableId={item.id}\r\n                      index={index}\r\n                    >\r\n                      {(provided, snapshot) => (\r\n                        <div\r\n                          ref={provided.innerRef}\r\n                          {...provided.draggableProps}\r\n                          {...provided.dragHandleProps}\r\n                          style={getItemStyle(\r\n                            snapshot.isDragging,\r\n                            provided.draggableProps.style\r\n                          )}\r\n                        >\r\n                          <div\r\n                            style={{\r\n                              display: \"flex\",\r\n                              justifyContent: \"space-around\"\r\n                            }}\r\n                          >\r\n                            {item.content}\r\n                            <button\r\n                              type=\"button\"\r\n                              onClick={() => {\r\n                                const newState = [...state];\r\n                                newState[ind].splice(index, 1);\r\n                                setState(\r\n                                  newState.filter(group => group.length)\r\n                                );\r\n                              }}\r\n                            >\r\n                              delete\r\n                            </button>\r\n                          </div>\r\n                        </div>\r\n                      )}\r\n                    </Draggable>\r\n                  ))}\r\n                  {provided.placeholder}\r\n                </div>\r\n              )}\r\n            </Droppable>\r\n          ))}\r\n        </DragDropContext>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport const Space = ({bar, setBar}) => {\r\n  return (\r\n    <Flex>\r\n      <TopConfig bar={bar} setBar={setBar} />\r\n    </Flex>\r\n  )\r\n}\r\n\r\nexport default Space;","import React, {useState} from 'react';\r\nimport {Col, Row} from '../../components/common/base';\r\nimport {ThemeEvent} from '../../contexts/GlobalContext';\r\nimport {Main} from './components';\r\nimport { SideBarEvent } from '../../contexts/GlobalContext';\r\nimport DesignBar from './designbar';\r\nimport Space from './space';\r\nimport { GlobalBgStyler } from '../../styles';\r\n\r\nexport const Design = ({route}) => {\r\n    const {darkMode} = ThemeEvent();\r\n    const [bar, setBar] = useState(0);\r\n    return (\r\n        <Col align=\"center\" bg={GlobalBgStyler(darkMode)} style={{display: route == 4 ? 'flex': 'none', paddingTop: 80}}>\r\n            <Space bar={bar} setBar={setBar} darkMode={darkMode} />\r\n            <DesignBar bar={bar} setBar={setBar} darkMode={darkMode} />\r\n        </Col>\r\n    )\r\n};\r\n\r\nexport default Design","import React, {useState} from 'react';\r\nimport {Col, Row} from '../../components/common/base';\r\nimport {ThemeEvent} from '../../contexts/GlobalContext';\r\nimport { GlobalBgStyler } from '../../styles';\r\n\r\nexport const NeuralOps = ({route}) => {\r\n    const {darkMode} = ThemeEvent();\r\n    return (\r\n        <Col align=\"center\" bg={GlobalBgStyler(darkMode)} style={{display: route == 5 ? 'flex': 'none', paddingTop: 80}}>\r\n        </Col>\r\n    )\r\n};\r\n\r\nexport default NeuralOps","import { createGlobalStyle } from 'styled-components';\r\nimport reset from 'styled-reset';\r\nimport { blueColor, purColor, redColor } from './styles';\r\n\r\n \r\nconst GlobalStyle = createGlobalStyle`\r\n.landing {\r\n    // filter: progid: DXImageTransform.Microsoft.gradient(gradientType=1, startColorstr='#003073', endColorstr='#029797');\r\n    // background-image: url(//img.alicdn.com/tps/TB1d.u8MXXXXXXuXFXXXXXXXXXX-1900-790.jpg);\r\n    // background-size: 100%;\r\n    // background-image: -webkit-gradient(linear, 0 0, 100% 100%, color-stop(0, #003073), color-stop(100%, #029797));\r\n    // background-image: -webkit-linear-gradient(135deg, #003073, #029797);\r\n    // background-image: -moz-linear-gradient(45deg, #003073, #029797);\r\n    // background-image: -ms-linear-gradient(45deg, #003073 0, #029797 100%);\r\n    // background-image: -o-linear-gradient(45deg, #003073, #029797);\r\n    // background-image: linear-gradient(135deg, #003073, #029797);\r\n    // text-align: center;\r\n    // margin: 0px;\r\n    // overflow: hidden;\r\n  }\r\n  a {\r\n      color: ${props => props.darkMode ? \"#1C8BD8\" : \"#00B3DA\"}\r\n  }\r\n  a {\r\n    text-decoration: none;\r\n  }\r\n\r\n  a:visited {\r\n    color: inherit;\r\n  }\r\n  ::-webkit-scrollbar {\r\n    width: 5px;\r\n  }\r\n\r\n  /* Track */\r\n  ::-webkit-scrollbar-track {\r\n    background: rgba(0,0,0,0); \r\n  }\r\n  \r\n  /* Handle */\r\n  ::-webkit-scrollbar-thumb {\r\n    background: #888; \r\n  }\r\n\r\n  /* Handle on hover */\r\n  ::-webkit-scrollbar-thumb:hover {\r\n    background: #555; \r\n  }\r\n`;\r\n \r\nexport default GlobalStyle;","import React, {useState, useEffect} from 'react';\nimport Header from './components/header';\nimport Models from './screens/subs/models';\nimport Nfts from './screens/subs/nfts';\nimport Datasets from './screens/subs/datasets';\nimport Login from './screens/subs/login';\nimport Profile from './screens/subs/profile';\nimport MyButton from './components/buttons/myButton';\nimport SideBar from './components/sidebar';\nimport Visualizer from './components/visualizer';\n\nimport Landing from './screens/landing';\nimport NeuralSpace from './screens/neuralspace';\nimport NeuralVerse from './screens/neuralverse';\nimport NeuralStudio from './screens/neuralstudio';\nimport NeuralOps from './screens/neuralops';\nimport GlobalStyle from './globalStyles';\n\nimport { ThemeEvent } from './contexts/GlobalContext';\n\n\nexport const App = ({}) => {\n  const [route, setRoute] = useState(0);\n  const {darkMode} = ThemeEvent();\n  \n  return (\n      <div style={{overflowX: 'hidden'}}>\n        <GlobalStyle darkMode={darkMode} />\n        <Header route={route} setRoute={setRoute} />\n        <Landing route={route} setRoute={setRoute} />\n        <Nfts route={route}/>\n        <Login route={route} />\n        <Profile route={route}/>\n        <NeuralSpace route={route}/>\n        <NeuralVerse route={route}/>\n        <NeuralStudio route={route} />\n        <NeuralOps route={route} />\n        <SideBar />\n        <MyButton />\n        <Visualizer />\n      </div>\n  )\n};\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport GlobalProvider from './contexts/GlobalContext';\n\nReactDOM.render(\n  <React.StrictMode>\n    <GlobalProvider>\n      <App />\n    </GlobalProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n//add web vital later"],"sourceRoot":""}